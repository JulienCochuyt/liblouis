# Please contact robin@chapman.edu when issues are fixed
table:
  locale: en
  grade: 2
  system: ueb
  __assert-match: en-ueb-g2.ctb
tests:

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Missing-grade-1-indicator-for-abbreviation-or-punctuation-that-looks-like-contracted-braille
# https://www.freelists.org/post/liblouis-liblouisxml/FW-Contraction-not-fixed-in-UEB-32-using-JAWS-2018170829

- - 'conceived'
  - '3cvd'
- - 'perceived'
  - 'p}cvd'
- - 'concvd'
  - ';concvd'
  - xfail: grade 1 indicator is missing
- - 'percvd'
  - ';percvd'
  - xfail: grade 1 indicator is missing

# https://www.freelists.org/post/liblouis-liblouisxml/FW-disc-disk-do-not-use-contraction-of-dis-on-UEB-grade-2
# https://www.freelists.org/post/liblouis-liblouisxml/Inconsistent-contraction-followed-by-any-special-character-in-UEB-grade-2
# https://www.freelists.org/post/liblouis-liblouisxml/Fwd-Re-Inconsistent-contraction-followed-by-any-special-character-in-UEB-grade-2

- - 'action comment careful awareness division complicance sentence'
  - 'ac;n com;t c>e;l aw>e;s divi.n complic.e s5t;e'
- - 'action< comment< careful< awareness< division< complicance< sentence<'
  - 'ac;n< com;t< care;l< aware;s< divi.n< compli.e< sent;e<'
  - xfail: contraction follwed by "<" is ignored
- - 'action/ comment/ careful/ awareness/ division/ complicance/ sentence/'
  - 'ac;n/ com;t/ care;l/ aware;s/ divi.n/ compli.e/ sent;e/'
  - xfail: contraction follwed by "/" is ignored
- - 'action\\ comment\\ careful\\ awareness\\ division\\ complicance\\ sentence\\'
  - 'ac;n\\ com;t\\ care;l\\ aware;s\\ divi.n\\ compli.e\\ sent;e\\'
  - xfail: contraction follwed by "\\" is ignored
- - 'action| comment| careful| awareness| division| complicance| sentence|'
  - 'ac;n| com;t| care;l| aware;s| divi.n| compli.e| sent;e|'
  - xfail: contraction follwed by "|" is ignored
- - 'action$ comment$ careful$ awareness$ division$ complicance$ sentence$'
  - 'ac;n$ com;t$ care;l$ aware;s$ divi.n$ compli.e$ sent;e$'
  - xfail: contraction follwed by "$" is ignored
- - 'action% comment% careful% awareness% division% complicance% sentence%'
  - 'ac;n% com;t% care;l% aware;s% divi.n% compli.e% sent;e%'
  - xfail: contraction follwed by "%" is ignored
- - 'action# comment# careful# awareness# division# complicance# sentence#'
  - 'ac;n# com;t# care;l# aware;s# divi.n# compli.e# sent;e#'
  - xfail: contraction follwed by "#" is ignored
- - 'action@ comment@ careful@ awareness@ division@ complicance@ sentence@'
  - 'ac;n@ com;t@ care;l@ aware;s@ divi.n@ compli.e@ sent;e@'
  - xfail: contraction follwed by "@" is ignored
- - 'action~ comment~ careful~ awareness~ division~ complicance~ sentence~'
  - 'ac;n~ com;t~ care;l~ aware;s~ divi.n~ compli.e~ sent;e~'
  - xfail: contraction follwed by "~" is ignored
- - 'action^ comment^ careful^ awareness^ division^ complicance^ sentence^'
  - 'ac;n^ com;t^ care;l^ aware;s^ divi.n^ compli.e^ sent;e^'
  - xfail: contraction follwed by "^" is ignored
- - 'action* comment* careful* awareness* division* complicance* sentence*'
  - 'ac;n* com;t* care;l* aware;s* divi.n* compli.e* sent;e*'
  - xfail: contraction follwed by "*" is ignored
- - 'action& comment& careful& awareness& division& complicance& sentence&'
  - 'ac;n& com;t& care;l& aware;s& divi.n& compli.e& sent;e&'
  - xfail: contraction follwed by "&" is ignored
- - 'action= comment= careful= awareness= division= complicance= sentence='
  - 'ac;n= com;t= care;l= aware;s= divi.n= compli.e= sent;e='
  - xfail: contraction follwed by "=" is ignored
- - 'action+ comment+ careful+ awareness+ division+ complicance+ sentence+'
  - 'ac;n+ com;t+ care;l+ aware;s+ divi.n+ compli.e+ sent;e+'
  - xfail: contraction follwed by "+" is ignored
- - 'action_ comment_ careful_ awareness_ division_ complicance_ sentence_'
  - 'ac;n_ com;t_ care;l_ aware;s_ divi.n_ compli.e_ sent;e_'
  - xfail: contraction follwed by "_" is ignored

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Period-vs-dis-conflict-in-UEB-grade-2

- - 'discv'
  - '4cv'
# - - 'dish'
#   - '4h'  -> actual 'di%'
- - '.cv .h '
  - ';4cv ;4h '
  - xfail: grade 1 indicator is missing preceding a period

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Ambiguous-braille-cell-using-UEB-grade-2-for-Liblouis-33

- - 'reason'
  - 'r1son'
- - 'r,son'
  - 'r;,son'
  - xfail: grade 1 indicator is missing preceding ","

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Missing-grade-1-indicator-for-abbreviation-or-punctuation-that-looks-like-contracted-braille
  
- - 'context accept'
  - '3text a3ept'
- - ':text a:ept'
  - ';:text a;:ept'
  - xfail: grade 1 indicator is missing preceding ":"

# https://www.freelists.org/post/liblouis-liblouisxml/FW-UEB-grade-2-with-repeated-underscores-as-one-or-two-cells-instead-of-full-cells

- - '_ __ ___'
  - '_ _.- _.-_'
  - xfail: multiple "_" becomes single "_"

# https://www.freelists.org/post/liblouis-liblouisxml/FW-Ambiguous-grade-2-UEB-32-in-JAWS-2018

- - 'affect'
  - 'a6ect'
- - 'a!ect'
  - 'a;!ect'
  - xfail: grade 1 indicator is missing preceding "!"

# =============================================================

- - '4xxxeringed'
  - '4xxx}+$'
  - xfail: contraction following non-contraction following any number fails

- - '; ;b ;c ;f ;h ;j ;l ;m ;n ;o ;p ;q ;s ;t  ;u ;v ;w ;x ;y ;z'
  - ';2 ;2b ;2c ;2f ;2h ;2j ;2l ;2m ;2n ;2o ;2p ;2q ;2s ;2t  ;2u ;2v ;2w ;2x ;2y ;2z'
  - xfail: grade 1 indicator is misssing for leading semicolen conflicting with contract like "be..."

- - '''; "; -; !; .; ,; :; ?;'
  - ',8; 8; -; 6; 4; 1;0 3; ;8;'

- - '; ;; (; [; {; *; =; +; @; #; $; %; ^; &; ); _; ]; }; \\; |; <; >; `; ~; /;'
  - ';2 ;2;2 "<;2 .<;2 _<;2 "9;2 "7;2 "6;2 `a;2 _?;2 `s;2 .0;2 `5;2 `&;2 ">;2 .-;2 .>;2 _>;2 _*;2 _|;2 `<;2 `>;2 ;8;2 .*;2 `9;2 _/;2'
  - xfail: semicolen has a missing grade 1 indicator due to conflict with contraction of "be"

- - ';'' ;" ;- ;, ;. ;? ;!'
  - ';,0;0 ;- ;1 ;4 ;8 ;!'

- - ';) ;] ;} ;; ;: ;@ ;# ;$ ;% ;^ ;& ;* ;( ;_ ;= ;+ ;[ ;{ ;\\ ;| ;< ;> ;` ;~ ;/'
  - ';2"> ;2.> ;2_> ;2 ;03 ;2`a ;2_? ;2`s ;2.0 ;2`5 ;2`& ;2"9 ;2"< ;2.- ;2"7 ;2"6 ;2.< ;2_< ;2_* ;2_| ;2`< ;2`> ;2."9 ;2`9 ;2/'
  - xfail: semicolen has a missing grade 1 indicator due to conflict with contraction of "be"

- - 'hereabout rightabout whereabout hereafter rightafter whereafter THEREABOUT THEREAB THEREAFTER THEREAF'
  - '"hab "rab ":ab "haf "raf ":af "!AB 6R1B "!AF 6R1F'

- - 'hereab rightab whereab hereaf rightaf whereaf'
  - 'h}1b ri<tab0 3.>1b h}1f ri<taf0 3.>1f'
  - xfail: non-contraction of "ab" or "af" conflicts with contraction of "about" or "after"

- - '(about [about {about ''about "about -about'
  - '"<ab .<ab _<ab,8ab 8ab -ab'

- - '!about @about #about $about %about ^about &about *about )about _about =about +about ]about }about \\about |about .about ,about ;about :about ?about <about >about `about ~about /about'
  - '6ab `aab _?ab `sab .0ab `5ab `&ab "9ab ">ab .-ab "7ab "6ab .>ab _>ab _*ab |ab 4ab 1ab ;ab0 3ab ;8ab `<ab `>ab ;8ab .*ab `9ab _/ab'
  - xfail: contraction following special characters is ignored

- - '(ab [ab {ab ''ab "ab -ab'
  - '"<;ab .<;ab _<;ab,8;ab 8;ab -;ab'

- - '!ab @ab #ab $ab %ab ^ab &ab *ab )ab _ab =ab +ab ]ab }ab \\ab |ab .ab ,ab ;ab :ab ?ab <ab >ab ?ab `ab ~ab /ab'
  - '6;ab `a;ab _?;ab `s;ab .0;ab `5;ab `&;ab "9;ab ">;ab .-;ab "7;ab "6;ab .>;ab _>;ab _*;ab _|;ab 4;ab 1;ab ;2ab0 3;ab ;8;ab `<;ab `>;ab .*;ab `9;ab _/;ab'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-about xl-([{''"about xl/-about xl$-about'
  - 'xl-ab xl-"<.<{''0ab xl_/-ab xl`s-ab'

- - 'xl(about xl[about xl{about xl''about xl"about xl-=([{''"about'
  - 'xl"<ab xl.<ab xl{ab xl''ab xl0ab xl-"7"<.<{''0ab'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'about) about] about} about'' about" about- about, about. about; about: about? about!'
  - 'ab"> ab.> ab_> ab,0ab0 ab- ab1 ab4 ab; ab03 ab8 ab!'

- - 'about@ about# about$ about% about^ about& about* about( about_ about= about+ about[ about{ about\\ about| about< about> about` about~ about/'
  - 'ab`a ab_? ab`s ab.0 ab`5 ab`& ab"9 ab"< ab.- ab"7 ab"6 ab.< ab_< ab_* ab| ab`< ab`> ab."9 ab`9 ab/'
  - xfail: contraction followed by special characters is ignored

- - 'ab) ab] ab} ab'' ab" ab- ab, ab. ab; ab: ab? ab!'
  - ';ab"> ;ab.> ;ab_> ;ab,0;ab0 ;ab- ;ab1 ;ab4 ;ab; ;ab03 ;ab8 ;ab!'

- - 'ab@ ab# ab$ ab% ab^ ab& ab* ab( ab_ ab= ab+ ab[ ab{ ab\\ ab| ab< ab> ab` ab~ ab/'
  - ';ab`a ;ab_? ;ab`s ;ab.0 ;ab`5 ;ab`& ;ab"9 ;ab"< ;ab.- ;ab"7 ;ab"6 ;ab.< ;ab_< ;ab_* ;ab_| ;ab`< ;ab`> ;ab."9 ;ab`9 ;ab/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'about-xl about-([{''"xl about-/xl about-$xl'
  - 'ab-xl ab-"<.<{''0xl ab-_/xl ab-`sxl'

- - 'about(xl about[xl about{xl about''xl about"xl about=([{''"-xl about([{''"-xl about/-xl about$-xl'
  - 'ab"<xl ab.<xl ab{xl ab''xl ab0xl ab"7"<.<{''0-xl ab"<.<{''0-xl ab/-xl ab`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(above [above {above ''above "above -above'
  - '"<abv .<abv _<abv,8abv 8abv -abv'

- - '!above @above #above $above %above ^above &above *above )above _above =above +above ]above }above \\above |above .above ,above ;above :above ?above <above >above `above ~above /above'
  - '6abv `aabv _?abv `sabv .0abv `5abv `&abv "9abv ">abv .-abv "7abv "6abv .>abv _>abv _*abv _|abv 4abv 1abv ;abv0 3abv ;8abv `<abv `>abv ;8abv .*abv `9abv _/abv'
  - xfail: contraction following special characters is ignored

- - '(abv [abv {abv ''abv "abv -abv'
  - '"<;abv .<;abv _<;abv,8;abv 8;abv -;abv'

- - '!abv @abv #abv $abv %abv ^abv &abv *abv )abv _abv =abv +abv ]abv }abv \\abv |abv .abv ,abv ;abv :abv ?abv <abv >abv ?abv `abv ~abv /abv'
  - '6;abv `a;abv _?;abv `s;abv .0;abv `5;abv `&;abv "9;abv ">;abv .-;abv "7;abv "6;abv .>;abv _>;abv _*;abv _|;abv 4;abv 1;abv ;2abv0 3;abv ;8;abv `<;abv `>;abv .*;abv `9;abv _/;abv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-above xl-([{''"above xl/-above xl$-above'
  - 'xl-abv xl-"<.<{''0abv xl_/-abv xl`s-abv'

- - 'xl(above xl[above xl{above xl''above xl"above xl-=([{''"above'
  - 'xl"<abv xl.<abv xl{abv xl''abv xl0abv xl-"7"<.<{''0abv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'above) above] above} above'' above" above- above, above. above; above: above? above!'
  - 'abv"> abv.> abv_> abv,0abv0 abv- abv1 abv4 abv; abv03 abv8 abv!'

- - 'above@ above# above$ above% above^ above& above* above( above_ above= above+ above[ above{ above\\ above| above< above> above` above~ above/'
  - 'abv`a abv_? abv`s abv.0 abv`5 abv`& abv"9 abv"< abv.- abv"7 abv"6 abv.< abv_< abv_* abv_| abv`< abv`> abv."9 abv`9 abv/'
  - xfail: contraction followed by special characters is ignored

- - 'abv) abv] abv} abv'' abv" abv- abv, abv. abv; abv: abv? abv!'
  - ';abv"> ;abv.> ;abv_> ;abv,0;abv0 ;abv- ;abv1 ;abv4 ;abv; ;abv03 ;abv8 ;abv!'

- - 'abv@ abv# abv$ abv% abv^ abv& abv* abv( abv_ abv= abv+ abv[ abv{ abv\\ abv| abv< abv> abv` abv~ abv/'
  - ';abv`a ;abv_? ;abv`s ;abv.0 ;abv`5 ;abv`& ;abv"9 ;abv"< ;abv.- ;abv"7 ;abv"6 ;abv.< ;abv_< ;abv_* ;abv_| ;abv`< ;abv`> ;abv."9 ;abv`9 ;abv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'above-xl above-([{''"xl above-/xl above-$xl'
  - 'abv-xl abv-"<.<{''0xl abv-_/xl abv-`sxl'

- - 'above(xl above[xl above{xl above''xl above"xl above=([{''"-xl above([{''"-xl above/-xl above$-xl'
  - 'abv"<xl abv.<xl abv{xl abv''xl abv0xl abv"7"<.<{''0-xl abv"<.<{''0-xl abv/-xl abv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(aboves [aboves {aboves ''aboves "aboves -aboves'
  - '"<abvs .<abvs _<abvs,8abvs 8abvs -abvs'

- - '!aboves @aboves #aboves $aboves %aboves ^aboves &aboves *aboves )aboves _aboves =aboves +aboves ]aboves }aboves \\aboves |aboves .aboves ,aboves ;aboves :aboves ?aboves <aboves >aboves `aboves ~aboves /aboves'
  - '6abvs `aabvs _?abvs `sabvs .0abvs `5abvs `&abvs "9abvs ">abvs .-abvs "7abvs "6abvs .>abvs _>abvs _*abvs _|abvs 4abvs 1abvs ;abvs0 3abvs ;8abvs `<abvs `>abvs ;8abvs .*abvs `9abvs _/abvs'
  - xfail: contraction following special characters is ignored

- - 'abvs  (abvs [abvs {abvs ''abvs "abvs -abvs !abvs @abvs #abvs $abvs %abvs ^abvs &abvs *abvs )abvs _abvs =abvs +abvs ]abvs }abvs \\abvs |abvs .abvs ,abvs ;abvs :abvs ?abvs <abvs >abvs ?abvs `abvs ~abvs /abvs'
  - ';abvs  "<;abvs .<;abvs _<;abvs,8;abvs 8;abvs -;abvs 6;abvs `a;abvs _?;abvs `s;abvs .0;abvs `5;abvs `&;abvs "9;abvs ">;abvs .-;abvs "7;abvs "6;abvs .>;abvs _>;abvs _*;abvs _|;abvs 4;abvs 1;abvs ;2abvs0 3;abvs ;8;abvs `<;abvs `>;abvs .*;abvs `9;abvs _/;abvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-aboves xl-([{''"aboves xl/-aboves xl$-aboves'
  - 'xl-abvs xl-"<.<{''0abvs xl_/-abvs xl`s-abvs'

- - 'xl(aboves xl[aboves xl{aboves xl''aboves xl"aboves xl-=([{''"aboves'
  - 'xl"<abvs xl.<abvs xl{abvs xl''abvs xl0abvs xl-"7"<.<{''0abvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'aboves) aboves] aboves} aboves'' aboves" aboves- aboves, aboves. aboves; aboves: aboves? aboves!'
  - 'abvs"> abvs.> abvs_> abvs,0abvs0 abvs- abvs1 abvs4 abvs; abvs03 abvs8 abvs!'

- - 'aboves@ aboves# aboves$ aboves% aboves^ aboves& aboves* aboves( aboves_ aboves= aboves+ aboves[ aboves{ aboves\\ aboves| aboves< aboves> aboves` aboves~ aboves/'
  - 'abvs`a abvs_? abvs`s abvs.0 abvs`5 abvs`& abvs"9 abvs"< abvs.- abvs"7 abvs"6 abvs.< abvs_< abvs_* abvs_| abvs`< abvs`> abvs."9 abvs`9 abvs/'
  - xfail: contraction followed by special characters is ignored

- - 'abvs) abvs] abvs} abvs'' abvs" abvs- abvs, abvs. abvs; abvs: abvs? abvs! abvs@ abvs# abvs$ abvs% abvs^ abvs& abvs* abvs( abvs_ abvs= abvs+ abvs[ abvs{ abvs\\ abvs| abvs< abvs> abvs` abvs~ abvs/'
  - ';abvs"> ;abvs.> ;abvs_> ;abvs,0;abvs0 ;abvs- ;abvs1 ;abvs4 ;abvs; ;abvs03 ;abvs8 ;abvs6 ;abvs`a ;abvs_? ;abvs`s ;abvs.0 ;abvs`5 ;abvs`& ;abvs"9 ;abvs"< ;abvs.- ;abvs"7 ;abvs"6 ;abvs.< ;abvs_< ;abvs_* ;abvs_| ;abvs`< ;abvs`> ;abvs."9 ;abvs`9 ;abvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'aboves-xl aboves-([{''"xl aboves-/xl aboves-$xl'
  - 'abvs-xl abvs-"<.<{''0xl abvs-_/xl abvs-`sxl'

- - 'aboves(xl aboves[xl aboves{xl aboves''xl aboves"xl aboves=([{''"-xl aboves([{''"-xl aboves/-xl aboves$-xl'
  - 'abvs"<xl abvs.<xl abvs{xl abvs''xl abvs0xl abvs"7"<.<{''0-xl abvs"<.<{''0-xl abvs/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(according [according {according ''according "according -according'
  - '"<ac .<ac _<ac,8ac 8ac -ac'

- - '!according @according #according $according %according ^according &according *according )according _according =according +according ]according }according \\according |according .according ,according ;according :according ?according <according >according'
  - '6ac `aac _?ac `sac .0ac `5ac `&ac "9ac ">ac .-ac "7ac +ac .>ac _>ac _*ac _|ac 4ac 1ac ;ac0 3ac ;8ac `<ac `>ac'
  - xfail: contraction following special characters is ignored

- - '`according, ~according /according'
  - '.*ac `9ac _/ac'
  - xfail: contraction following special characters is ignored

- - '(ac [ac {ac ''ac "ac -ac'
  - '"<;ac .<;ac _<;ac,8;ac 8;ac -;ac'

- - '!ac @ac #ac $ac %ac ^ac &ac *ac )ac _ac =ac +ac ]ac }ac \\ac |ac .ac ,ac ;ac :ac ?ac <ac >ac `ac ~ac /ac'
  - '6;ac `a;ac _?;ac `s;ac .0;ac `5;ac `&;ac "9;ac ">;ac .-;ac "7;ac "6;ac .>;ac _>;ac _*;ac _|;ac 4;ac 1;ac ;2ac0 3;ac ;8;ac `<;ac `>;ac .*;ac `9;ac _/;ac'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-according xl-([{''"according xl/-according xl$-according'
  - 'xl-ac xl-"<.<{''0ac xl_/-ac xl`s-ac'

- - 'xl(according xl[according xl{according xl''according xl"according xl-=([{''"according'
  - 'xl"<ac xl.<ac xl{ac xl''ac xl0ac xl-"7"<.<{''0ac'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'according) according] according} according'' according" according- according, according. according; according: according? according!'
  - 'ac"> ac.> ac_> ac,0ac0 ac- ac1 ac4 ac; ac03 ac8 ac!'

- - 'according@ according# according$ according% according^ according& according* according( according_ according= according+ according[ according{ according\\ according| according< according> according` according~ according/'
  - 'ac`a ac_? ac`s ac.0 ac`5 ac`& ac"9 ac"< ac.- ac"7 ac+ ac.< ac_< ac_* ac_| ac`< ac`> ac."9 ac`9 ac/'
  - xfail: contraction followed by special characters is ignored

- - 'ac) ac] ac} ac'' ac" ac- ac, ac. ac; ac: ac? ac!'
  - ';ac"> ;ac.> ;ac_> ;ac,0;ac0 ;ac- ;ac1 ;ac4 ;ac; ;ac03 ;ac8 ;ac!'

- - 'ac@ ac# ac$ ac% ac^ ac& ac* ac( ac_ ac= ac+ ac[ ac{ ac\\ ac| ac< ac> ac` ac~ ac/'
  - ';ac`a ;ac_? ;ac`s ;ac.0 ;ac`5 ;ac`& ;ac"9 ;ac"< ;ac.- ;ac"7 ;ac"6 ;ac.< ;ac_< ;ac_* ;ac_| ;ac`< ;ac`> ;ac."9 ;ac`9 ;ac/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'according-xl according-([{''"xl according-/xl according-$xl'
  - 'ac-xl ac-"<.<{''0xl ac-_/xl ac-`sxl'

- - 'according(xl according[xl according{xl according''xl according"xl according=([{''"-xl according([{''"-xl according/-xl according$-xl'
  - 'ac"<xl ac.<xl ac{xl ac''xl ac0xl ac"7"<.<{''0-xl ac"<.<{''0-xl ac/-xl ac`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordingly [accordingly {accordingly ''accordingly "accordingly -accordingly'
  - '"<acly .<acly _<acly,8acly 8acly -acly'

- - '!accordingly @accordingly #accordingly $accordingly %accordingly ^accordingly &accordingly *accordingly )accordingly _accordingly =accordingly +accordingly ]accordingly }accordingly \\accordingly |accordingly .accordingly ,accordingly ;accordingly :accordingly'
  - '6acly `aacly _?acly `sacly .0acly `5acly `&acly "9acly ">acly .-acly "7acly +acly .>acly _>acly _*acly _|acly 4acly 1acly ;acly0 3acly'
  - xfail: contraction followingly special characters is ignored

- - '?accordingly <accordingly >accordingly `accordingly, ~accordingly /accordingly'
  - ';8acly `<acly `>acly .*acly `9acly _/acly'
  - xfail: contraction followingly special characters is ignored

- - '(acly [acly {acly ''acly "acly -acly'
  - '"<;acly .<;acly _<;acly,8;acly 8;acly -;acly'

- - '!acly @acly #acly $acly %acly ^acly &acly *acly )acly _acly =acly +acly ]acly }acly \\acly |acly .acly ,acly ;acly :acly ?acly <acly >acly `acly ~acly /acly'
  - '6;acly `a;acly _?;acly `s;acly .0;acly `5;acly `&;acly "9;acly ">;acly .-;acly "7;acly "6;acly .>;acly _>;acly _*;acly _|;acly 4;acly 1;acly ;2acly0 3;acly ;8;acly `<;acly `>;acly .*;acly `9;acly _/;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordingly xl-([{''"accordingly xl/-accordingly xl$-accordingly'
  - 'xl-acly xl-"<.<{''0acly xl_/-acly xl`s-acly'

- - 'xl(accordingly xl[accordingly xl{accordingly xl''accordingly xl"accordingly xl-=([{''"accordingly'
  - 'xl"<acly xl.<acly xl{acly xl''acly xl0acly xl-"7"<.<{''0acly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordingly) accordingly] accordingly} accordingly'' accordingly" accordingly- accordingly, accordingly. accordingly; accordingly: accordingly? accordingly!'
  - 'acly"> acly.> acly_> acly,0acly0 acly- acly1 acly4 acly; acly03 acly8 acly!'

- - 'accordingly@ accordingly# accordingly$ accordingly% accordingly^ accordingly& accordingly* accordingly( accordingly_ accordingly= accordingly+ accordingly[ accordingly{ accordingly\\ accordingly| accordingly< accordingly> accordingly` accordingly~ accordingly/'
  - 'acly`a acly_? acly`s acly.0 acly`5 acly`& acly"9 acly"< acly.- acly"7 acly+ acly.< acly_< acly_* acly_| acly`< acly`> acly."9 acly`9 acly/'
  - xfail: contraction followed by special characters is ignored

- - 'acly) acly] acly} acly'' acly" acly- acly, acly. acly; acly: acly? acly!'
  - ';acly"> ;acly.> ;acly_> ;acly,0;acly0 ;acly- ;acly1 ;acly4 ;acly; ;acly03 ;acly8 ;acly!'

- - 'acly@ acly# acly$ acly% acly^ acly& acly* acly( acly_ acly= acly+ acly[ acly{ acly\\ acly| acly< acly> acly` acly~ acly/'
  - ';acly`a ;acly_? ;acly`s ;acly.0 ;acly`5 ;acly`& ;acly"9 ;acly"< ;acly.- ;acly"7 ;acly"6 ;acly.< ;acly_< ;acly_* ;acly_| ;acly`< ;acly`> ;acly."9 ;acly`9 ;acly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordingly-xl accordingly-([{''"xl accordingly-/xl accordingly-$xl'
  - 'acly-xl acly-"<.<{''0xl acly-_/xl acly-`sxl'

- - 'accordingly(xl accordingly[xl accordingly{xl accordingly''xl accordingly"xl accordingly=([{''"-xl accordingly([{''"-xl accordingly/-xl accordingly$-xl'
  - 'acly"<xl acly.<xl acly{xl acly''xl acly0xl acly"7"<.<{''0-xl acly"<.<{''0-xl acly/-xl acly`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordinglys [accordinglys {accordinglys ''accordinglys "accordinglys -accordinglys'
  - '"<aclys .<aclys _<aclys,8aclys 8aclys -aclys'

- - '!accordinglys @accordinglys #accordinglys $accordinglys %accordinglys ^accordinglys &accordinglys *accordinglys )accordinglys _accordinglys =accordinglys +accordinglys ]accordinglys }accordinglys \\accordinglys |accordinglys .accordinglys ,accordinglys'
  - '6aclys `aaclys _?aclys `saclys .0aclys `5aclys `&aclys "9aclys ">aclys .-aclys "7aclys +aclys .>aclys _>aclys _*aclys _|aclys 4aclys 1aclys'
  - xfail: contraction followingly special characters is ignored

- - ';accordinglys :accordinglys ?accordinglys <accordinglys >accordinglys `accordinglys, ~accordinglys /accordinglys'
  - 'baclys0 3aclys ;8aclys `<aclys `>aclys .*aclys `9aclys _/aclys'
  - xfail: contraction followingly special characters is ignored

- - 'aclys (aclys [aclys {aclys ''aclys "aclys -aclys !aclys @aclys #aclys $aclys %aclys ^aclys &aclys *aclys )aclys _aclys =aclys +aclys ]aclys }aclys \\aclys |aclys .aclys ,aclys ;aclys :aclys ?aclys <aclys >aclys `aclys ~aclys /aclys'
  - ';aclys "<;aclys .<;aclys _<;aclys,8;aclys 8;aclys -;aclys 6;aclys `a;aclys _?;aclys `s;aclys .0;aclys `5;aclys `&;aclys "9;aclys ">;aclys .-;aclys "7;aclys "6;aclys .>;aclys _>;aclys _*;aclys _|;aclys 4;aclys 1;aclys ;2aclys0 3;aclys ;8;aclys `<;aclys `>;aclys .*;aclys `9;aclys _/;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordinglys xl-([{''"accordinglys xl/-accordinglys xl$-accordinglys'
  - 'xl-aclys xl-"<.<{''0aclys xl_/-aclys xl`s-aclys'

- - 'xl(accordinglys xl[accordinglys xl{accordinglys xl''accordinglys xl"accordinglys xl-=([{''"accordinglys'
  - 'xl"<aclys xl.<aclys xl{aclys xl''aclys xl0aclys xl-"7"<.<{''0aclys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordinglys) accordinglys] accordinglys} accordinglys'' accordinglys" accordinglys- accordinglys, accordinglys. accordinglys; accordinglys: accordinglys? accordinglys!'
  - 'aclys"> aclys.> aclys_> aclys,0aclys0 aclys- aclys1 aclys4 aclys; aclys03 aclys8 aclys!'

- - 'accordinglys@ accordinglys# accordinglys$ accordinglys% accordinglys^ accordinglys& accordinglys* accordinglys( accordinglys_ accordinglys= accordinglys+ accordinglys[ accordinglys{ accordinglys\\ accordinglys| accordinglys< accordinglys> accordinglys`'
  - 'aclys`a aclys_? aclys`s aclys.0 aclys`5 aclys`& aclys"9 aclys"< aclys.- aclys"7 aclys+ aclys.< aclys_< aclys_* aclys_| aclys`< aclys`> aclys.*'
  - xfail: contraction followed by special characters is ignored

- - 'accordinglys~ accordinglys/'
  - 'aclys`9 aclys/'
  - xfail: contraction followed by special characters is ignored

- - 'aclys) aclys] aclys} aclys'' aclys" aclys- aclys, aclys. aclys; aclys: aclys? aclys! aclys@ aclys# aclys$ aclys% aclys^ aclys& aclys* aclys( aclys_ aclys= aclys+ aclys[ aclys{ aclys\\ aclys| aclys< aclys> aclys` aclys~ aclys/'
  - ';aclys"> ;aclys.> ;aclys_> ;aclys,0;aclys0 ;aclys- ;aclys1 ;aclys4 ;aclys; ;aclys03 ;aclys8 ;aclys6 ;aclys`a ;aclys_? ;aclys`s ;aclys.0 ;aclys`5 ;aclys`& ;aclys"9 ;aclys"< ;aclys.- ;aclys"7 ;aclys"6 ;aclys.< ;aclys_< ;aclys_* ;aclys_| ;aclys`< ;aclys`> ;aclys."9 ;aclys`9 ;aclys/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordinglys-xl accordinglys-([{''"xl accordinglys-/xl accordinglys-$xl'
  - 'aclys-xl aclys-"<.<{''0xl aclys-_/xl aclys-`sxl'

- - 'accordinglys(xl accordinglys[xl accordinglys{xl accordinglys''xl accordinglys"xl accordinglys=([{''"-xl accordinglys([{''"-xl accordinglys/-xl accordinglys$-xl'
  - 'aclys"<xl aclys.<xl aclys{xl aclys''xl aclys0xl aclys"7"<.<{''0-xl aclys"<.<{''0-xl aclys/-xl aclys`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordings [accordings {accordings ''accordings "accordings -accordings'
  - '"<acs .<acs _<acs,8acs 8acs -acs'

- - '!accordings @accordings #accordings $accordings %accordings ^accordings &accordings *accordings )accordings _accordings =accordings +accordings ]accordings }accordings \\accordings |accordings .accordings ,accordings'
  - '6acs `aacs _?acs `sacs .0acs `5acs `&acs "9acs ">acs .-acs "7acs +acs .>acs _>acs _*acs _|acs 4acs 1acs'
  - xfail: contraction followingly special characters is ignored

- - ';accordings :accordings ?accordings <accordings >accordings `accordings, ~accordings /accordings'
  - 'bacs0 3acs ;8acs `<acs `>acs .*acs `9acs _/acs'
  - xfail: contraction followingly special characters is ignored

- - 'acs (acs [acs {acs ''acs "acs -acs !acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs ;acs :acs ?acs <acs >acs `acs ~acs /acs'
  - ';acs "<;acs .<;acs _<;acs,8;acs 8;acs -;acs 6;acs `a;acs _?;acs `s;acs .0;acs `5;acs `&;acs "9;acs ">;acs .-;acs "7;acs "6;acs .>;acs _>;acs _*;acs _|;acs 4;acs 1;acs ;2acs0 3;acs ;8;acs `<;acs `>;acs .*;acs `9;acs _/;acly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-accordings xl-([{''"accordings xl/-accordings xl$-accordings'
  - 'xl-acs xl-"<.<{''0acs xl_/-acs xl`s-acs'

- - 'xl(accordings xl[accordings xl{accordings xl''accordings xl"accordings xl-=([{''"accordings'
  - 'xl"<acs xl.<acs xl{acs xl''acs xl0acs xl-"7"<.<{''0acs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'accordings) accordings] accordings} accordings'' accordings" accordings- accordings, accordings. accordings; accordings: accordings? accordings!'
  - 'acs"> acs.> acs_> acs,0acs0 acs- acs1 acs4 acs; acs03 acs8 acs!'

- - 'accordings@ accordings# accordings$ accordings% accordings^ accordings& accordings* accordings( accordings_ accordings= accordings+ accordings[ accordings{ accordings\\ accordings| accordings< accordings> accordings`'
  - 'acs`a acs_? acs`s acs.0 acs`5 acs`& acs"9 acs"< acs.- acs"7 acs+ acs.< acs_< acs_* acs_| acs`< acs`> acs.*'
  - xfail: contraction followed by special characters is ignored

- - 'accordings~ accordings/'
  - 'acs`9 acs/'
  - xfail: contraction followed by special characters is ignored

- - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs! acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs` acs~ acs/'
  - ';acs"> ;acs.> ;acs_> ;acs,0;acs0 ;acs- ;acs1 ;acs4 ;acs; ;acs03 ;acs8 ;acs6 ;acs`a ;acs_? ;acs`s ;acs.0 ;acs`5 ;acs`& ;acs"9 ;acs"< ;acs.- ;acs"7 ;acs"6 ;acs.< ;acs_< ;acs_* ;acs_| ;acs`< ;acs`> ;acs."9 ;acs`9 ;acs/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'accordings-xl accordings-([{''"xl accordings-/xl accordings-$xl'
  - 'acs-xl acs-"<.<{''0xl acs-_/xl acs-`sxl'

- - 'accordings(xl accordings[xl accordings{xl accordings''xl accordings"xl accordings=([{''"-xl accordings([{''"-xl accordings/-xl accordings$-xl'
  - 'acs"<xl acs.<xl acs{xl acs''xl acs0xl acs"7"<.<{''0-xl acs"<.<{''0-xl acs/-xl acs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccording [unaccording {unaccording ''unaccording "unaccording -unaccording'
  - '"<unac .<unac _<unac,8unac 8unac -unac'

- - '!unaccording @unaccording #unaccording $unaccording %unaccording ^unaccording &unaccording *unaccording )unaccording _unaccording =unaccording +unaccording ]unaccording }unaccording \\unaccording |unaccording .unaccording ,unaccording ;unaccording :unaccording'
  - '6unac `aunac _?unac `sunac .0unac `5unac `&unac "9unac ">unac .-unac "7unac +unac .>unac _>unac _*unac _|unac 4unac 1unac ;unac0 3unac'
  - xfail: contraction following special characters is ignored

- - '?unaccording <unaccording >unaccording `unaccording, ~unaccording /unaccording'
  - ';8unac `<unac `>unac .*unac `9unac _/unac'
  - xfail: contraction following special characters is ignored

- - '(unac [unac {unac ''unac "unac -unac'
  - '"<;unac .<;unac _<;unac,8;unac 8;unac -;unac'

- - '!unac @unac #unac $unac %unac ^unac &unac *unac )unac _unac =unac +unac ]unac }unac \\unac |unac .unac ,unac ;unac :unac ?unac <unac >unac `unac ~unac /unac'
  - '6;unac `a;unac _?;unac `s;unac .0;unac `5;unac `&;unac "9;unac ">;unac .-;unac "7;unac "6;unac .>;unac _>;unac _*;unac _|;unac 4;unac 1;unac ;2unac0 3;unac ;8;unac `<;unac `>;unac .*;unac `9;unac _/;unac'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unaccording xl-([{''"unaccording xl/-unaccording xl$-unaccording'
  - 'xl-unac xl-"<.<{''0unac xl_/-unac xl`s-unac'

- - 'xl(unaccording xl[unaccording xl{unaccording xl''unaccording xl"unaccording xl-=([{''"unaccording'
  - 'xl"<unac xl.<unac xl{unac xl''unac xl0unac xl-"7"<.<{''0unac'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unaccording) unaccording] unaccording} unaccording'' unaccording" unaccording- unaccording, unaccording. unaccording; unaccording: unaccording? unaccording!'
  - 'unac"> unac.> unac_> unac,0unac0 unac- unac1 unac4 unac; unac03 unac8 unac!'

- - 'unaccording@ unaccording# unaccording$ unaccording% unaccording^ unaccording& unaccording* unaccording( unaccording_ unaccording= unaccording+ unaccording[ unaccording{ unaccording\\ unaccording| unaccording< unaccording> unaccording` unaccording~ unaccording/'
  - 'unac`a unac_? unac`s unac.0 unac`5 unac`& unac"9 unac"< unac.- unac"7 unac+ unac.< unac_< unac_* unac_| unac`< unac`> unac."9 unac`9 unac/'
  - xfail: contraction followed by special characters is ignored

- - 'unac) unac] unac} unac'' unac" unac- unac, unac. unac; unac: unac? unac!'
  - ';unac"> ;unac.> ;unac_> ;unac,0;unac0 ;unac- ;unac1 ;unac4 ;unac; ;unac03 ;unac8 ;unac!'

- - 'unac@ unac# unac$ unac% unac^ unac& unac* unac( unac_ unac= unac+ unac[ unac{ unac\\ unac| unac< unac> unac` unac~ unac/'
  - ';unac`a ;unac_? ;unac`s ;unac.0 ;unac`5 ;unac`& ;unac"9 ;unac"< ;unac.- ;unac"7 ;unac"6 ;unac.< ;unac_< ;unac_* ;unac_| ;unac`< ;unac`> ;unac."9 ;unac`9 ;unac/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unaccording-xl unaccording-([{''"xl unaccording-/xl unaccording-$xl'
  - 'unac-xl unac-"<.<{''0xl unac-_/xl unac-`sxl'

- - 'unaccording(xl unaccording[xl unaccording{xl unaccording''xl unaccording"xl unaccording=([{''"-xl unaccording([{''"-xl unaccording/-xl unaccording$-xl'
  - 'unac"<xl unac.<xl unac{xl unac''xl unac0xl unac"7"<.<{''0-xl unac"<.<{''0-xl unac/-xl unac`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordingly [unaccordingly {unaccordingly ''unaccordingly "unaccordingly -unaccordingly'
  - '"<unacly .<unacly _<unacly,8unacly 8unacly -unacly'

- - '!unaccordingly @unaccordingly #unaccordingly $unaccordingly %unaccordingly ^unaccordingly &unaccordingly *unaccordingly )unaccordingly _unaccordingly =unaccordingly +unaccordingly ]unaccordingly }unaccordingly \\unaccordingly |unaccordingly .unaccordingly'
  - '6unacly `aunacly _?unacly `sunacly .0unacly `5unacly `&unacly "9unacly ">unacly .-unacly "7unacly +unacly .>unacly _>unacly _*unacly _|unacly 4unacly'
  - xfail: contraction followingly special characters is ignored

- - ',unaccordingly ;unaccordingly :unaccordingly ?unaccordingly <unaccordingly >unaccordingly `unaccordingly, ~unaccordingly /unaccordingly'
  - '1unacly ;unacly0 3unacly ;8unacly `<unacly `>unacly .*unacly `9unacly _/unacly'
  - xfail: contraction followingly special characters is ignored

- - '(unacly [unacly {unacly ''unacly "unacly -unacly'
  - '"<;unacly .<;unacly _<;unacly,8;unacly 8;unacly -;unacly'

- - '!unacly @unacly #unacly $unacly %unacly ^unacly &unacly *unacly )unacly _unacly =unacly +unacly ]unacly }unacly \\unacly |unacly .unacly ,unacly ;unacly :unacly ?unacly <unacly >unacly `unacly ~unacly /unacly'
  - '6;unacly `a;unacly _?;unacly `s;unacly .0;unacly `5;unacly `&;unacly "9;unacly ">;unacly .-;unacly "7;unacly "6;unacly .>;unacly _>;unacly _*;unacly _|;unacly 4;unacly 1;unacly ;2unacly0 3;unacly ;8;unacly `<;unacly `>;unacly .*;unacly `9;unacly _/;unacly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordingly xl-([{''"unaccordingly xl/-unaccordingly xl$-unaccordingly'
  - 'xl-unacly xl-"<.<{''0unacly xl_/-unacly xl`s-unacly'

- - 'xl(unaccordingly xl[unaccordingly xl{unaccordingly xl''unaccordingly xl"unaccordingly xl-=([{''"unaccordingly'
  - 'xl"<unacly xl.<unacly xl{unacly xl''unacly xl0unacly xl-"7"<.<{''0unacly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordingly) unaccordingly] unaccordingly} unaccordingly'' unaccordingly" unaccordingly- unaccordingly, unaccordingly. unaccordingly; unaccordingly: unaccordingly? unaccordingly!'
  - 'unacly"> unacly.> unacly_> unacly,0unacly0 unacly- unacly1 unacly4 unacly; unacly03 unacly8 unacly!'

- - 'unaccordingly@ unaccordingly# unaccordingly$ unaccordingly% unaccordingly^ unaccordingly& unaccordingly* unaccordingly( unaccordingly_ unaccordingly= unaccordingly+ unaccordingly[ unaccordingly{ unaccordingly\\ unaccordingly| unaccordingly< unaccordingly>'
  - 'unacly`a unacly_? unacly`s unacly.0 unacly`5 unacly`& unacly"9 unacly"< unacly.- unacly"7 unacly+ unacly.< unacly_< unacly_* unacly_| unacly`< unacly`> unacly.*'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordingly` unaccordingly~ unaccordingly/'
  - 'unacly`9 unacly/'
  - xfail: contraction followed by special characters is ignored

- - 'unacly) unacly] unacly} unacly'' unacly" unacly- unacly, unacly. unacly; unacly: unacly? unacly!'
  - ';unacly"> ;unacly.> ;unacly_> ;unacly,0;unacly0 ;unacly- ;unacly1 ;unacly4 ;unacly; ;unacly03 ;unacly8 ;unacly!'

- - 'unacly@ unacly# unacly$ unacly% unacly^ unacly& unacly* unacly( unacly_ unacly= unacly+ unacly[ unacly{ unacly\\ unacly| unacly< unacly> unacly` unacly~ unacly/'
  - ';unacly`a ;unacly_? ;unacly`s ;unacly.0 ;unacly`5 ;unacly`& ;unacly"9 ;unacly"< ;unacly.- ;unacly"7 ;unacly"6 ;unacly.< ;unacly_< ;unacly_* ;unacly_| ;unacly`< ;unacly`> ;unacly."9 ;unacly`9 ;unacly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordingly-xl unaccordingly-([{''"xl unaccordingly-/xl unaccordingly-$xl'
  - 'unacly-xl unacly-"<.<{''0xl unacly-_/xl unacly-`sxl'

- - 'unaccordingly(xl unaccordingly[xl unaccordingly{xl unaccordingly''xl unaccordingly"xl unaccordingly=([{''"-xl unaccordingly([{''"-xl unaccordingly/-xl unaccordingly$-xl'
  - 'unacly"<xl unacly.<xl unacly{xl unacly''xl unacly0xl unacly"7"<.<{''0-xl unacly"<.<{''0-xl unacly/-xl unacly`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordinglys [unaccordinglys {unaccordinglys ''unaccordinglys "unaccordinglys -unaccordinglys'
  - '"<unaclys .<unaclys _<unaclys,8unaclys 8unaclys -unaclys'

- - '!unaccordinglys @unaccordinglys #unaccordinglys $unaccordinglys %unaccordinglys ^unaccordinglys &unaccordinglys *unaccordinglys )unaccordinglys _unaccordinglys =unaccordinglys +unaccordinglys ]unaccordinglys }unaccordinglys \\unaccordinglys |unaccordinglys'
  - '6unaclys `aunaclys _?unaclys `sunaclys .0unaclys `5unaclys `&unaclys "9unaclys ">unaclys .-unaclys "7unaclys +unaclys .>unaclys _>unaclys _*unaclys _|unaclys'
  - xfail: contraction followingly special characters is ignored

- - '.unaccordinglys ,unaccordinglys ;unaccordinglys :unaccordinglys ?unaccordinglys <unaccordinglys >unaccordinglys `unaccordinglys, ~unaccordinglys /unaccordinglys'
  - '4unaclys 1unaclys bunaclys0 3unaclys ;8unaclys `<unaclys `>unaclys .*unaclys `9unaclys _/unaclys'
  - xfail: contraction followingly special characters is ignored

- - 'unaclys (unaclys [unaclys {unaclys ''unaclys "unaclys -unaclys !unaclys @unaclys #unaclys $unaclys %unaclys ^unaclys &unaclys *unaclys )unaclys _unaclys =unaclys +unaclys ]unaclys }unaclys \\unaclys |unaclys .unaclys ,unaclys ;unaclys :unaclys ?unaclys <unaclys >'
  - ';unaclys "<;unaclys .<;unaclys _<;unaclys,8;unaclys 8;unaclys -;unaclys 6;unaclys `a;unaclys _?;unaclys `s;unaclys .0;unaclys `5;unaclys `&;unaclys "9;unaclys ">;unaclys .-;unaclys "7;unaclys "6;unaclys .>;unaclys _>;unaclys _*;unaclys _|;unaclys 4;unaclys 1;unaclys ;2unaclys0 3;'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordinglys xl-([{''"unaccordinglys xl/-unaccordinglys xl$-unaccordinglys'
  - 'xl-unaclys xl-"<.<{''0unaclys xl_/-unaclys xl`s-unaclys'

- - 'xl(unaccordinglys xl[unaccordinglys xl{unaccordinglys xl''unaccordinglys xl"unaccordinglys xl-=([{''"unaccordinglys'
  - 'xl"<unaclys xl.<unaclys xl{unaclys xl''unaclys xl0unaclys xl-"7"<.<{''0unaclys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordinglys) unaccordinglys] unaccordinglys} unaccordinglys'' unaccordinglys" unaccordinglys- unaccordinglys, unaccordinglys. unaccordinglys; unaccordinglys: unaccordinglys? unaccordinglys!'
  - 'unaclys"> unaclys.> unaclys_> unaclys,0unaclys0 unaclys- unaclys1 unaclys4 unaclys; unaclys03 unaclys8 unaclys!'

- - 'unaccordinglys@ unaccordinglys# unaccordinglys$ unaccordinglys% unaccordinglys^ unaccordinglys& unaccordinglys* unaccordinglys( unaccordinglys_ unaccordinglys= unaccordinglys+ unaccordinglys[ unaccordinglys{ unaccordinglys\\ unaccordinglys| unaccordinglys<'
  - 'unaclys`a unaclys_? unaclys`s unaclys.0 unaclys`5 unaclys`& unaclys"9 unaclys"< unaclys.- unaclys"7 unaclys+ unaclys.< unaclys_< unaclys_* unaclys_| unaclys<'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordinglys> unaccordinglys` unaccordinglys~ unaccordinglys/'
  - 'unaclys`> unaclys."9 unaclys`9 unaclys/'
  - xfail: contraction followed by special characters is ignored

- - 'unaclys) unaclys] unaclys} unaclys'' unaclys" unaclys- unaclys, unaclys. unaclys; unaclys: unaclys? unaclys! unaclys@ unaclys# unaclys$ unaclys% unaclys^ unaclys& unaclys* unaclys( unaclys_ unaclys= unaclys+ unaclys[ unaclys{ unaclys\\ unaclys| unaclys< unaclys>'
  - ';unaclys"> ;unaclys.> ;unaclys_> ;unaclys,0;unaclys0 ;unaclys- ;unaclys1 ;unaclys4 ;unaclys; ;unaclys03 ;unaclys8 ;unaclys6 ;unaclys`a ;unaclys_? ;unaclys`s ;unaclys.0 ;unaclys`5 ;unaclys`& ;unaclys"9 ;unaclys"< ;unaclys.- ;unaclys"7 ;unaclys"6 ;unaclys.< ;unaclys_< ;unaclys_* ;'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordinglys-xl unaccordinglys-([{''"xl unaccordinglys-/xl unaccordinglys-$xl'
  - 'unaclys-xl unaclys-"<.<{''0xl unaclys-_/xl unaclys-`sxl'

- - 'unaccordinglys(xl unaccordinglys[xl unaccordinglys{xl unaccordinglys''xl unaccordinglys"xl unaccordinglys=([{''"-xl unaccordinglys([{''"-xl unaccordinglys/-xl unaccordinglys$-xl'
  - 'unaclys"<xl unaclys.<xl unaclys{xl unaclys''xl unaclys0xl unaclys"7"<.<{''0-xl unaclys"<.<{''0-xl unaclys/-xl unaclys`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unaccordings [unaccordings {unaccordings ''unaccordings "unaccordings -unaccordings'
  - '"<unacs .<unacs _<unacs,8unacs 8unacs -unacs'

- - '!unaccordings @unaccordings #unaccordings $unaccordings %unaccordings ^unaccordings &unaccordings *unaccordings )unaccordings _unaccordings =unaccordings +unaccordings ]unaccordings }unaccordings \\unaccordings |unaccordings .unaccordings ,unaccordings'
  - '6unacs `aunacs _?unacs `sunacs .0unacs `5unacs `&unacs "9unacs ">unacs .-unacs "7unacs +unacs .>unacs _>unacs _*unacs _|unacs 4unacs 1unacs'
  - xfail: contraction followingly special characters is ignored

- - ';unaccordings :unaccordings ?unaccordings <unaccordings >unaccordings `unaccordings, ~unaccordings /unaccordings'
  - 'bunacs0 3unacs ;8unacs `<unacs `>unacs .*unacs `9unacs _/unacs'
  - xfail: contraction followingly special characters is ignored

- - 'unacs (unacs [unacs {unacs ''unacs "unacs -unacs !unacs @unacs #unacs $unacs %unacs ^unacs &unacs *unacs )unacs _unacs =unacs +unacs ]unacs }unacs \\unacs |unacs .unacs ,unacs ;unacs :unacs ?unacs <unacs >unacs `unacs ~unacs /unacs'
  - ';unacs "<;unacs .<;unacs _<;unacs,8;unacs 8;unacs -;unacs 6;unacs `a;unacs _?;unacs `s;unacs .0;unacs `5;unacs `&;unacs "9;unacs ">;unacs .-;unacs "7;unacs "6;unacs .>;unacs _>;unacs _*;unacs _|;unacs 4;unacs 1;unacs ;2unacs0 3;unacs ;8;unacs `<;unacs `>;unacs .*;unacs `9;unacs _/;unac'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unaccordings xl-([{''"unaccordings xl/-unaccordings xl$-unaccordings'
  - 'xl-unacs xl-"<.<{''0unacs xl_/-unacs xl`s-unacs'

- - 'xl(unaccordings xl[unaccordings xl{unaccordings xl''unaccordings xl"unaccordings xl-=([{''"unaccordings'
  - 'xl"<unacs xl.<unacs xl{unacs xl''unacs xl0unacs xl-"7"<.<{''0unacs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unaccordings) unaccordings] unaccordings} unaccordings'' unaccordings" unaccordings- unaccordings, unaccordings. unaccordings; unaccordings: unaccordings? unaccordings!'
  - 'unacs"> unacs.> unacs_> unacs,0unacs0 unacs- unacs1 unacs4 unacs; unacs03 unacs8 unacs!'

- - 'unaccordings@ unaccordings# unaccordings$ unaccordings% unaccordings^ unaccordings& unaccordings* unaccordings( unaccordings_ unaccordings= unaccordings+ unaccordings[ unaccordings{ unaccordings\\ unaccordings| unaccordings< unaccordings> unaccordings`'
  - 'unacs`a unacs_? unacs`s unacs.0 unacs`5 unacs`& unacs"9 unacs"< unacs.- unacs"7 unacs+ unacs.< unacs_< unacs_* unacs_| unacs`< unacs`> unacs.*'
  - xfail: contraction followed by special characters is ignored

- - 'unaccordings~ unaccordings/'
  - 'unacs`9 unacs/'
  - xfail: contraction followed by special characters is ignored

- - 'unacs) unacs] unacs} unacs'' unacs" unacs- unacs, unacs. unacs; unacs: unacs? unacs! unacs@ unacs# unacs$ unacs% unacs^ unacs& unacs* unacs( unacs_ unacs= unacs+ unacs[ unacs{ unacs\\ unacs| unacs< unacs> unacs` unacs~ unacs/'
  - ';unacs"> ;unacs.> ;unacs_> ;unacs,0;unacs0 ;unacs- ;unacs1 ;unacs4 ;unacs; ;unacs03 ;unacs8 ;unacs6 ;unacs`a ;unacs_? ;unacs`s ;unacs.0 ;unacs`5 ;unacs`& ;unacs"9 ;unacs"< ;unacs.- ;unacs"7 ;unacs"6 ;unacs.< ;unacs_< ;unacs_* ;unacs_| ;unacs`< ;unacs`> ;unacs."9 ;unacs`9 ;unacs/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unaccordings-xl unaccordings-([{''"xl unaccordings-/xl unaccordings-$xl'
  - 'unacs-xl unacs-"<.<{''0xl unacs-_/xl unacs-`sxl'

- - 'unaccordings(xl unaccordings[xl unaccordings{xl unaccordings''xl unaccordings"xl unaccordings=([{''"-xl unaccordings([{''"-xl unaccordings/-xl unaccordings$-xl'
  - 'unacs"<xl unacs.<xl unacs{xl unacs''xl unacs0xl unacs"7"<.<{''0-xl unacs"<.<{''0-xl unacs/-xl unacs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(across [across {across ''across "across -across'
  - '"<acr .<acr _<acr,8acr 8acr -acr'

- - '!across @across #across $across %across ^across &across *across )across _across =across +across ]across }across \\across |across .across ,across ;across :across ?across <across >across `across ~across /across'
  - '6acr `aacr _?acr `sacr .0acr `5acr `&acr "9acr ">acr .-acr "7acr "6acr .>acr _>acr _*acr _|acr 4acr 1acr ;acr0 3acr ;8acr `<acr `>acr ;8acr .*acr `9acr _/acr'
  - xfail: contraction following special characters is ignored

- - '(acr [acr {acr ''acr "acr -acr'
  - '"<;acr .<;acr _<;acr,8;acr 8;acr -;acr'

- - '!acr @acr #acr $acr %acr ^acr &acr *acr )acr _acr =acr +acr ]acr }acr \\acr |acr .acr ,acr ;acr :acr ?acr <acr >acr ?acr `acr ~acr /acr'
  - '6;acr `a;acr _?;acr `s;acr .0;acr `5;acr `&;acr "9;acr ">;acr .-;acr "7;acr "6;acr .>;acr _>;acr _*;acr _|;acr 4;acr 1;acr ;2acr0 3;acr ;8;acr `<;acr `>;acr .*;acr `9;acr _/;acr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-across xl-([{''"across xl/-across xl$-across'
  - 'xl-acr xl-"<.<{''0acr xl_/-acr xl`s-acr'

- - 'xl(across xl[across xl{across xl''across xl"across xl-=([{''"across'
  - 'xl"<acr xl.<acr xl{acr xl''acr xl0acr xl-"7"<.<{''0acr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'across) across] across} across'' across" across- across, across. across; across: across? across!'
  - 'acr"> acr.> acr_> acr,0acr0 acr- acr1 acr4 acr; acr03 acr8 acr!'

- - 'across@ across# across$ across% across^ across& across* across( across_ across= across+ across[ across{ across\\ across| across< across> across` across~ across/'
  - 'acr`a acr_? acr`s acr.0 acr`5 acr`& acr"9 acr"< acr.- acr"7 acr"6 acr.< acr_< acr_* acr_| acr`< acr`> acr."9 acr`9 acr/'
  - xfail: contraction followed by special characters is ignored

- - 'acr) acr] acr} acr'' acr" acr- acr, acr. acr; acr: acr? acr!'
  - ';acr"> ;acr.> ;acr_> ;acr,0;acr0 ;acr- ;acr1 ;acr4 ;acr; ;acr03 ;acr8 ;acr!'

- - 'acr@ acr# acr$ acr% acr^ acr& acr* acr( acr_ acr= acr+ acr[ acr{ acr\\ acr| acr< acr> acr` acr~ acr/'
  - ';acr`a ;acr_? ;acr`s ;acr.0 ;acr`5 ;acr`& ;acr"9 ;acr"< ;acr.- ;acr"7 ;acr"6 ;acr.< ;acr_< ;acr_* ;acr_| ;acr`< ;acr`> ;acr."9 ;acr`9 ;acr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'across-xl across-([{''"xl across-/xl across-$xl'
  - 'acr-xl acr-"<.<{''0xl acr-_/xl acr-`sxl'

- - 'across(xl across[xl across{xl across''xl across"xl across=([{''"-xl across([{''"-xl across/-xl across$-xl'
  - 'acr"<xl acr.<xl acr{xl acr''xl acr0xl acr"7"<.<{''0-xl acr"<.<{''0-xl acr/-xl acr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(acrosss [acrosss {acrosss ''acrosss "acrosss -acrosss'
  - '"<acrs .<acrs _<acrs,8acrs 8acrs -acrs'

- - '!acrosss @acrosss #acrosss $acrosss %acrosss ^acrosss &acrosss *acrosss )acrosss _acrosss =acrosss +acrosss ]acrosss }acrosss \\acrosss |acrosss .acrosss ,acrosss ;acrosss :acrosss ?acrosss <acrosss >acrosss `acrosss ~acrosss /acrosss'
  - '6acrs `aacrs _?acrs `sacrs .0acrs `5acrs `&acrs "9acrs ">acrs .-acrs "7acrs "6acrs .>acrs _>acrs _*acrs _|acrs 4acrs 1acrs ;acrs0 3acrs ;8acrs `<acrs `>acrs ;8acrs .*acrs `9acrs _/acrs'
  - xfail: contraction following special characters is ignored

- - 'acrs  (acrs [acrs {acrs ''acrs "acrs -acrs !acrs @acrs #acrs $acrs %acrs ^acrs &acrs *acrs )acrs _acrs =acrs +acrs ]acrs }acrs \\acrs |acrs .acrs ,acrs ;acrs :acrs ?acrs <acrs >acrs ?acrs `acrs ~acrs /acrs'
  - ';acrs  "<;acrs .<;acrs _<;acrs,8;acrs 8;acrs -;acrs 6;acrs `a;acrs _?;acrs `s;acrs .0;acrs `5;acrs `&;acrs "9;acrs ">;acrs .-;acrs "7;acrs "6;acrs .>;acrs _>;acrs _*;acrs _|;acrs 4;acrs 1;acrs ;2acrs0 3;acrs ;8;acrs `<;acrs `>;acrs .*;acrs `9;acrs _/;acrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-acrosss xl-([{''"acrosss xl/-acrosss xl$-acrosss'
  - 'xl-acrs xl-"<.<{''0acrs xl_/-acrs xl`s-acrs'

- - 'xl(acrosss xl[acrosss xl{acrosss xl''acrosss xl"acrosss xl-=([{''"acrosss'
  - 'xl"<acrs xl.<acrs xl{acrs xl''acrs xl0acrs xl-"7"<.<{''0acrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'acrosss) acrosss] acrosss} acrosss'' acrosss" acrosss- acrosss, acrosss. acrosss; acrosss: acrosss? acrosss!'
  - 'acrs"> acrs.> acrs_> acrs,0acrs0 acrs- acrs1 acrs4 acrs; acrs03 acrs8 acrs!'

- - 'acrosss@ acrosss# acrosss$ acrosss% acrosss^ acrosss& acrosss* acrosss( acrosss_ acrosss= acrosss+ acrosss[ acrosss{ acrosss\\ acrosss| acrosss< acrosss> acrosss` acrosss~ acrosss/'
  - 'acrs`a acrs_? acrs`s acrs.0 acrs`5 acrs`& acrs"9 acrs"< acrs.- acrs"7 acrs"6 acrs.< acrs_< acrs_* acrs_| acrs`< acrs`> acrs."9 acrs`9 acrs/'
  - xfail: contraction followed by special characters is ignored

- - 'acrs) acrs] acrs} acrs'' acrs" acrs- acrs, acrs. acrs; acrs: acrs? acrs! acrs@ acrs# acrs$ acrs% acrs^ acrs& acrs* acrs( acrs_ acrs= acrs+ acrs[ acrs{ acrs\\ acrs| acrs< acrs> acrs` acrs~ acrs/'
  - ';acrs"> ;acrs.> ;acrs_> ;acrs,0;acrs0 ;acrs- ;acrs1 ;acrs4 ;acrs; ;acrs03 ;acrs8 ;acrs6 ;acrs`a ;acrs_? ;acrs`s ;acrs.0 ;acrs`5 ;acrs`& ;acrs"9 ;acrs"< ;acrs.- ;acrs"7 ;acrs"6 ;acrs.< ;acrs_< ;acrs_* ;acrs_| ;acrs`< ;acrs`> ;acrs."9 ;acrs`9 ;acrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'acrosss-xl acrosss-([{''"xl acrosss-/xl acrosss-$xl'
  - 'acrs-xl acrs-"<.<{''0xl acrs-_/xl acrs-`sxl'

- - 'acrosss(xl acrosss[xl acrosss{xl acrosss''xl acrosss"xl acrosss=([{''"-xl acrosss([{''"-xl acrosss/-xl acrosss$-xl'
  - 'acrs"<xl acrs.<xl acrs{xl acrs''xl acrs0xl acrs"7"<.<{''0-xl acrs"<.<{''0-xl acrs/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(accordings [accordings {accordings ''accordings "accordings -accordings'
  - '"<acs .<acs _<acs,8acs 8acs -acs'

- - '!accordings @accordings #accordings $accordings %accordings ^accordings &accordings *accordings )accordings _accordings =accordings +accordings ]accordings }accordings \\accordings |accordings .accordings ,accordings ;accordings :accordings ?accordings'
  - '6acs `aacs _?acs `sacs .0acs `5acs `&acs "9acs ">acs .-acs "7acs +acs .>acs _>acs _*acs _|acs 4acs 1acs ;acs0 3acs ;8acs'
  - xfail: contraction following special characters is ignored

- - '<accordings >accordings `accordings, ~accordings /accordings'
  - '`<acs `>acs .*acs `9acs _/acs'
  - xfail: contraction following special characters is ignored

- - 'acs (acs [acs {acs ''acs "acs -acs !acs @acs #acs $acs %acs ^acs &acs *acs )acs _acs =acs +acs ]acs }acs \\acs |acs .acs ,acs ;acs :acs ?acs <acs >acs `acs ~acs /acs'
  - ';acs "<;acs .<;acs _<;acs,8;acs 8;acs -;acs 6;acs `a;acs _?;acs `s;acs .0;acs `5;acs `&;acs "9;acs ">;acs .-;acs "7;acs "6;acs .>;acs _>;acs _*;acs _|;acs 4;acs 1;acs ;2acs0 3;acs ;8;acs `<;acs `>;acs .*;acs `9;acs _/;acs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-accordings xl-([{''"accordings xl/-accordings xl$-accordings'
  - 'xl-acs xl-"<.<{''0acs xl_/-acs xl`s-acs'

- - 'xl(accordings xl[accordings xl{accordings xl''accordings xl"accordings xl-=([{''"accordings'
  - 'xl"<acs xl.<acs xl{acs xl''acs xl0acs xl-"7"<.<{''0acs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'accordings) accordings] accordings} accordings'' accordings" accordings- accordings, accordings. accordings; accordings: accordings? accordings!'
  - 'acs"> acs.> acs_> acs,0acs0 acs- acs1 acs4 acs; acs03 acs8 acs!'

- - 'accordings@ accordings# accordings$ accordings% accordings^ accordings& accordings* accordings( accordings_ accordings= accordings+ accordings[ accordings{ accordings\\ accordings| accordings< accordings> accordings` accordings~ accordings/'
  - 'acs`a acs_? acs`s acs.0 acs`5 acs`& acs"9 acs"< acs.- acs"7 acs+ acs.< acs_< acs_* acs_| acs`< acs`> acs."9 acs`9 acs/'
  - xfail: contraction followed by special characters is ignored

- - 'acs) acs] acs} acs'' acs" acs- acs, acs. acs; acs: acs? acs! acs@ acs# acs$ acs% acs^ acs& acs* acs( acs_ acs= acs+ acs[ acs{ acs\\ acs| acs< acs> acs` acs~ acs/'
  - ';acs"> ;acs.> ;acs_> ;acs,0;acs0 ;acs- ;acs1 ;acs4 ;acs; ;acs03 ;acs8 ;acs6 ;acs`a ;acs_? ;acs`s ;acs.0 ;acs`5 ;acs`& ;acs"9 ;acs"< ;acs.- ;acs"7 ;acs"6 ;acs.< ;acs_< ;acs_* ;acs_| ;acs`< ;acs`> ;acs."9 ;acs`9 ;acs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'accordings-xl accordings-([{''"xl accordings-/xl accordings-$xl'
  - 'acs-xl acs-"<.<{''0xl acs-_/xl acs-`sxl'

- - 'accordings(xl accordings[xl accordings{xl accordings''xl accordings"xl accordings=([{''"-xl accordings([{''"-xl accordings/-xl accordings$-xl'
  - 'acs"<xl acs.<xl acs{xl acs''xl acs0xl acs"7"<.<{''0-xl acs"<.<{''0-xl acs/-xl acs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(after [after {after ''after "after -after'
  - '"<af .<af _<af,8af 8af -af'

- - '!after @after #after $after %after ^after &after *after )after _after =after +after ]after }after \\after |after .after ,after ;after :after ?after <after >after `after ~after /after'
  - '6af `aaf _?af `saf .0af `5af `&af "9af ">af .-af "7af "6af .>af }af _*af _|af 4af 1af ;af0 3af ;8af `<af `>af .*af `9af _/af'
  - xfail: contraction following special characters is ignored

- - '(af [af {af ''af "af -af'
  - '"<;af .<;af _<;af,8;af 8;af -;af'

- - '!af @af #af $af %af ^af &af *af )af _af =af +af ]af }af \\af |af .af ,af ;af :af ?af <af >af `af ~af /af'
  - '6;af `a;af _?;af `s;af .0;af `5;af `&;af "9;af ">;af .-;af "7;af "6;af .>;af _>;af _*;af _|;af 4;af 1;af ;2af0 3;af ;8;af `<;af `>;af .*;af `9;af _/;af'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-after xl-([{''"after xl/-after xl$-after'
  - 'xl-af xl-"<.<{''0af xl_/-af xl`s-af'

- - 'xl(after xl[after xl{after xl''after xl"after xl-=([{''"after'
  - 'xl"<af xl.<af xl{af xl''af xl0af xl-"7"<.<{''0af'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'after) after] after} after'' after" after- after, after. after; after: after? after!'
  - 'af"> af.> af_> af,0af0 af- af1 af4 af; af03 af8 af!'

- - 'after@ after# after$ after% after^ after& after* after( after_ after= after+ after[ after{ after\\ after| after< after> after` after~ after/'
  - 'af`a af_? af`s af.0 af`5 af`& af"9 af"< af.- af"7 af"6 af.< af_< af_* af_| af`< af`> af."9 af`9 af/'
  - xfail: contraction followed by special characters is ignored

- - 'af) af] af} af'' af" af- af, af. af; af: af? af!'
  - ';af"> ;af.> ;af_> ;af,0;af0 ;af- ;af1 ;af4 ;af; ;af03 ;af8 ;af!'

- - 'af@ af# af$ af% af^ af& af* af( af_ af= af+ af[ af{ af\\ af| af< af> af` af~ af/'
  - ';af`a ;af_? ;af`s ;af.0 ;af`5 ;af`& ;af"9 ;af"< ;af.- ;af"7 ;af"6 ;af.< ;af_< ;af_* ;af_| ;af`< ;af`> ;af."9 ;af`9 ;af/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'after-xl after-([{''"xl after-/xl after-$xl'
  - 'af-xl af-"<.<{''0xl af-_/xl af-`sxl'

- - 'after(xl after[xl after{xl after''xl after"xl after=([{''"-xl after([{''"-xl after/-xl after$-xl'
  - 'af"<xl af.<xl af{xl af''xl af0xl af"7"<.<{''0-xl af"<.<{''0-xl af/-xl af`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'afterr afterraid'
  - 'af;r af;raid'
  - xfail: contraction of "af" followed by "ra" has a missing grade 1 indicator before "a" due to conflict with contraction of "fr" followingy "a"

- - 'afterb afterc afterd afterf afterg afterh afterj afterk afterl afterm aftern afterp afterq afters aftert afterv afterw afterx afterz'
  - 'afb afc afd aff afg afh afj afk afl afm afn afp afq afs aft afv afw afx afz'

- - 'afb afc afd aff afg afh afj afk afl afm afn afp afq afr afs aft afv afw afx afz'
  - ';afb ;afc ;afd ;aff ;afg ;afh ;afj ;afk ;afl ;afm ;afn ;afp ;afq a;fr ;afs ;aft ;afv ;afw ;afx ;afz'
  - xfail: non-contraction of "af" followed by non-vowel letter has a missing grade 1 indicator due to conflict with contraction of "after"

- - 'aafter bafter cafter eafter  fafter gafter hafter iafter jafter kafter lafter  mafter nafter oafter paf qafter safter tafter uafter  vafter wafter xafter yafter zafter stafterf raftert afterford'
  - 'aaf baf caf eaf  faf gaf haf iaf jaf kaf laf  maf naf oaf paf qaf saf taf uaf  vaf waf xaf yaf zaf staff raft af"7d'

- - 'aaf baf caf eaf  faf gaf haf iaf jaf kaf laf  maf naf oaf paf qaf saf taf uaf  vaf waf xaf yaf zaf staff raft afford'
  - 'a;af b;af c;af e;af  f;af g;af h;af i;af j;af k;af l;af  m;af n;af o;af p;af q;af s;af t;af u;af  v;af w;af x;af y;af z;af st;aff r;aft ;af"7d'
  - xfail: non-contraction of "af" following letter excluding "d" and "r"  has a missing grade 1 indicator due to conflict with contraction of "after"

- - '(aftern [aftern {aftern ''aftern "aftern -aftern'
  - '"<af;n .<af;n _<af;n,8af;n 8af;n -af;n'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoon"

- - '!aftern @aftern #aftern $aftern %aftern ^aftern &aftern *aftern )aftern _aftern =aftern +aftern ]aftern }aftern \\aftern |aftern .aftern ,aftern ;aftern :aftern ?aftern <aftern >aftern'
  - '6af;n `aaf;n _?af;n `saf;n .0af;n `5af;n `&af;n "9af;n ">af;n .-af;n "7af;n "6af;n .>af;n _>af;n _*af;n _|af;n 4af;n 1af;n ;af;n0 3af;n ;8af;n `<af;n `>af;n'
  - xfail: contraction following special characters is ignored

- - '`aftern, ~aftern /aftern'
  - '.*af;n `9af;n _/af;n'
  - xfail: contraction following special characters is ignored

- - 'aftern) aftern] aftern} aftern'' aftern" aftern- aftern, aftern. aftern; aftern: aftern? aftern!'
  - 'af;n"> af;n.> af;n_> af;n,0af;n0 af;n- af;n1 af;n4 af;n; af;n03 af;n8 af;n!'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoon"

- - 'aftern@ aftern# aftern$ aftern% aftern^ aftern& aftern* aftern( aftern_ aftern= aftern+ aftern[ aftern{ aftern\\ aftern| aftern< aftern> aftern` aftern~ aftern/'
  - 'af;n`a af;n_? af;n`s af;n.0 af;n`5 af;n`& af;n"9 af;n"< af;n.- af;n"7 af;n"6 af;n.< af;n_< af;n_* af;n_| af;n`< af;n`> af;n."9 af;n`9 af;n/'
  - xfail: contraction followed by special characters is ignored

- - '(afterns [afterns {afterns ''afterns "afterns -afterns'
  - '"<af;ns .<af;ns _<af;ns,8af;ns 8af;ns -af;ns'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoons"

- - '!afterns @afterns #afterns $afterns %afterns ^afterns &afterns *afterns )afterns _afterns =afterns +afterns ]afterns }afterns \\afterns |afterns .afterns ,afterns af;ns :afterns ?afterns'
  - '6af;ns `aaf;ns _?af;ns `saf;ns .0af;ns `5af;ns `&af;ns "9af;ns ">af;ns .-af;ns "7af;ns "6af;ns .>af;ns _>af;ns _*af;ns _|af;ns 4af;ns 1af;ns ;af;ns0 3af;ns ;8af;ns'
  - xfail: contraction following special characters is ignored

- - '<afterns >afterns `afterns, ~afterns /afterns'
  - '`<af;ns `>af;ns .*af;ns `9af;ns _/af;ns'
  - xfail: contraction following special characters is ignored

- - 'afterns) afterns] afterns} afterns'' afterns" afterns- afterns, afterns. afterns; afterns: afterns? afterns!'
  - 'af;ns"> af;ns.> af;ns_> af;ns,0af;ns0 af;ns- af;ns1 af;ns4 af;ns; af;ns03 af;ns8 af;ns!'
  - xfail: contraction followed by "n" has a missing grade 1 indicator due to conflict with conraction of "afternoons"

- - 'afterns@ afterns# afterns$ afterns% afterns^ afterns& afterns* afterns( afterns_ afterns= afterns+ afterns[ afterns{ afterns\\ afterns| afterns< afterns> afterns` afterns~ afterns/'
  - 'af;ns`a af;ns_? af;ns`s af;ns.0 af;ns`5 af;ns`& af;ns"9 af;ns"< af;ns.- af;ns"7 af;ns"6 af;ns.< af;ns_< af;ns_* af;ns_| af;ns`< af;ns`> af;ns."9 af;ns`9 af;ns/'
  - xfail: contraction followed by special characters is ignored

- - '(afterw [afterw {afterw ''afterw "afterw -afterw'
  - '"<af;w .<af;w _<af;w,8af;w 8af;w -af;w'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterward"

- - '!afterw @afterw #afterw $afterw %afterw ^afterw &afterw *afterw )afterw _afterw =afterw +afterw ]afterw }afterw \\afterw |afterw .afterw ,afterw ;afterw ?afterw <afterw >afterw'
  - '6af;w `aaf;w _?af;w `saf;w .0af;w `5af;w `&af;w "9af;w ">af;w .-af;w "7af;w "6af;w .>af;w _>af;w _*af;w _|af;w 4af;w 1af;w ;af;w0 3af;w ;8af;w `<af;w `>af;w'
  - xfail: contraction following special characters is ignored

- - '`afterw, ~afterw /afterw'
  - '.*af;w `9af;w _/af;w'
  - xfail: contraction following special characters is ignored

- - 'afterw) afterw] afterw} afterw'' afterw" afterw- afterw, afterw. afterw; afterw: afterw? afterw!'
  - 'af;w"> af;w.> af;w_> af;w,0af;w0 af;w- af;w1 af;w4 af;w; af;w03 af;w8 af;w!'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterward"

- - 'afterw@ afterw# afterw$ afterw% afterw^ afterw& afterw* afterw( afterw_ afterw= afterw+ afterw[ afterw{ afterw\\ afterw| afterw< afterw> afterw` afterw~ afterw/'
  - 'af;w`a af;w_? af;w`s af;w.0 af;w`5 af;w`& af;w"9 af;w"< af;w.- af;w"7 af;w"6 af;w.< af;w_< af;w_* af;w_| af;w`< af;w`> af;w."9 af;w`9 af;w/'
  - xfail: contraction followed by special characters is ignored

- - '(afterws [afterws {afterws ''afterws "afterws -afterws'
  - '"<af;ws .<af;ws _<af;ws,8af;ws 8af;ws -af;ws'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterwards"

- - '!afterws @afterws #afterws $afterws %afterws ^afterws &afterws *afterws )afterws _afterws =afterws +afterws ]afterws }afterws \\afterws |afterws .afterws ,afterws af;ws :afterws ?afterws'
  - '6af;ws `aaf;ws _?af;ws `saf;ws .0af;ws `5af;ws `&af;ws "9af;ws ">af;ws .-af;ws "7af;ws "6af;ws .>af;ws _>af;ws _*af;ws _|af;ws 4af;ws 1af;ws ;af;ws0 3af;ws ;8af;ws'
  - xfail: contraction following special characters is ignored

- - '<afterws >afterws `afterws, ~afterws /afterws'
  - '`<af;ws `>af;ws .*af;ws `9af;ws _/af;ws'
  - xfail: contraction following special characters is ignored

- - 'afterws) afterws] afterws} afterws'' afterws" afterws- afterws, afterws. afterws; afterws: afterws? afterws!'
  - 'af;ws"> af;ws.> af;ws_> af;ws,0af;ws0 af;ws- af;ws1 af;ws4 af;ws; af;ws03 af;ws8 af;ws!'
  - xfail: contraction followed by "w" has a missing grade 1 indicator due to conflict with conraction of "afterwards"

- - 'afterws@ afterws# afterws$ afterws% afterws^ afterws& afterws* afterws( afterws_ afterws= afterws+ afterws[ afterws{ afterws\\ afterws| afterws< afterws> afterws` afterws~ afterws/'
  - 'af;ws`a af;ws_? af;ws`s af;ws.0 af;ws`5 af;ws`& af;ws"9 af;ws"< af;ws.- af;ws"7 af;ws"6 af;ws.< af;ws_< af;ws_* af;ws_| af;ws`< af;ws`> af;ws."9 af;ws`9 af;ws/'
  - xfail: contraction followed by special characters is ignored

- - '(afternoon [afternoon {afternoon ''afternoon "afternoon -afternoon'
  - '"<afn .<afn _<afn,8afn 8afn -afn'

- - '!afternoon @afternoon #afternoon $afternoon %afternoon ^afternoon &afternoon *afternoon )afternoon _afternoon =afternoon +afternoon ]afternoon }afternoon \\afternoon |afternoon .afternoon ,afternoon ;afternoon :afternoon ?afternoon <afternoon >afternoon'
  - '6afn `aafn _?afn `safn .0afn `5afn `&afn "9afn ">afn .-afn "7afn "6afn .>afn _>afn _*afn _|afn 4afn 1afn ;afn0 3afn ;8afn `<afn `>afn'
  - xfail: contraction following special characters is ignored

- - '`afternoon, ~afternoon /afternoon'
  - '.*afn `9afn _/afn'
  - xfail: contraction following special characters is ignored

- - '(afn [afn {afn ''afn "afn -afn'
  - '"<;afn .<;afn _<;afn,8;afn 8;afn -;afn'

- - '!afn @afn #afn $afn %afn ^afn &afn *afn )afn _afn =afn +afn ]afn }afn \\afn |afn .afn ,afn ;afn :afn ?afn <afn >afn `afn ~afn /afn'
  - '6;afn `a;afn _?;afn `s;afn .0;afn `5;afn `&;afn "9;afn ">;afn .-;afn "7;afn "6;afn .>;afn _>;afn _*;afn _|;afn 4;afn 1;afn ;2afn0 3;afn ;8;afn `<;afn `>;afn .*;afn `9;afn _/;afn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afternoon xl-([{''"afternoon xl/-afternoon xl$-afternoon'
  - 'xl-afn xl-"<.<{''0afn xl_/-afn xl`s-afn'

- - 'xl(afternoon xl[afternoon xl{afternoon xl''afternoon xl"afternoon xl-=([{''"afternoon'
  - 'xl"<afn xl.<afn xl{afn xl''afn xl0afn xl-"7"<.<{''0afn'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afternoon) afternoon] afternoon} afternoon'' afternoon" afternoon- afternoon, afternoon. afternoon; afternoon: afternoon? afternoon!'
  - 'afn"> afn.> afn_> afn,0afn0 afn- afn1 afn4 afn; afn03 afn8 afn!'

- - 'afternoon@ afternoon# afternoon$ afternoon% afternoon^ afternoon& afternoon* afternoon( afternoon_ afternoon= afternoon+ afternoon[ afternoon{ afternoon\\ afternoon| afternoon< afternoon> afternoon` afternoon~ afternoon/'
  - 'afn`a afn_? afn`s afn.0 afn`5 afn`& afn"9 afn"< afn.- afn"7 afn"6 afn.< afn_< afn_* afn_| afn`< afn`> afn."9 afn`9 afn/'
  - xfail: contraction followed by special characters is ignored

- - 'afn) afn] afn} afn'' afn" afn- afn, afn. afn; afn: afn? afn!'
  - ';afn"> ;afn.> ;afn_> ;afn,0;afn0 ;afn- ;afn1 ;afn4 ;afn; ;afn03 ;afn8 ;afn!'

- - 'afn@ afn# afn$ afn% afn^ afn& afn* afn( afn_ afn= afn+ afn[ afn{ afn\\ afn| afn< afn> afn` afn~ afn/'
  - ';afn`a ;afn_? ;afn`s ;afn.0 ;afn`5 ;afn`& ;afn"9 ;afn"< ;afn.- ;afn"7 ;afn"6 ;afn.< ;afn_< ;afn_* ;afn_| ;afn`< ;afn`> ;afn."9 ;afn`9 ;afn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afternoon-xl afternoon-([{''"xl afternoon-/xl afternoon-$xl'
  - 'afn-xl afn-"<.<{''0xl afn-_/xl afn-`sxl'

- - 'afternoon(xl afternoon[xl afternoon{xl afternoon''xl afternoon"xl afternoon=([{''"-xl afternoon([{''"-xl afternoon/-xl afternoon$-xl'
  - 'afn"<xl afn.<xl afn{xl afn''xl afn0xl afn"7"<.<{''0-xl afn"<.<{''0-xl afn/-xl afn`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afternoons [afternoons {afternoons ''afternoons "afternoons -afternoons'
  - '"<afns .<afns _<afns,8afns 8afns -afns'

- - '!afternoons @afternoons #afternoons $afternoons %afternoons ^afternoons &afternoons *afternoons )afternoons _afternoons =afternoons +afternoons ]afternoons }afternoons \\afternoons |afternoons .afternoons ,afternoons ;afternoons :afternoons ?afternoons'
  - '6afns `aafns _?afns `safns .0afns `5afns `&afns "9afns ">afns .-afns "7afns "6afns .>afns _>afns _*afns _|afns 4afns 1afns ;afns0 3afns ;8afns'
  - xfail: contraction following special characters is ignored

- - '<afternoons >afternoons `afternoons, ~afternoons /afternoons'
  - '`<afns `>afns .*afns `9afns _/afns'
  - xfail: contraction following special characters is ignored

- - 'afns (afns [afns {afns ''afns "afns -afns !afns @afns #afns $afns %afns ^afns &afns *afns )afns _afns =afns +afns ]afns }afns \\afns |afns .afns ,afns ;afns :afns ?afns <afns >afns `afns ~afns /afns'
  - ';afns "<;afns .<;afns _<;afns,8;afns 8;afns -;afns 6;afns `a;afns _?;afns `s;afns .0;afns `5;afns `&;afns "9;afns ">;afns .-;afns "7;afns "6;afns .>;afns _>;afns _*;afns _|;afns 4;afns 1;afns ;2afns0 3;afns ;8;afns `<;afns `>;afns .*;afns `9;afns _/;afns'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afternoons xl-([{''"afternoons xl/-afternoons xl$-afternoons'
  - 'xl-afns xl-"<.<{''0afns xl_/-afns xl`s-afns'

- - 'xl(afternoons xl[afternoons xl{afternoons xl''afternoons xl"afternoons xl-=([{''"afternoons'
  - 'xl"<afns xl.<afns xl{afns xl''afns xl0afns xl-"7"<.<{''0afns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afternoons) afternoons] afternoons} afternoons'' afternoons" afternoons- afternoons, afternoons. afternoons; afternoons: afternoons? afternoons!'
  - 'afns"> afns.> afns_> afns,0afns0 afns- afns1 afns4 afns; afns03 afns8 afns!'

- - 'afternoons@ afternoons# afternoons$ afternoons% afternoons^ afternoons& afternoons* afternoons( afternoons_ afternoons= afternoons+ afternoons[ afternoons{ afternoons\\ afternoons| afternoons< afternoons> afternoons` afternoons~ afternoons/'
  - 'afns`a afns_? afns`s afns.0 afns`5 afns`& afns"9 afns"< afns.- afns"7 afns"6 afns.< afns_< afns_* afns_| afns`< afns`> afns."9 afns`9 afns/'
  - xfail: contraction followed by special characters is ignored

- - 'afns) afns] afns} afns'' afns" afns- afns, afns. afns; afns: afns? afns! afns@ afns# afns$ afns% afns^ afns& afns* afns( afns_ afns= afns+ afns[ afns{ afns\\ afns| afns< afns> afns` afns~ afns/'
  - ';afns"> ;afns.> ;afns_> ;afns,0;afns0 ;afns- ;afns1 ;afns4 ;afns; ;afns03 ;afns8 ;afns6 ;afns`a ;afns_? ;afns`s ;afns.0 ;afns`5 ;afns`& ;afns"9 ;afns"< ;afns.- ;afns"7 ;afns"6 ;afns.< ;afns_< ;afns_* ;afns_| ;afns`< ;afns`> ;afns."9 ;afns`9 ;afns/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afternoons-xl afternoons-([{''"xl afternoons-/xl afternoons-$xl'
  - 'afns-xl afns-"<.<{''0xl afns-_/xl afns-`sxl'

- - 'afternoons(xl afternoons[xl afternoons{xl afternoons''xl afternoons"xl afternoons=([{''"-xl afternoons([{''"-xl afternoons/-xl afternoons$-xl'
  - 'afns"<xl afns.<xl afns{xl afns''xl afns0xl afns"7"<.<{''0-xl afns"<.<{''0-xl afns/-xl afns`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afterward [afterward {afterward ''afterward "afterward -afterward'
  - '"<afw .<afw _<afw,8afw 8afw -afw'

- - '!afterward @afterward #afterward $afterward %afterward ^afterward &afterward *afterward )afterward _afterward =afterward +afterward ]afterward }afterward \\afterward |afterward .afterward ,afterward ;afterward :afterward ?afterward <afterward >afterward'
  - '6afw `aafw _?afw `safw .0afw `5afw `&afw "9afw ">afw .-afw "7afw "6afw .>afw _>afw _*afw _|afw 4afw 1afw ;afw0 3afw ;8afw `<afw `>afw'
  - xfail: contraction following special characters is ignored

- - '`afterward, ~afterward /afterward'
  - '.*afw `9afw _/afw'
  - xfail: contraction following special characters is ignored

- - '(afw [afw {afw ''afw "afw -afw'
  - '"<;afw .<;afw _<;afw,8;afw 8;afw -;afw'

- - '!afw @afw #afw $afw %afw ^afw &afw *afw )afw _afw =afw +afw ]afw }afw \\afw |afw .afw ,afw ;afw :afw ?afw <afw >afw `afw ~afw /afw'
  - '6;afw `a;afw _?;afw `s;afw .0;afw `5;afw `&;afw "9;afw ">;afw .-;afw "7;afw "6;afw .>;afw _>;afw _*;afw _|;afw 4;afw 1;afw ;2afw0 3;afw ;8;afw `<;afw `>;afw .*;afw `9;afw _/;afw'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afterward xl-([{''"afterward xl/-afterward xl$-afterward'
  - 'xl-afw xl-"<.<{''0afw xl_/-afw xl`s-afw'

- - 'xl(afterward xl[afterward xl{afterward xl''afterward xl"afterward xl-=([{''"afterward'
  - 'xl"<afw xl.<afw xl{afw xl''afw xl0afw xl-"7"<.<{''0afw'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afterward) afterward] afterward} afterward'' afterward" afterward- afterward, afterward. afterward; afterward: afterward? afterward!'
  - 'afw"> afw.> afw_> afw,0afw0 afw- afw1 afw4 afw; afw03 afw8 afw!'

- - 'afterward@ afterward# afterward$ afterward% afterward^ afterward& afterward* afterward( afterward_ afterward= afterward+ afterward[ afterward{ afterward\\ afterward| afterward< afterward> afterward` afterward~ afterward/'
  - 'afw`a afw_? afw`s afw.0 afw`5 afw`& afw"9 afw"< afw.- afw"7 afw"6 afw.< afw_< afw_* afw_| afw`< afw`> afw."9 afw`9 afw/'
  - xfail: contraction followed by special characters is ignored

- - 'afw) afw] afw} afw'' afw" afw- afw, afw. afw; afw: afw? afw!'
  - ';afw"> ;afw.> ;afw_> ;afw,0;afw0 ;afw- ;afw1 ;afw4 ;afw; ;afw03 ;afw8 ;afw!'

- - 'afw@ afw# afw$ afw% afw^ afw& afw* afw( afw_ afw= afw+ afw[ afw{ afw\\ afw| afw< afw> afw` afw~ afw/'
  - ';afw`a ;afw_? ;afw`s ;afw.0 ;afw`5 ;afw`& ;afw"9 ;afw"< ;afw.- ;afw"7 ;afw"6 ;afw.< ;afw_< ;afw_* ;afw_| ;afw`< ;afw`> ;afw."9 ;afw`9 ;afw/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afterward-xl afterward-([{''"xl afterward-/xl afterward-$xl'
  - 'afw-xl afw-"<.<{''0xl afw-_/xl afw-`sxl'

- - 'afterward(xl afterward[xl afterward{xl afterward''xl afterward"xl afterward=([{''"-xl afterward([{''"-xl afterward/-xl afterward$-xl'
  - 'afw"<xl afw.<xl afw{xl afw''xl afw0xl afw"7"<.<{''0-xl afw"<.<{''0-xl afw/-xl afw`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(afterwards [afterwards {afterwards ''afterwards "afterwards -afterwards'
  - '"<afws .<afws _<afws,8afws 8afws -afws'

- - '!afterwards @afterwards #afterwards $afterwards %afterwards ^afterwards &afterwards *afterwards )afterwards _afterwards =afterwards +afterwards ]afterwards }afterwards \\afterwards |afterwards .afterwards ,afterwards ;afterwards :afterwards ?afterwards'
  - '6afws `aafws _?afws `safws .0afws `5afws `&afws "9afws ">afws .-afws "7afws "6afws .>afws _>afws _*afws _|afws 4afws 1afws ;afws0 3afws ;8afws'
  - xfail: contraction following special characters is ignored

- - '<afterwards >afterwards `afterwards, ~afterwards /afterwards'
  - '`<afws `>afws .*afws `9afws _/afws'
  - xfail: contraction following special characters is ignored

- - 'afws (afws [afws {afws ''afws "afws -afws !afws @afws #afws $afws %afws ^afws &afws *afws )afws _afws =afws +afws ]afws }afws \\afws |afws .afws ,afws ;afws :afws ?afws <afws >afws `afws ~afws /afws'
  - ';afws "<;afws .<;afws _<;afws,8;afws 8;afws -;afws 6;afws `a;afws _?;afws `s;afws .0;afws `5;afws `&;afws "9;afws ">;afws .-;afws "7;afws "6;afws .>;afws _>;afws _*;afws _|;afws 4;afws 1;afws ;2afws0 3;afws ;8;afws `<;afws `>;afws .*;afws `9;afws _/;afws'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-afterwards xl-([{''"afterwards xl/-afterwards xl$-afterwards'
  - 'xl-afws xl-"<.<{''0afws xl_/-afws xl`s-afws'

- - 'xl(afterwards xl[afterwards xl{afterwards xl''afterwards xl"afterwards xl-=([{''"afterwards'
  - 'xl"<afws xl.<afws xl{afws xl''afws xl0afws xl-"7"<.<{''0afws'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'afterwards) afterwards] afterwards} afterwards'' afterwards" afterwards- afterwards, afterwards. afterwards; afterwards: afterwards? afterwards!'
  - 'afws"> afws.> afws_> afws,0afws0 afws- afws1 afws4 afws; afws03 afws8 afws!'

- - 'afterwards@ afterwards# afterwards$ afterwards% afterwards^ afterwards& afterwards* afterwards( afterwards_ afterwards= afterwards+ afterwards[ afterwards{ afterwards\\ afterwards| afterwards< afterwards> afterwards` afterwards~ afterwards/'
  - 'afws`a afws_? afws`s afws.0 afws`5 afws`& afws"9 afws"< afws.- afws"7 afws"6 afws.< afws_< afws_* afws_| afws`< afws`> afws."9 afws`9 afws/'
  - xfail: contraction followed by special characters is ignored

- - 'afws) afws] afws} afws'' afws" afws- afws, afws. afws; afws: afws? afws! afws@ afws# afws$ afws% afws^ afws& afws* afws( afws_ afws= afws+ afws[ afws{ afws\\ afws| afws< afws> afws` afws~ afws/'
  - ';afws"> ;afws.> ;afws_> ;afws,0;afws0 ;afws- ;afws1 ;afws4 ;afws; ;afws03 ;afws8 ;afws6 ;afws`a ;afws_? ;afws`s ;afws.0 ;afws`5 ;afws`& ;afws"9 ;afws"< ;afws.- ;afws"7 ;afws"6 ;afws.< ;afws_< ;afws_* ;afws_| ;afws`< ;afws`> ;afws."9 ;afws`9 ;afws/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'afterwards-xl afterwards-([{''"xl afterwards-/xl afterwards-$xl'
  - 'afws-xl afws-"<.<{''0xl afws-_/xl afws-`sxl'

- - 'afterwards(xl afterwards[xl afterwards{xl afterwards''xl afterwards"xl afterwards=([{''"-xl afterwards([{''"-xl afterwards/-xl afterwards$-xl'
  - 'afws"<xl afws.<xl afws{xl afws''xl afws0xl afws"7"<.<{''0-xl afws"<.<{''0-xl afws/-xl afws`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(again [again {again ''again "again -again'
  - '"<ag .<ag _<ag,8ag 8ag -ag'

- - '!again @again #again $again %again ^again &again *again )again _again =again +again ]again }again \\again |again .again ,again ;again :again ?again <again >again `again ~again /again'
  - '6ag `aag _?ag `sag .0ag `5ag `&ag "9ag ">ag .-ag "7ag "6ag .>ag _>ag _*ag _|ag 4ag 1ag ;ag0 3ag ;8ag `<ag `>ag ;8ag .*ag `9ag _/ag'
  - xfail: contraction following special characters is ignored

- - '(ag [ag {ag ''ag "ag -ag'
  - '"<;ag .<;ag _<;ag,8;ag 8;ag -;ag'

- - '!ag @ag #ag $ag %ag ^ag &ag *ag )ag _ag =ag +ag ]ag }ag \\ag |ag .ag ,ag ;ag :ag ?ag <ag >ag ?ag `ag ~ag /ag'
  - '6;ag `a;ag _?;ag `s;ag .0;ag `5;ag `&;ag "9;ag ">;ag .-;ag "7;ag "6;ag .>;ag _>;ag _*;ag _|;ag 4;ag 1;ag ;2ag0 3;ag ;8;ag `<;ag `>;ag .*;ag `9;ag _/;ag'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-again xl-([{''"again xl/-again xl$-again'
  - 'xl-ag xl-"<.<{''0ag xl_/-ag xl`s-ag'

- - 'xl(again xl[again xl{again xl''again xl"again xl-=([{''"again'
  - 'xl"<ag xl.<ag xl{ag xl''ag xl0ag xl-"7"<.<{''0ag'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'again) again] again} again'' again" again- again, again. again; again: again? again!'
  - 'ag"> ag.> ag_> ag,0ag0 ag- ag1 ag4 ag; ag03 ag8 ag!'

- - 'again@ again# again$ again% again^ again& again* again( again_ again= again+ again[ again{ again\\ again| again< again> again` again~ again/'
  - 'ag`a ag_? ag`s ag.0 ag`5 ag`& ag"9 ag"< ag.- ag"7 ag"6 ag.< ag_< ag_* ag_| ag`< ag`> ag."9 ag`9 ag/'
  - xfail: contraction followed by special characters is ignored

- - 'ag) ag] ag} ag'' ag" ag- ag, ag. ag; ag: ag? ag!'
  - ';ag"> ;ag.> ;ag_> ;ag,0;ag0 ;ag- ;ag1 ;ag4 ;ag; ;ag03 ;ag8 ;ag!'

- - 'ag@ ag# ag$ ag% ag^ ag& ag* ag( ag_ ag= ag+ ag[ ag{ ag\\ ag| ag< ag> ag` ag~ ag/'
  - ';ag`a ;ag_? ;ag`s ;ag.0 ;ag`5 ;ag`& ;ag"9 ;ag"< ;ag.- ;ag"7 ;ag"6 ;ag.< ;ag_< ;ag_* ;ag_| ;ag`< ;ag`> ;ag."9 ;ag`9 ;ag/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'again-xl again-([{''"xl again-/xl again-$xl'
  - 'ag-xl ag-"<.<{''0xl ag-_/xl ag-`sxl'

- - 'again(xl again[xl again{xl again''xl again"xl again=([{''"-xl again([{''"-xl again/-xl again$-xl'
  - 'ag"<xl ag.<xl ag{xl ag''xl ag0xl ag"7"<.<{''0-xl ag"<.<{''0-xl ag/-xl ag`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(agains [agains {agains ''agains "agains -agains'
  - '"<ags .<ags _<ags,8ags 8ags -ags'

- - '!agains @agains #agains $agains %agains ^agains &agains *agains )agains _agains =agains +agains ]agains }agains \\agains |agains .agains ,agains ;agains :agains ?agains <agains >agains `agains ~agains /agains'
  - '6ags `aags _?ags `sags .0ags `5ags `&ags "9ags ">ags .-ags "7ags "6ags .>ags _>ags _*ags _|ags 4ags 1ags ;ags0 3ags ;8ags `<ags `>ags ;8ags .*ags `9ags _/ags'
  - xfail: contraction following special characters is ignored

- - 'ags  (ags [ags {ags ''ags "ags -ags !ags @ags #ags $ags %ags ^ags &ags *ags )ags _ags =ags +ags ]ags }ags \\ags |ags .ags ,ags ;ags :ags ?ags <ags >ags ?ags `ags ~ags /ags'
  - ';ags  "<;ags .<;ags _<;ags,8;ags 8;ags -;ags 6;ags `a;ags _?;ags `s;ags .0;ags `5;ags `&;ags "9;ags ">;ags .-;ags "7;ags "6;ags .>;ags _>;ags _*;ags _|;ags 4;ags 1;ags ;2ags0 3;ags ;8;ags `<;ags `>;ags .*;ags `9;ags _/;ags'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-agains xl-([{''"agains xl/-agains xl$-agains'
  - 'xl-ags xl-"<.<{''0ags xl_/-ags xl`s-ags'

- - 'xl(agains xl[agains xl{agains xl''agains xl"agains xl-=([{''"agains'
  - 'xl"<ags xl.<ags xl{ags xl''ags xl0ags xl-"7"<.<{''0ags'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'agains) agains] agains} agains'' agains" agains- agains, agains. agains; agains: agains? agains!'
  - 'ags"> ags.> ags_> ags,0ags0 ags- ags1 ags4 ags; ags03 ags8 ags!'

- - 'agains@ agains# agains$ agains% agains^ agains& agains* agains( agains_ agains= agains+ agains[ agains{ agains\\ agains| agains< agains> agains` agains~ agains/'
  - 'ags`a ags_? ags`s ags.0 ags`5 ags`& ags"9 ags"< ags.- ags"7 ags"6 ags.< ags_< ags_* ags_| ags`< ags`> ags."9 ags`9 ags/'
  - xfail: contraction followed by special characters is ignored

- - 'ags) ags] ags} ags'' ags" ags- ags, ags. ags; ags: ags? ags! ags@ ags# ags$ ags% ags^ ags& ags* ags( ags_ ags= ags+ ags[ ags{ ags\\ ags| ags< ags> ags` ags~ ags/'
  - ';ags"> ;ags.> ;ags_> ;ags,0;ags0 ;ags- ;ags1 ;ags4 ;ags; ;ags03 ;ags8 ;ags6 ;ags`a ;ags_? ;ags`s ;ags.0 ;ags`5 ;ags`& ;ags"9 ;ags"< ;ags.- ;ags"7 ;ags"6 ;ags.< ;ags_< ;ags_* ;ags_| ;ags`< ;ags`> ;ags."9 ;ags`9 ;ags/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'agains-xl agains-([{''"xl agains-/xl agains-$xl'
  - 'ags-xl ags-"<.<{''0xl ags-_/xl ags-`sxl'

- - 'agains(xl agains[xl agains{xl agains''xl agains"xl agains=([{''"-xl agains([{''"-xl agains/-xl agains$-xl'
  - 'ags"<xl ags.<xl ags{xl ags''xl ags0xl ags"7"<.<{''0-xl ags"<.<{''0-xl ags/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(against [against {against ''against "against -against'
  - '"<ag/ .<ag/ _<ag/,8ag/ 8ag/ -ag/'

- - '!against @against #against $against %against ^against &against *against )against _against =against +against ]against }against \\against |against .against ,against ;against :against ?against <against >against `against ~against /against'
  - '6ag/ `aag/ _?ag/ `sag/ .0ag/ `5ag/ `&ag/ "9ag/ ">ag/ .-ag/ "7ag/ "6ag/ .>ag/ _>ag/ _*ag/ _|ag/ 4ag/ 1ag/ ;ag/0 3ag/ ;8ag/ `<ag/ `>ag/ ;8ag/ .*ag/ `9ag/ /ag/'
  - xfail: contraction following special characters is ignored

- - 'xl-against xl-([{''"against xl/-against xl$-against'
  - 'xl-ag/ xl-"<.<{''0ag/ xl/-ag/ xl`s-ag/'

- - 'xl(against xl[against xl{against xl''against xl"against xl-=([{''"against'
  - 'xl"<ag/ xl.<ag/ xl{ag/ xl''ag/ xl0ag/ xl-"7"<.<{''0ag/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'against) against] against} against'' against" against- against, against. against; against: against? against!'
  - 'ag/"> ag/.> ag/_> ag/,0ag/0 ag/- ag/1 ag/4 ag/; ag/03 ag/8 ag/!'

- - 'against@ against# against$ against% against^ against& against* against( against_ against= against+ against[ against{ against\\ against| against< against> against` against~ against/'
  - 'ag/`a ag/_? ag/`s ag/.0 ag/`5 ag/`& ag/"9 ag/"< ag/.- ag/"7 ag/"6 ag/.< ag/_< ag/_* ag/_| ag/`< ag/`> ag/."9 ag/`9 ag//'
  - xfail: contraction followed by special characters is ignored

- - 'against-xl against-([{''"xl against-/xl against-$xl'
  - 'ag/-xl ag/-"<.<{''0xl ag/-_/xl ag/-`sxl'

- - 'against(xl against[xl against{xl against''xl against"xl against=([{''"-xl against([{''"-xl against/-xl against$-xl'
  - 'ag/"<xl ag/.<xl ag/{xl ag/''xl ag/0xl ag/"7"<.<{''0-xl ag/"<.<{''0-xl ag//-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(almost [almost {almost ''almost "almost -almost'
  - '"<alm .<alm _<alm,8alm 8alm -alm'

- - '!almost @almost #almost $almost %almost ^almost &almost *almost )almost _almost =almost +almost ]almost }almost \\almost |almost .almost ,almost ;almost :almost ?almost <almost >almost `almost ~almost /almost'
  - '6alm `aalm _?alm `salm .0alm `5alm `&alm "9alm ">alm .-alm "7alm "6alm .>alm _>alm _*alm _|alm 4alm 1alm ;alm0 3alm ;8alm `<alm `>alm ;8alm .*alm `9alm /alm'
  - xfail: contraction following special characters is ignored

- - '(alm [alm {alm ''alm "alm -alm'
  - '"<;alm .<;alm _<;alm,8;alm 8;alm -;alm'

- - '!alm @alm #alm $alm %alm ^alm &alm *alm )alm _alm =alm +alm ]alm }alm \\alm |alm .alm ,alm ;alm :alm ?alm <alm >alm ?alm `alm ~alm /alm'
  - '6;alm `a;alm _?;alm `s;alm .0;alm `5;alm `&;alm "9;alm ">;alm .-;alm "7;alm "6;alm .>;alm _>;alm _*;alm _|;alm 4;alm 1;alm ;2alm0 3;alm ;8;alm `<;alm `>;alm .*;alm `9;alm _/;alm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-almost xl-([{''"almost xl/-almost xl$-almost'
  - 'xl-alm xl-"<.<{''0alm xl/-alm xl`s-alm'

- - 'xl(almost xl[almost xl{almost xl''almost xl"almost xl-=([{''"almost'
  - 'xl"<alm xl.<alm xl{alm xl''alm xl0alm xl-"7"<.<{''0alm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'almost) almost] almost} almost'' almost" almost- almost, almost. almost; almost: almost? almost!'
  - 'alm"> alm.> alm_> alm,0alm0 alm- alm1 alm4 alm; alm03 alm8 alm!'

- - 'almost@ almost# almost$ almost% almost^ almost& almost* almost( almost_ almost= almost+ almost[ almost{ almost\\ almost| almost< almost> almost` almost~ almost/'
  - 'alm`a alm_? alm`s alm.0 alm`5 alm`& alm"9 alm"< alm.- alm"7 alm"6 alm.< alm_< alm_* alm_| alm`< alm`> alm."9 alm`9 alm/'
  - xfail: contraction followed by special characters is ignored

- - 'alm) alm] alm} alm'' alm" alm- alm, alm. alm; alm: alm? alm!'
  - ';alm"> ;alm.> ;alm_> ;alm,0;alm0 ;alm- ;alm1 ;alm4 ;alm; ;alm03 ;alm8 ;alm!'

- - 'alm@ alm# alm$ alm% alm^ alm& alm* alm( alm_ alm= alm+ alm[ alm{ alm\\ alm| alm< alm> alm` alm~ alm/'
  - ';alm`a ;alm_? ;alm`s ;alm.0 ;alm`5 ;alm`& ;alm"9 ;alm"< ;alm.- ;alm"7 ;alm"6 ;alm.< ;alm_< ;alm_* ;alm_| ;alm`< ;alm`> ;alm."9 ;alm`9 ;alm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'almost-xl almost-([{''"xl almost-/xl almost-$xl'
  - 'alm-xl alm-"<.<{''0xl alm-_/xl alm-`sxl'

- - 'almost(xl almost[xl almost{xl almost''xl almost"xl almost=([{''"-xl almost([{''"-xl almost/-xl almost$-xl'
  - 'alm"<xl alm.<xl alm{xl alm''xl alm0xl alm"7"<.<{''0-xl alm"<.<{''0-xl alm/-xl alm`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(already [already {already ''already "already -already'
  - '"<alr .<alr _<alr,8alr 8alr -alr'

- - '!already @already #already $already %already ^already &already *already )already _already =already +already ]already }already \\already |already .already ,already ;already :already ?already <already >already `already ~already /already'
  - '6alr `aalr _?alr `salr .0alr `5alr `&alr "9alr ">alr .-alr "7alr "6alr .>alr _>alr _*alr _|alr 4alr 1alr ;alr0 3alr ;8alr `<alr `>alr .*alr `9alr _/alr'
  - xfail: contraction following special characters is ignored

- - '(alr [alr {alr ''alr "alr -alr'
  - '"<;alr .<;alr _<;alr,8;alr 8;alr -;alr'

- - '!alr @alr #alr $alr %alr ^alr &alr *alr )alr _alr =alr +alr ]alr }alr \\alr |alr .alr ,alr ;alr :alr ?alr <alr >alr `alr ~alr /alr'
  - '6;alr `a;alr _?;alr `s;alr .0;alr `5;alr `&;alr "9;alr ">;alr .-;alr "7;alr "6;alr .>;alr _>;alr _*;alr _|;alr 4;alr 1;alr ;2alr0 3;alr ;8;alr `<;alr `>;alr .*;alr `9;alr _/;alr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-already xl-([{''"already xl/-already xl$-already'
  - 'xl-alr xl-"<.<{''0alr xl_/-alr xl`s-alr'

- - 'xl(already xl[already xl{already xl''already xl"already xl-=([{''"already'
  - 'xl"<alr xl.<alr xl{alr xl''alr xl0alr xl-"7"<.<{''0alr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'already) already] already} already'' already" already- already, already. already; already: already? already!'
  - 'alr"> alr.> alr_> alr,0alr0 alr- alr1 alr4 alr; alr03 alr8 alr!'

- - 'already@ already# already$ already% already^ already& already* already( already_ already= already+ already[ already{ already\\ already| already< already> already` already~ already/'
  - 'alr`a alr_? alr`s alr.0 alr`5 alr`& alr"9 alr"< alr.- alr"7 alr"6 alr.< alr_< alr_* alr_| alr`< alr`> alr."9 alr`9 alr/'
  - xfail: contraction followed by special characters is ignored

- - 'alr) alr] alr} alr'' alr" alr- alr, alr. alr; alr: alr? alr!'
  - ';alr"> ;alr.> ;alr_> ;alr,0;alr0 ;alr- ;alr1 ;alr4 ;alr; ;alr03 ;alr8 ;alr!'

- - 'alr@ alr# alr$ alr% alr^ alr& alr* alr( alr_ alr= alr+ alr[ alr{ alr\\ alr| alr< alr> alr` alr~ alr/'
  - ';alr`a ;alr_? ;alr`s ;alr.0 ;alr`5 ;alr`& ;alr"9 ;alr"< ;alr.- ;alr"7 ;alr"6 ;alr.< ;alr_< ;alr_* ;alr_| ;alr`< ;alr`> ;alr."9 ;alr`9 ;alr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'already-xl already-([{''"xl already-/xl already-$xl'
  - 'alr-xl alr-"<.<{''0xl alr-_/xl alr-`sxl'

- - 'already(xl already[xl already{xl already''xl already"xl already=([{''"-xl already([{''"-xl already/-xl already$-xl'
  - 'alr"<xl alr.<xl alr{xl alr''xl alr0xl alr"7"<.<{''0-xl alr"<.<{''0-xl alr/-xl alr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alreadys [alreadys {alreadys ''alreadys "alreadys -alreadys'
  - '"<alrs .<alrs _<alrs,8alrs 8alrs -alrs'

- - '!alreadys @alreadys #alreadys $alreadys %alreadys ^alreadys &alreadys *alreadys )alreadys _alreadys =alreadys +alreadys ]alreadys }alreadys \\alreadys |alreadys .alreadys ,alreadys ;alreadys :alreadys ?alreadys <alreadys >alreadys `alreadys ~alreadys /alreadys'
  - '6alrs `aalrs _?alrs `salrs .0alrs `5alrs `&alrs "9alrs ">alrs .-alrs "7alrs "6alrs .>alrs _>alrs _*alrs _|alrs 4alrs 1alrs ;alrs0 3alrs ;8alrs `<alrs `>alrs ;8alrs .*alrs `9alrs _/alrs'
  - xfail: contraction following special characters is ignored

- - 'alrs (alrs [alrs {alrs ''alrs "alrs -alrs !alrs @alrs #alrs $alrs %alrs ^alrs &alrs *alrs )alrs _alrs =alrs +alrs ]alrs }alrs \\alrs |alrs .alrs ,alrs ;alrs :alrs ?alrs <alrs >alrs ?alrs `alrs ~alrs /alrs'
  - ';alrs "<;alrs .<;alrs _<;alrs,8;alrs 8;alrs -;alrs 6;alrs `a;alrs _?;alrs `s;alrs .0;alrs `5;alrs `&;alrs "9;alrs ">;alrs .-;alrs "7;alrs "6;alrs .>;alrs _>;alrs _*;alrs _|;alrs 4;alrs 1;alrs ;2alrs0 3;alrs ;8;alrs `<;alrs `>;alrs .*;alrs `9;alrs _/;alrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alreadys xl-([{''"alreadys xl/-alreadys xl$-alreadys'
  - 'xl-alrs xl-"<.<{''0alrs xl_/-alrs xl`s-alrs'

- - 'xl(alreadys xl[alreadys xl{alreadys xl''alreadys xl"alreadys xl-=([{''"alreadys'
  - 'xl"<alrs xl.<alrs xl{alrs xl''alrs xl0alrs xl-"7"<.<{''0alrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alreadys) alreadys] alreadys} alreadys'' alreadys" alreadys- alreadys, alreadys. alreadys; alreadys: alreadys? alreadys!'
  - 'alrs"> alrs.> alrs_> alrs,0alrs0 alrs- alrs1 alrs4 alrs; alrs03 alrs8 alrs!'

- - 'alreadys@ alreadys# alreadys$ alreadys% alreadys^ alreadys& alreadys* alreadys( alreadys_ alreadys= alreadys+ alreadys[ alreadys{ alreadys\\ alreadys| alreadys< alreadys> alreadys` alreadys~ alreadys/'
  - 'alrs`a alrs_? alrs`s alrs.0 alrs`5 alrs`& alrs"9 alrs"< alrs.- alrs"7 alrs"6 alrs.< alrs_< alrs_* alrs_| alrs`< alrs`> alrs."9 alrs`9 alrs/'
  - xfail: contraction followed by special characters is ignored

- - 'alrs) alrs] alrs} alrs'' alrs" alrs- alrs, alrs. alrs; alrs: alrs? alrs! alrs@ alrs# alrs$ alrs% alrs^ alrs& alrs* alrs( alrs_ alrs= alrs+ alrs[ alrs{ alrs\\ alrs| alrs< alrs> alrs` alrs~ alrs/'
  - ';alrs"> ;alrs.> ;alrs_> ;alrs,0;alrs0 ;alrs- ;alrs1 ;alrs4 ;alrs; ;alrs03 ;alrs8 ;alrs6 ;alrs`a ;alrs_? ;alrs`s ;alrs.0 ;alrs`5 ;alrs`& ;alrs"9 ;alrs"< ;alrs.- ;alrs"7 ;alrs"6 ;alrs.< ;alrs_< ;alrs_* ;alrs_| ;alrs`< ;alrs`> ;alrs."9 ;alrs`9 ;alrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alreadys-xl alreadys-([{''"xl alreadys-/xl alreadys-$xl'
  - 'alrs-xl alrs-"<.<{''0xl alrs-_/xl alrs-`sxl'

- - 'alreadys(xl alreadys[xl alreadys{xl alreadys''xl alreadys"xl alreadys=([{''"-xl alreadys([{''"-xl alreadys/-xl alreadys$-xl'
  - 'alrs"<xl alrs.<xl alrs{xl alrs''xl alrs0xl alrs"7"<.<{''0-xl alrs"<.<{''0-xl alrs/-xl alrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(also [also {also ''also "also -also'
  - '"<al .<al _<al,8al 8al -al'

- - '!also @also #also $also %also ^also &also *also )also _also =also +also ]also }also \\also |also .also ,also ;also :also ?also <also >also `also ~also /also'
  - '6al `aal _?al `sal .0al `5al `&al "9al ">al .-al "7al "6al .>al _>al _*al _|al 4al 1al ;al0 3al ;8al `<al `>al .*al `9al _/al'
  - xfail: contraction following special characters is ignored

- - '(al [al {al ''al "al -al'
  - '"<;al .<;al _<;al,8;al 8;al -;al'

- - '!al @al #al $al %al ^al &al *al )al _al =al +al ]al }al \\al |al .al ,al ;al :al ?al <al >al `al ~al /al'
  - '6;al `a;al _?;al `s;al .0;al `5;al `&;al "9;al ">;al .-;al "7;al "6;al .>;al _>;al _*;al _|;al 4;al 1;al ;2al0 3;al ;8;al `<;al `>;al .*;al `9;al _/;al'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-also xl-([{''"also xl/-also xl$-also'
  - 'xl-al xl-"<.<{''0al xl_/-al xl`s-al'

- - 'xl(also xl[also xl{also xl''also xl"also xl-=([{''"also'
  - 'xl"<al xl.<al xl{al xl''al xl0al xl-"7"<.<{''0al'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'also) also] also} also'' also" also- also, also. also; also: also? also!'
  - 'al"> al.> al_> al,0al0 al- al1 al4 al; al03 al8 al!'

- - 'also@ also# also$ also% also^ also& also* also( also_ also= also+ also[ also{ also\\ also| also< also> also` also~ also/'
  - 'al`a al_? al`s al.0 al`5 al`& al"9 al"< al.- al"7 al"6 al.< al_< al_* al_| al`< al`> al."9 al`9 al/'
  - xfail: contraction followed by special characters is ignored

- - 'al) al] al} al'' al" al- al, al. al; al: al? al!'
  - ';al"> ;al.> ;al_> ;al,0;al0 ;al- ;al1 ;al4 ;al; ;al03 ;al8 ;al!'

- - 'al@ al# al$ al% al^ al& al* al( al_ al= al+ al[ al{ al\\ al| al< al> al` al~ al/'
  - ';al`a ;al_? ;al`s ;al.0 ;al`5 ;al`& ;al"9 ;al"< ;al.- ;al"7 ;al"6 ;al.< ;al_< ;al_* ;al_| ;al`< ;al`> ;al."9 ;al`9 ;al/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'also-xl also-([{''"xl also-/xl also-$xl'
  - 'al-xl al-"<.<{''0xl al-_/xl al-`sxl'

- - 'also(xl also[xl also{xl also''xl also"xl also=([{''"-xl also([{''"-xl also/-xl also$-xl'
  - 'al"<xl al.<xl al{xl al''xl al0xl al"7"<.<{''0-xl al"<.<{''0-xl al/-xl al`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alsos [alsos {alsos ''alsos "alsos -alsos'
  - '"<als .<als _<als,8als 8als -als'

- - '!alsos @alsos #alsos $alsos %alsos ^alsos &alsos *alsos )alsos _alsos =alsos +alsos ]alsos }alsos \\alsos |alsos .alsos ,alsos ;alsos :alsos ?alsos <alsos >alsos `alsos ~alsos /alsos'
  - '6als `aals _?als `sals .0als `5als `&als "9als ">als .-als "7als "6als .>als _>als _*als _|als 4als 1als ;als0 3als ;8als `<als `>als ;8als .*als `9als _/als'
  - xfail: contraction following special characters is ignored

- - 'als (als [als {als ''als "als -als !als @als #als $als %als ^als &als *als )als _als =als +als ]als }als \\als |als .als ,als ;als :als ?als <als >als ?als `als ~als /als'
  - ';als "<;als .<;als _<;als,8;als 8;als -;als 6;als `a;als _?;als `s;als .0;als `5;als `&;als "9;als ">;als .-;als "7;als "6;als .>;als _>;als _*;als _|;als 4;als 1;als ;2als0 3;als ;8;als `<;als `>;als .*;als `9;als _/;als'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alsos xl-([{''"alsos xl/-alsos xl$-alsos'
  - 'xl-als xl-"<.<{''0als xl_/-als xl`s-als'

- - 'xl(alsos xl[alsos xl{alsos xl''alsos xl"alsos xl-=([{''"alsos'
  - 'xl"<als xl.<als xl{als xl''als xl0als xl-"7"<.<{''0als'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alsos) alsos] alsos} alsos'' alsos" alsos- alsos, alsos. alsos; alsos: alsos? alsos!'
  - 'als"> als.> als_> als,0als0 als- als1 als4 als; als03 als8 als!'

- - 'alsos@ alsos# alsos$ alsos% alsos^ alsos& alsos* alsos( alsos_ alsos= alsos+ alsos[ alsos{ alsos\\ alsos| alsos< alsos> alsos` alsos~ alsos/'
  - 'als`a als_? als`s als.0 als`5 als`& als"9 als"< als.- als"7 als"6 als.< als_< als_* als_| als`< als`> als."9 als`9 als/'
  - xfail: contraction followed by special characters is ignored

- - 'als) als] als} als'' als" als- als, als. als; als: als? als! als@ als# als$ als% als^ als& als* als( als_ als= als+ als[ als{ als\\ als| als< als> als` als~ als/'
  - ';als"> ;als.> ;als_> ;als,0;als0 ;als- ;als1 ;als4 ;als; ;als03 ;als8 ;als6 ;als`a ;als_? ;als`s ;als.0 ;als`5 ;als`& ;als"9 ;als"< ;als.- ;als"7 ;als"6 ;als.< ;als_< ;als_* ;als_| ;als`< ;als`> ;als."9 ;als`9 ;als/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alsos-xl alsos-([{''"xl alsos-/xl alsos-$xl'
  - 'als-xl als-"<.<{''0xl als-_/xl als-`sxl'

- - 'alsos(xl alsos[xl alsos{xl alsos''xl alsos"xl alsos=([{''"-xl alsos([{''"-xl alsos/-xl alsos$-xl'
  - 'als"<xl als.<xl als{xl als''xl als0xl als"7"<.<{''0-xl als"<.<{''0-xl als/-xl als`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(although [although {although ''although "although -although'
  - '"<al8 .<al8 _<al8,8al8 8al8 -al8'

- - '!although @although #although $although %although ^although &although *although )although _although =although +although ]although }although \\although |although .although ,although ;although :although ?although <although >although `although ~although /although'
  - '6al8 `aal8 _?al8 `sal8 .0al8 `5al8 `&al8 "9al8 ">al8 .-al8 "7al8 "6al8 .>al8 _>al8 _*al8 _|al8 4al8 1al8 ;al80 3al8 ;8al8 <al8 `>al8 .*al8 `9al8 _/al8'
  - xfail: contraction following special characters is ignored

- - '(alth [alth {alth ''alth "alth -alth'
  - '"<alth .<alth _<alth,8alth 8alth -alth'

- - '!alth @alth #alth $alth %alth ^alth &alth *alth )alth _alth =alth +alth ]alth eralth \\alth |alth .alth ,alth ;alth :alth ?alth <alth >alth `alth ~alth /alth'
  - '6alth `aalth _?alth `salth .0alth `5alth `&alth "9alth ">alth .-alth "7alth "6alth .>alth eralth _*alth _|alth 4alth 1alth ;alth0 3alth ?alth `<alth `>alth .*alth `9alth _/alth'
  - xfail: non-contraction of "alth" conflicts witcv contraction of "although"

- - 'xl-although xl-([{''"although xl/-although xl$-although'
  - 'xl-al8 xl-"<.<{''0al8 xl_/-al8 xl`s-al8'

- - 'xl(although xl[although xl{although xl''although xl"although xl-=([{''"although'
  - 'xl"<al8 xl.<al8 xl{al8 xl''al8 xl0al8 xl-"7"<.<{''0al8'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'although) although] although} although'' although" although- although, although. although; although: although? although!'
  - 'al8"> al8.> al8_> al8,0al80 al8- al81 al84 al8; al803 al88 al8!'

- - 'although@ although# although$ although% although^ although& although* although( although_ although= although+ although[ although{ although\\ although| although< although> although` although~ although/'
  - 'al8`a al8_? al8`s al8.0 al8`5 al8`& al8"9 al8"< al8.- al8"7 al8"6 al8.< al8_< al8_* al8_| al8`< al8`> al8."9 al8`9 al8/'
  - xfail: contraction followed by special characters is ignored

- - 'alth) alth] alth} alth'' alth" alth- alth, alth. alth; alth: alth? alth!'
  - 'alth"> alth.> alth_> alth,0alth0 alth- alth1 alth4 alth; alth03 alth8 alth!'

- - 'alth@ alth# alth$ alth% alth^ alth& alth* alth( alth_ alth= alth+ alth[ alth{ alth\\ alth| alth< alth> alth` alth~ alth/'
  - 'alth`a alth_? alth`s alth.0 alth`5 alth`& alth"9 alth"< alth.- alth"7 alth"6 alth.< alth_< alth_* alth_| alth`< alth`> alth."9 alth`9 alth/'
  - xfail: non-contraction of "alth" conflicts with contraction of "although"

- - 'although-xl although-([{''"xl although-/xl although-$xl'
  - 'al8-xl al8-"<.<{''0xl al8-_/xl al8-`sxl'

- - 'although(xl although[xl although{xl although''xl although"xl although=([{''"-xl although([{''"-xl although/-xl although$-xl'
  - 'al8"<xl al8.<xl al8{xl al8''xl al80xl al8"7"<.<{''0-xl al8"<.<{''0-xl al8/-xl al8`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(althoughs [althoughs {althoughs ''althoughs "althoughs -althoughs'
  - '"<al8s .<al8s _<al8s,8al8s 8al8s -al8s'

- - '!althoughs @althoughs #althoughs $althoughs %althoughs ^althoughs &althoughs *althoughs )althoughs _althoughs =althoughs +althoughs ]althoughs }althoughs \\althoughs |althoughs .althoughs ,althoughs ;althoughs :althoughs ?althoughs <althoughs >althoughs'
  - '6al8s `aal8s _?al8s `sal8s .0al8s `5al8s `&al8s "9al8s ">al8s .-al8s "7al8s "6al8s .>al8s _>al8s _*al8s _|al8s 4al8s 1al8s ;al8s0 3al8s ;8al8s `<al8s `>al8s'
  - xfail: contraction following special characters is ignored

- - '`althoughs ~althoughs /althoughs'
  - '.*al8s `9al8s _/al8s'
  - xfail: contraction following special characters is ignored

- - 'alths (alths [alths {alths ''alths "alths -alths !alths @alths #alths $alths %alths ^alths &alths *alths )alths _alths =alths +alths ]alths eralths \\alths |alths .alths ,alths ;alths :alths ?alths <alths >alths `alths ~alths /alths'
  - 'alths "<alths .<alths _<alths,8alths 8alths -alths 6alths `aalths _?alths `salths .0alths `5alths `&alths "9alths ">alths .-alths "7alths "6alths .>alths eralths _*alths _|alths 4alths 1alths ;alths0 3alths ;8alths `<alths `>alths .*alths `9alths _/alths'
  - xfail: non-contraction of "alths" conflicts witcv contraction of "althsoughs"

- - 'xl-althoughs xl-([{''"althoughs xl/-althoughs xl$-althoughs'
  - 'xl-al8s xl-"<.<{''0al8s xl_/-al8s xl`s-al8s'

- - 'xl(althoughs xl[althoughs xl{althoughs xl''althoughs xl"althoughs xl-=([{''"althoughs'
  - 'xl"<al8s xl.<al8s xl{al8s xl''al8s xl0al8s xl-"7"<.<{''0al8s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'althoughs) althoughs] althoughs} althoughs'' althoughs" althoughs- althoughs, althoughs. althoughs; althoughs: althoughs? althoughs!'
  - 'al8s"> al8s.> al8s_> al8s,0al8s0 al8s- al8s1 al8s4 al8s; al8s03 al8s8 al8s!'

- - 'althoughs@ althoughs# althoughs$ althoughs% althoughs^ althoughs& althoughs* althoughs( althoughs_ althoughs= althoughs+ althoughs[ althoughs{ althoughs\\ althoughs| althoughs< althoughs> althoughs` althoughs~ althoughs/'
  - 'al8s`a al8s_? al8s`s al8s.0 al8s`5 al8s`& al8s"9 al8s"< al8s.- al8s"7 al8s"6 al8s.< al8s_< al8s_* al8s_| al8s`< al8s`> al8s."9 al8s`9 al8s/'
  - xfail: contraction followed by special characters is ignored

- - 'alths) alths] alths} alths'' alths" alths- alths, alths. alths; alths: alths? alths! alths@ alths# alths$ alths% alths^ alths& alths* alths( alths_ alths= alths+ alths[ alths{ alths\\ alths| alths< alths> alths` alths~ alths/'
  - 'alths"> alths.> alths_> alths,0alths0 alths- alths1 alths4 alths; alths03 alths8 alths6 alths`a alths_? alths`s alths.0 alths`5 alths`& alths"9 alths"< alths.- alths"7 alths"6 alths.< alths_< alths_* alths_| alths`< alths`> alths."9 alths`9 alths/'
  - xfail: non-contraction of "alths" conflicts with contraction of "althoughs"

- - 'althoughs-xl althoughs-([{''"xl althoughs-/xl althoughs-$xl'
  - 'al8s-xl al8s-"<.<{''0xl al8s-_/xl al8s-`sxl'

- - 'althoughs(xl althoughs[xl althoughs{xl althoughs''xl althoughs"xl althoughs=([{''"-xl althoughs([{''"-xl althoughs/-xl althoughs$-xl'
  - 'al8s"<xl al8s.<xl al8s{xl al8s''xl al8s0xl al8s"7"<.<{''0-xl al8s"<.<{''0-xl al8s/-xl al8s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(altogether [altogether {altogether ''altogether "altogether -altogether'
  - '"<alt .<alt _<alt,8alt 8alt -alt'

- - '!altogether @altogether #altogether $altogether %altogether ^altogether &altogether *altogether )altogether _altogether =altogether +altogether ]altogether }altogether \\altogether |altogether .altogether ,altogether ;altogether :altogether ?altogether'
  - '!alt `aalt _?alt `salt .0alt `5alt `&alt "9alt ">alt .-alt "7alt "6alt .>alt }alt _*alt _|alt 4alt 1alt ;alt0 3alt ;8alt'
  - xfail: contraction following special characters is ignored

- - '<altogether >altogether `altogether ~altogether /altogether'
  - '`<alt `>alt .*alt `9alt _/alt'
  - xfail: contraction following special characters is ignored

- - '(alt [alt {alt ''alt "alt -alt'
  - '"<;alt .<;alt _<;alt,8;alt 8;alt -;alt'

- - '!alt @alt #alt $alt %alt ^alt &alt *alt )alt _alt =alt +alt ]alt }alt \\alt |alt .alt ,alt ;alt :alt ?alt <alt >alt ?alt `alt ~alt /alt'
  - '!;alt `a;alt _?;alt `s;alt .0;alt `5;alt `&;alt "9;alt ">;alt .-;alt "7;alt "6;alt .>;alt _>;alt _*;alt _|;alt 4;alt 1;alt ;2alt0 3;alt ;8;alt `<;alt `>;alt .*;alt `9;alt _/;alt'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-altogether xl-([{''"altogether xl/-altogether xl$-altogether'
  - 'xl-alt xl-"<.<{''0alt xl_/-alt xl`s-alt'

- - 'xl(altogether xl[altogether xl{altogether xl''altogether xl"altogether xl-=([{''"altogether'
  - 'xl"<alt xl.<alt xl{alt xl''alt xl0alt xl-"7"<.<{''0alt'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'altogether) altogether] altogether} altogether'' altogether" altogether- altogether, altogether. altogether; altogether: altogether? altogether!'
  - 'alt"> alt.> alt_> alt,0alt0 alt- alt1 alt4 alt; alt03 alt8 alt!'

- - 'altogether@ altogether# altogether$ altogether% altogether^ altogether& altogether* altogether( altogether_ altogether= altogether+ altogether[ altogether{ altogether\\ altogether| altogether< altogether> altogether` altogeth'
  - 'alt`a alt_? alt`s alt.0 alt`5 alt`& alt"9 alt"< alt.- alt"7 alt"6 alt.< alt_< alt_* alt_| alt`< alt`> alt."9 alt`9 alt/'
  - xfail: contraction followed by special characters is ignored

- - 'alt) alt] alt} alt'' alt" alt- alt, alt. alt; alt: alt? alt!'
  - ';alt"> ;alt.> ;alt_> ;alt,0;alt0 ;alt- ;alt1 ;alt4 ;alt; ;alt03 ;alt8 ;alt!'

- - 'alt@ alt# alt$ alt% alt^ alt& alt* alt( alt_ alt= alt+ alt[ alt{ alt\\ alt| alt< alt> alt` alt~ alt/'
  - ';alt`a ;alt_? ;alt`s ;alt.0 ;alt`5 ;alt`& ;alt"9 ;alt"< ;alt.- ;alt"7 ;alt"6 ;alt.< ;alt_< ;alt_* ;alt_| ;alt`< ;alt`> ;alt."9 ;alt`9 ;alt/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'altogether-xl altogether-([{''"xl altogether-/xl altogether-$xl'
  - 'alt-xl alt-"<.<{''0xl alt-_/xl alt-`sxl'

- - 'altogether(xl altogether[xl altogether{xl altogether''xl altogether"xl altogether=([{''"-xl altogether([{''"-xl altogether/-xl altogether$-xl'
  - 'alt"<xl alt.<xl alt{xl alt''xl alt0xl alt"7"<.<{''0-xl alt"<.<{''0-xl alt/-xl alt`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(altogethers [altogethers {altogethers ''altogethers "altogethers -altogethers'
  - '"<alts .<alts _<alts,8alts 8alts -alts'

- - '!altogethers @altogethers #altogethers $altogethers %altogethers ^altogethers &altogethers *altogethers )altogethers _altogethers =altogethers +altogethers ]altogethers }altogethers \\altogethers |altogethers .altogethers ,altogethers ;altogethers :altogethers'
  - '!alts `aalts _?alts `salts .0alts `5alts `&alts "9alts ">alts .-alts "7alts "6alts .>alts _>alts _*alts _|alts 4alts 1alts ;alts0 3alts'
  - xfail: contraction following special characters is ignored

- - '?altogethers <altogethers >altogethers `altogethers ~altogethers /altogethers'
  - ';8alts `<alts `>alts .*alts `9alts _/alts'
  - xfail: contraction following special characters is ignored

- - 'alts (alts [alts {alts ''alts "alts -alts !alts @alts #alts $alts %alts ^alts &alts *alts )alts _alts =alts +alts ]alts }alts \\alts |alts .alts ,alts ;alts :alts ?alts <alts >alts ?alts `alts ~alts /alts'
  - ';alts "<;alts .<;alts _<;alts,8;alts 8;alts -;alts !;alts `a;alts _?;alts `s;alts .0;alts `5;alts `&;alts "9;alts ">;alts .-;alts "7;alts "6;alts .>;alts _>;alts _*;alts _|;alts 4;alts 1;alts ;2alts0 3;alts ;8;alts `<;alts `>;alts .*;alts `9;alts _/;alts'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-altogethers xl-([{''"altogethers xl/-altogethers xl$-altogethers'
  - 'xl-alts xl-"<.<{''0alts xl_/-alts xl`s-alts'

- - 'xl(altogethers xl[altogethers xl{altogethers xl''altogethers xl"altogethers xl-=([{''"altogethers'
  - 'xl"<alts xl.<alts xl{alts xl''alts xl0alts xl-"7"<.<{''0alts'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'altogethers) altogethers] altogethers} altogethers'' altogethers" altogethers- altogethers, altogethers. altogethers; altogethers: altogethers? altogethers!'
  - 'alts"> alts.> alts_> alts,0alts0 alts- alts1 alts4 alts; alts03 alts8 alts!'

- - 'altogethers@ altogethers# altogethers$ altogethers% altogethers^ altogethers& altogethers* altogethers( altogethers_ altogethers= altogethers+ altogethers[ altogethers{ altogethers\\ altogethers| altogethers< altogethers> altogethers` altogeth'
  - 'alts`a alts_? alts`s alts.0 alts`5 alts`& alts"9 alts"< alts.- alts"7 alts"6 alts.< alts_< alts_* alts_| alts`< alts`> alts."9 alts`9 alts/'
  - xfail: contraction followed by special characters is ignored

- - 'alts) alts] alts} alts'' alts" alts- alts, alts. alts; alts: alts? alts! alts@ alts# alts$ alts% alts^ alts& alts* alts( alts_ alts= alts+ alts[ alts{ alts\\ alts| alts< alts> alts` alts~ alts/'
  - ';alts"> ;alts.> ;alts_> ;alts,0;alts0 ;alts- ;alts1 ;alts4 ;alts; ;alts03 ;alts8 ;alts! ;alts`a ;alts_? ;alts`s ;alts.0 ;alts`5 ;alts`& ;alts"9 ;alts"< ;alts.- ;alts"7 ;alts"6 ;alts.< ;alts_< ;alts_* ;alts_| ;alts`< ;alts`> ;alts."9 ;alts`9 ;alts/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'altogethers-xl altogethers-([{''"xl altogethers-/xl altogethers-$xl'
  - 'alts-xl alts-"<.<{''0xl alts-_/xl alts-`sxl'

- - 'altogethers(xl altogethers[xl altogethers{xl altogethers''xl altogethers"xl altogethers=([{''"-xl altogethers([{''"-xl altogethers/-xl altogethers$-xl'
  - 'alts"<xl alts.<xl alts{xl alts''xl alts0xl alts"7"<.<{''0-xl alts"<.<{''0-xl alts/-xl alts`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(always [always {always ''always "always -always'
  - '"<alw .<alw _<alw,8alw 8alw -alw'

- - '!always @always #always $always %always ^always &always *always )always _always =always +always ]always }always \\always |always .always ,always ;always :always ?always <always >always `always ~always /always'
  - '!alw `aalw _?alw `salw .0alw `5alw `&alw "9alw ">alw .-alw "7alw "6alw .>alw _>alw _*alw _|alw 4alw 1alw ;alw0 3alw ;8alw `<alw `>alw ;8alw .*alw `9alw _/alw'
  - xfail: contraction following special characters is ignored

- - '(alw [alw {alw ''alw "alw -alw'
  - '"<;alw .<;alw _<;alw,8;alw 8;alw -;alw'

- - '!alw @alw #alw $alw %alw ^alw &alw *alw )alw _alw =alw +alw ]alw }alw \\alw |alw .alw ,alw ;alw :alw ?alw <alw >alw ?alw `alw ~alw /alw'
  - '!;alw `a;alw _?;alw `s;alw .0;alw `5;alw `&;alw "9;alw ">;alw .-;alw "7;alw "6;alw .>;alw _>;alw _*;alw _|;alw 4;alw 1;alw ;2alw0 3;alw ;8;alw `<;alw `>;alw .*;alw `9;alw _/;alw'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-always xl-([{''"always xl/-always xl$-always'
  - 'xl-alw xl-"<.<{''0alw xl_/-alw xl`s-alw'

- - 'xl(always xl[always xl{always xl''always xl"always xl-=([{''"always'
  - 'xl"<alw xl.<alw xl{alw xl''alw xl0alw xl-"7"<.<{''0alw'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'always) always] always} always'' always" always- always, always. always; always: always? always!'
  - 'alw"> alw.> alw_> alw,0alw0 alw- alw1 alw4 alw; alw03 alw8 alw!'

- - 'always@ always# always$ always% always^ always& always* always( always_ always= always+ always[ always{ always\\ always| always< always> always` always~ always/'
  - 'alw`a alw_? alw`s alw.0 alw`5 alw`& alw"9 alw"< alw.- alw"7 alw"6 alw.< alw_< alw_* alw_| alw`< alw`> alw."9 alw`9 alw/'
  - xfail: contraction followed by special characters is ignored

- - 'alw) alw] alw} alw'' alw" alw- alw, alw. alw; alw: alw? alw!'
  - ';alw"> ;alw.> ;alw_> ;alw,0;alw0 ;alw- ;alw1 ;alw4 ;alw; ;alw03 ;alw8 ;alw!'

- - 'alw@ alw# alw$ alw% alw^ alw& alw* alw( alw_ alw= alw+ alw[ alw{ alw\\ alw| alw< alw> alw` alw~ alw/'
  - ';alw`a ;alw_? ;alw`s ;alw.0 ;alw`5 ;alw`& ;alw"9 ;alw"< ;alw.- ;alw"7 ;alw"6 ;alw.< ;alw_< ;alw_* ;alw_| ;alw`< ;alw`> ;alw."9 ;alw`9 ;alw/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'always-xl always-([{''"xl always-/xl always-$xl'
  - 'alw-xl alw-"<.<{''0xl alw-_/xl alw-`sxl'

- - 'always(xl always[xl always{xl always''xl always"xl always=([{''"-xl always([{''"-xl always/-xl always$-xl'
  - 'alw"<xl alw.<xl alw{xl alw''xl alw0xl alw"7"<.<{''0-xl alw"<.<{''0-xl alw/-xl alw`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(alwayss [alwayss {alwayss ''alwayss "alwayss -alwayss'
  - '"<alws .<alws _<alws,8alws 8alws -alws'

- - '!alwayss @alwayss #alwayss $alwayss %alwayss ^alwayss &alwayss *alwayss )alwayss _alwayss =alwayss +alwayss ]alwayss }alwayss \\alwayss |alwayss .alwayss ,alwayss ;alwayss :alwayss ?alwayss <alwayss >alwayss `alwayss ~alwayss /alwayss'
  - '!alws `aalws _?alws `salws .0alws `5alws `&alws "9alws ">alws .-alws "7alws "6alws .>alws _>alws _*alws _|alws 4alws 1alws ;alws0 3alws ;8alws `<alws `>alws ;8alws .*alws `9alws _/alws'
  - xfail: contraction following special characters is ignored

- - 'alws (alws [alws {alws ''alws "alws -alws !alws @alws #alws $alws %alws ^alws &alws *alws )alws _alws =alws +alws ]alws }alws \\alws |alws .alws ,alws ;alws :alws ?alws <alws >alws ?alws `alws ~alws /alws'
  - ';alws "<;alws .<;alws _<;alws,8;alws 8;alws -;alws !;alws `a;alws _?;alws `s;alws .0;alws `5;alws `&;alws "9;alws ">;alws .-;alws "7;alws "6;alws .>;alws _>;alws _*;alws _|;alws 4;alws 1;alws ;2alws0 3;alws ;8;alws `<;alws `>;alws .*;alws `9;alws _/;alws'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-alwayss xl-([{''"alwayss xl/-alwayss xl$-alwayss'
  - 'xl-alws xl-"<.<{''0alws xl_/-alws xl`s-alws'

- - 'xl(alwayss xl[alwayss xl{alwayss xl''alwayss xl"alwayss xl-=([{''"alwayss'
  - 'xl"<alws xl.<alws xl{alws xl''alws xl0alws xl-"7"<.<{''0alws'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'alwayss) alwayss] alwayss} alwayss'' alwayss" alwayss- alwayss, alwayss. alwayss; alwayss: alwayss? alwayss!'
  - 'alws"> alws.> alws_> alws,0alws0 alws- alws1 alws4 alws; alws03 alws8 alws!'

- - 'alwayss@ alwayss# alwayss$ alwayss% alwayss^ alwayss& alwayss* alwayss( alwayss_ alwayss= alwayss+ alwayss[ alwayss{ alwayss\\ alwayss| alwayss< alwayss> alwayss` alwayss~ alwayss/'
  - 'alws`a alws_? alws`s alws.0 alws`5 alws`& alws"9 alws"< alws.- alws"7 alws"6 alws.< alws_< alws_* alws_| alws`< alws`> alws."9 alws`9 alws/'
  - xfail: contraction followed by special characters is ignored

- - 'alws) alws] alws} alws'' alws" alws- alws, alws. alws; alws: alws? alws! alws@ alws# alws$ alws% alws^ alws& alws* alws( alws_ alws= alws+ alws[ alws{ alws\\ alws| alws< alws> alws` alws~ alws/'
  - ';alws"> ;alws.> ;alws_> ;alws,0;alws0 ;alws- ;alws1 ;alws4 ;alws; ;alws03 ;alws8 ;alws! ;alws`a ;alws_? ;alws`s ;alws.0 ;alws`5 ;alws`& ;alws"9 ;alws"< ;alws.- ;alws"7 ;alws"6 ;alws.< ;alws_< ;alws_* ;alws_| ;alws`< ;alws`> ;alws."9 ;alws`9 ;alws/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'alwayss-xl alwayss-([{''"xl alwayss-/xl alwayss-$xl'
  - 'alws-xl alws-"<.<{''0xl alws-_/xl alws-`sxl'

- - 'alwayss(xl alwayss[xl alwayss{xl alwayss''xl alwayss"xl alwayss=([{''"-xl alwayss([{''"-xl alwayss/-xl alwayss$-xl'
  - 'alws"<xl alws.<xl alws{xl alws''xl alws0xl alws"7"<.<{''0-xl alws"<.<{''0-xl alws/-xl alws`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '!ar @ar #ar $ar %ar ^ar &ar *ar )ar _ar =ar +ar ]ar }ar \\ar |ar .ar ,ar ;ar :ar ?ar <ar >ar `ar ~ar /ar'
  - '!> `a> _?> `s> .0> `5> `&> "9> ">> .-> "7> "6> .>> _>> _*> _|> 4> 1> ;>0 3> ;8> `<> `>> .*> `9> _/>'

- - 'ar (ar [ar {ar ''ar "ar -ar'
  - '> "<> .<> _<>,8> 8> ->'
  - xfail: contraction following special characters is ignored

- - 'xl(ar xl[ar xl{ar xl''ar xl"ar xl-=([{''"ar'
  - 'xl"<> xl.<> xl{> xl''> xl0> xl-"7"<.<{''0>'

- - 'xl-ar xl-([{''"ar xl/-ar xl$-ar'
  - 'xl-> xl-"<.<{''0> xl_/-> xl`s->'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ar@ ar# ar$ ar% ar^ ar& ar* ar( ar_ ar= ar+ ar[ ar{ ar\\ ar| ar< ar> ar` ar~ ar/'
  - '>`a >_? >`s >.0 >`5 >`& >"9 >"< >.- >"7 >"6 >.< >_< >_* >_| >`< >`> >."9 >`9 >/'

- - 'ar) ar] ar} ar'' ar" ar- ar, ar. ar; ar: ar? ar!'
  - '>"> >.> >_> >,0>0 >- >1 >4 >; >03 >8 >!'
  - xfail: contraction followed by special characters is ignored

- - 'ar(xl ar[xl ar{xl ar''xl ar"xl ar=([{''"-xl ar([{''"-xl ar/-xl ar$-xl'
  - '>"<xl >.<xl >{xl >''xl >0xl >"7"<.<{''0-xl >"<.<{''0-xl >/-xl >`s-xl'

- - 'ar-xl ar-([{''"xl ar-/xl ar-$xl'
  - '>-xl >-"<.<{''0xl >-_/xl >-`sxl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(as [as {as ''as "as -as'
  - '"<z .<z _<z,8z 8z -z'

- - '!as @as #as $as %as ^as &as *as )as _as =as +as ]as }as \\as |as .as ,as ;as :as ?as <as >as `as ~as /as'
  - '!z `az _?z `sz .0z `5z `&z "9z ">z .-z "7z "6z .>z _>z _*z _|z 4z 1z ;z0 3z ;8z `<z `>z .*z `9z _/z'
  - xfail: contraction following special characters is ignored

- - '(z [z {z ''z "z -z'
  - '"<;z .<;z _<;z,8;z 8;z -;z'

- - '!z @z #z $z %z ^z &z *z )z _z =z +z ]z }z \\z |z .z ,z ;z :z ?z <z >z `z ~z /z'
  - '!;z `a;z _?;z `s;z .0;z `5;z `&;z "9;z ">;z .-;z "7;z "6;z .>;z _>;z _*;z _|;z 4;z 1;z ;2z0 3;z ;8;z `<;z `>;z .*;z `9;z _/;z'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-as xl-([{''"as xl/-as xl$-as'
  - 'xl-z xl-"<.<{''0z xl_/-z xl`s-z'

- - 'xl(as xl[as xl{as xl''as xl"as xl-=([{''"as'
  - 'xl"<z xl.<z xl{z xl''z xl0z xl-"7"<.<{''0z'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'as) as] as} as'' as" as- as, as. as; as: as? as!'
  - 'z"> z.> z_> z,0z0 z- z1 z4 z; z03 z8 z!'

- - 'as@ as# as$ as% as^ as& as* as( as_ as= as+ as[ as{ as\\ as| as< as> as` as~ as/'
  - 'z`a z_? z`s z.0 z`5 z`& z"9 z"< z.- z"7 z"6 z.< z_< z_* z_| z`< z`> z."9 z`9 z/'
  - xfail: contraction followed by special characters is ignored

- - 'z) z] z} z'' z" z- z, z. z; z: z? z!'
  - ';z"> ;z.> ;z_> ;z,0;z0 ;z- ;z1 ;z4 ;z; ;z03 ;z8 ;z!'

- - 'z@ z# z$ z% z^ z& z* z( z_ z= z+ z[ z{ z\\ z| z< z> z` z~ z/'
  - ';z`a ;z_? ;z`s ;z.0 ;z`5 ;z`& ;z"9 ;z"< ;z.- ;z"7 ;z"6 ;z.< ;z_< ;z_* ;z_| ;z`< ;z`> ;z."9 ;z`9 ;z/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'as-xl as-([{''"xl as-/xl as-$xl'
  - 'z-xl z-"<.<{''0xl z-_/xl z-`sxl'

- - 'as(xl as[xl as{xl as''xl as"xl as=([{''"-xl as([{''"-xl as/-xl as$-xl'
  - 'z"<xl z.<xl z{xl z''xl z0xl z"7"<.<{''0-xl z"<.<{''0-xl z/-xl z`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(be [be {be ''be "be -be !be .be ,be ;be :be ?be'
  - '"<2 .<2 _<2,8be 8be -be !be 4be 1be ;be0 3be ;8be'

- - '*be =be +be @be #be $be %be ^be &be )be _be ]be }be \\be |be <be >be `be ~be /be'
  - '"92 "72 "62 `a2 _?2 `s2 .02 `52 `&2 ">2 .-2 .>2 _>2 _*2 _|2 `<2 `>2 ;82 .*2 `92 _/2'
  - xfail: contraction following special characters is ignored

- - 'xl(be xl[be xl{be'
  - 'xl"<2 xl.<2 xl{2'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'be) be] be} be'' be" be- be, be. be? be!'
  - '2"> 2.> 2_> be,0be0 be- be1 be4 be8 be!'

- - 'be; be: be@ be# be$ be% be^ be& be* be( be_ be= be+ be[ be{ be\\ be| be< be> be` be~ be/'
  - 'be; be03 2`a 2_? 2`s 2.0 2`5 2`& 2"9 2"< 2.- 2"7 2"6 2.< 2_< 2_* 2_| 2`< 2`> 2."9 2`9 2/'
  - xfail: contraction followed by special characters is ignored

- - 'be(xl be[be be{xl'
  - '2"<xl 2.<xl'

- - '(because [because {because ''because "because -because'
  - '"<2c .<2c _<2c,82c 82c -2c'

- - '!because @because #because $because %because ^because &because *because )because _because =because +because ]because }because \\because |because .because ,because ;because :because ?because <because >because `because ~because /because'
  - '!2c `a2c _?2c `s2c .02c `52c `&2c "92c ">2c .-2c "72c "62c .>2c _>2c _*2c _|2c 42c 12c ;2c0 32c ;82c `<2c `>2c .*2c `92c _/2c'
  - xfail: contraction following special characters is ignored

- - 'xl-because xl-([{''"because xl/-because xl$-because'
  - 'xl-2c xl-"<.<{''02c xl_/-2c xl`s-2c'

- - 'xl(because xl[because xl{because xl''because xl"because xl-=([{''"because'
  - 'xl"<2c xl.<2c xl{2c xl''2c xl02c xl-"7"<.<{''02c'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'because) because] because} because'' because" because- because, because. because; because: because? because!'
  - '2c"> 2c.> 2c_> 2c,02c0 2c- 2c1 2c4 2c; 2c03 2c8 2c!'

- - 'because@ because# because$ because% because^ because& because* because( because_ because= because+ because[ because{ because\\ because| because< because> because` because~ because/'
  - '2c`a 2c_? 2c`s 2c.0 2c`5 2c`& 2c"9 2c"< 2c.- 2c"7 2c"6 2c.< 2c_< 2c_* 2c_| 2c`< 2c`> 2c."9 2c`9 2c/'
  - xfail: contraction followed by special characters is ignored

- - 'bec) bec] bec} bec'' bec" bec- bec, bec. bec; bec: bec? bec!'
  - 'bec"> bec.> bec_> bec,0bec0 bec- bec1 bec4 bec; bec03 bec8 bec!'

- - 'bec@ bec# bec$ bec% bec^ bec& bec* bec( bec_ bec= bec+ bec[ bec{ bec\\ bec| bec< bec> bec` bec~ bec/'
  - 'bec`a bec_? bec`s bec.0 bec`5 bec`& bec"9 bec"< bec.- bec"7 bec"6 bec.< bec_< bec_* bec_| bec`< bec`> bec."9 bec`9 bec/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'because-xl because-([{''"xl because-/xl because-$xl'
  - '2c-xl 2c-"<.<{''0xl 2c-_/xl 2c-`sxl'

- - 'because(xl because[xl because{xl because''xl because"xl because=([{''"-xl because([{''"-xl because/-xl because$-xl'
  - '2c"<xl 2c.<xl 2c{xl 2c''xl 2c0xl 2c"7"<.<{''0-xl 2c"<.<{''0-xl 2c/-xl 2c`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(becauses [becauses {becauses ''becauses "becauses -becauses'
  - '"<2cs .<2cs _<2cs,82cs 82cs -2cs'

- - '!becauses @becauses #becauses $becauses %becauses ^becauses &becauses *becauses )becauses _becauses =becauses +becauses ]becauses }becauses \\becauses |becauses .becauses ,becauses ;becauses :becauses ?becauses <becauses >becauses `becauses ~becauses /becauses'
  - '!2cs `a2cs _?2cs `s2cs .02cs `52cs `&2cs "92cs ">2cs .-2cs "72cs "62cs .>2cs _>2cs _*2cs _|2cs 42cs 12cs ;2cs0 32cs ;82cs `<2cs `>2cs .*2cs `92cs _/2cs'
  - xfail: contraction following special characters is ignored

- - '!becs @becs #becs $becs %becs ^becs &becs *becs )becs _becs =becs +becs ]becs erbecs \\becs |becs .becs ,becs ;becs :becs ?becs <becs >becs `becs ~becs /becs'
  - '!becs `abecs _?becs `sbecs .0becs `5becs `&becs "9becs ">becs .-becs "7becs "6becs .>becs erbecs _*becs _|becs 4becs 1becs ;becs0 3becs ;8becs `<becs `>becs .*becs `9becs _/becs'

- - 'becs (becs [becs {becs ''becs "becs -becs'
  - 'becs "<becs .<becs _<becs,8becs 8becs -becs'
  - xfail: non-contraction of "becs" conflicts witcv contraction of "becauses"

- - 'xl-becauses xl-([{''"becauses xl/-becauses xl$-becauses'
  - 'xl-2cs xl-"<.<{''02cs xl_/-2cs xl`s-2cs'

- - 'xl(becauses xl[becauses xl{becauses xl''becauses xl"becauses xl-=([{''"becauses'
  - 'xl"<2cs xl.<2cs xl{2cs xl''2cs xl02cs xl-"7"<.<{''02cs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'becauses) becauses] becauses} becauses'' becauses" becauses- becauses, becauses. becauses; becauses: becauses? becauses!'
  - '2cs"> 2cs.> 2cs_> 2cs,02cs0 2cs- 2cs1 2cs4 2cs; 2cs03 2cs8 2cs!'

- - 'becauses@ becauses# becauses$ becauses% becauses^ becauses& becauses* becauses( becauses_ becauses= becauses+ becauses[ becauses{ becauses\\ becauses| becauses< becauses> becauses` becauses~ becauses/'
  - '2cs`a 2cs_? 2cs`s 2cs.0 2cs`5 2cs`& 2cs"9 2cs"< 2cs.- 2cs"7 2cs"6 2cs.< 2cs_< 2cs_* 2cs_| 2cs`< 2cs`> 2cs."9 2cs`9 2cs/'
  - xfail: contraction followed by special characters is ignored

- - 'becs) becs] becs} becs'' becs" becs- becs, becs. becs; becs: becs? becs! becs@ becs# becs$ becs% becs^ becs& becs* becs( becs_ becs= becs+ becs[ becs{ becs\\ becs| becs< becs> becs` becs~ becs/'
  - 'becs"> becs.> becs_> becs,0becs0 becs- becs1 becs4 becs; becs03 becs8 becs! becs`a becs_? becs`s becs.0 becs`5 becs`& becs"9 becs"< becs.- becs"7 becs"6 becs.< becs_< becs_* becs_| becs`< becs`> becs."9 becs`9 becs/'
  - xfail: non-contraction of "becs" conflicts with contraction of "becauses"

- - 'becauses-xl becauses-([{''"xl becauses-/xl becauses-$xl'
  - '2cs-xl 2cs-"<.<{''0xl 2cs-_/xl 2cs-`sxl'

- - 'becauses(xl becauses[xl becauses{xl becauses''xl becauses"xl becauses=([{''"-xl becauses([{''"-xl becauses/-xl becauses$-xl'
  - '2cs"<xl 2cs.<xl 2cs{xl 2cs''xl 2cs0xl 2cs"7"<.<{''0-xl 2cs"<.<{''0-xl 2cs/-xl 2cs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(before [before {before ''before "before -before'
  - '"<2f .<2f _<2f,82f 82f -2f'

- - '!before @before #before $before %before ^before &before *before )before _before =before +before ]before }before \\before |before .before ,before ;before :before ?before <before >before `before ~before /before'
  - '!2f `a2f _?2f `s2f .02f `52f `&2f "92f ">2f .-2f "72f "62f .>2f _>2f _*2f _|2f 42f 12f ;2f0 32f ;82f `<2f `>2f ;82f .*2f `92f _/2f'
  - xfail: contraction following special characters is ignored

- - 'xl-before xl-([{''"before xl/-before xl$-before'
  - 'xl-2f xl-"<.<{''02f xl_/-2f xl`s-2f'

- - 'xl(before xl[before xl{before xl''before xl"before xl-=([{''"before'
  - 'xl"<2f xl.<2f xl{2f xl''2f xl02f xl-"7"<.<{''02f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'before) before] before} before'' before" before- before, before. before; before: before? before!'
  - '2f"> 2f.> 2f_> 2f,02f0 2f- 2f1 2f4 2f; 2f03 2f8 2f!'

- - 'before@ before# before$ before% before^ before& before* before( before_ before= before+ before[ before{ before\\ before| before< before> before` before~ before/'
  - '2f`a 2f_? 2f`s 2f.0 2f`5 2f`& 2f"9 2f"< 2f.- 2f"7 2f"6 2f.< 2f_< 2f_* 2f_| 2f`< 2f`> 2f."9 2f`9 2f/'
  - xfail: contraction followed by special characters is ignored

- - 'bef) bef] bef} bef'' bef" bef- bef, bef. bef; bef: bef? bef!'
  - 'bef"> bef.> bef_> bef,0bef0 bef- bef1 bef4 bef; bef03 bef8 bef!'

- - 'bef@ bef# bef$ bef% bef^ bef& bef* bef( bef_ bef= bef+ bef[ bef{ bef\\ bef| bef< bef> bef` bef~ bef/'
  - 'bef`a bef_? bef`s bef.0 bef`5 bef`& bef"9 bef"< bef.- bef"7 bef"6 bef.< bef_< bef_* bef_| bef`< bef`> bef."9 bef`9 bef/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'before-xl before-([{''"xl before-/xl before-$xl'
  - '2f-xl 2f-"<.<{''0xl 2f-_/xl 2f-`sxl'

- - 'before(xl before[xl before{xl before''xl before"xl before=([{''"-xl before([{''"-xl before/-xl before$-xl'
  - '2f"<xl 2f.<xl 2f{xl 2f''xl 2f0xl 2f"7"<.<{''0-xl 2f"<.<{''0-xl 2f/-xl 2f`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(befores [befores {befores ''befores "befores -befores'
  - '"<2fs .<2fs _<2fs,82fs 82fs -2fs'

- - '!befores @befores #befores $befores %befores ^befores &befores *befores )befores _befores =befores +befores ]befores }befores \\befores |befores .befores ,befores ;befores :befores ?befores <befores >befores `befores ~befores /befores'
  - '!2fs `a2fs _?2fs `s2fs .02fs `52fs `&2fs "92fs ">2fs .-2fs "72fs "62fs .>2fs _>2fs _*2fs _|2fs 42fs 12fs ;2fs0 32fs ;82fs `<2fs `>2fs ;82fs .*2fs `92fs _/2fs'
  - xfail: contraction following special characters is ignored

- - 'befs (befs [befs {befs ''befs "befs -befs'
  - 'befs "<befs .<befs _<befs,8befs 8befs -befs'
  - xfail: non-contraction of "befs" conflicts witcv contraction of "befores"

- - 'xl-befores xl-([{''"befores xl/-befores xl$-befores'
  - 'xl-2fs xl-"<.<{''02fs xl_/-2fs xl`s-2fs'

- - 'xl(befores xl[befores xl{befores xl''befores xl"befores xl-=([{''"befores'
  - 'xl"<2fs xl.<2fs xl{2fs xl''2fs xl02fs xl-"7"<.<{''02fs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'befores) befores] befores} befores'' befores" befores- befores, befores. befores; befores: befores? befores!'
  - '2fs"> 2fs.> 2fs_> 2fs,02fs0 2fs- 2fs1 2fs4 2fs; 2fs03 2fs8 2fs!'

- - 'befores@ befores# befores$ befores% befores^ befores& befores* befores( befores_ befores= befores+ befores[ befores{ befores\\ befores| befores< befores> befores` befores~ befores/'
  - '2fs`a 2fs_? 2fs`s 2fs.0 2fs`5 2fs`& 2fs"9 2fs"< 2fs.- 2fs"7 2fs"6 2fs.< 2fs_< 2fs_* 2fs_| 2fs`< 2fs`> 2fs."9 2fs`9 2fs/'
  - xfail: contraction followed by special characters is ignored

- - 'befs) befs] befs} befs'' befs" befs- befs, befs. befs; befs: befs? befs! befs@ befs# befs$ befs% befs^ befs& befs* befs( befs_ befs= befs+ befs[ befs{ befs\\ befs| befs< befs> befs` befs~ befs/'
  - 'befs"> befs.> befs_> befs,0befs0 befs- befs1 befs4 befs; befs03 befs8 befs! befs`a befs_? befs`s befs.0 befs`5 befs`& befs"9 befs"< befs.- befs"7 befs"6 befs.< befs_< befs_* befs_| befs`< befs`> befs."9 befs`9 befs/'
  - xfail: non-contraction of "befs" conflicts with contraction of "befores"

- - 'befores-xl befores-([{''"xl befores-/xl befores-$xl'
  - '2fs-xl 2fs-"<.<{''0xl 2fs-_/xl 2fs-`sxl'

- - 'befores(xl befores[xl befores{xl befores''xl befores"xl befores=([{''"-xl befores([{''"-xl befores/-xl befores$-xl'
  - '2fs"<xl 2fs.<xl 2fs{xl 2fs''xl 2fs0xl 2fs"7"<.<{''0-xl 2fs"<.<{''0-xl 2fs/-xl 2fs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(behind [behind {behind ''behind "behind -behind'
  - '"<2h .<2h _<2h,82h 82h -2h'

- - '!behind @behind #behind $behind %behind ^behind &behind *behind )behind _behind =behind +behind ]behind }behind \\behind |behind .behind ,behind ;behind :behind ?behind <behind >behind `behind ~behind /behind'
  - '!2h `a2h _?2h `s2h .02h `52h `&2h "92h ">2h .-2h "72h "62h .>2h _>2h _*2h _|2h 42h 12h ;2h0 32h ;82h `<2h `>2h ;82h .*2h `92h _/2h'
  - xfail: contraction following special characters is ignored

- - 'xl-behind xl-([{''"behind xl/-behind xl$-behind'
  - 'xl-2h xl-"<.<{''02h xl_/-2h xl`s-2h'

- - 'xl(behind xl[behind xl{behind xl''behind xl"behind xl-=([{''"behind'
  - 'xl"<2h xl.<2h xl{2h xl''2h xl02h xl-"7"<.<{''02h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'behind) behind] behind} behind'' behind" behind- behind, behind. behind; behind: behind? behind!'
  - '2h"> 2h.> 2h_> 2h,02h0 2h- 2h1 2h4 2h; 2h03 2h8 2h!'

- - 'behind@ behind# behind$ behind% behind^ behind& behind* behind( behind_ behind= behind+ behind[ behind{ behind\\ behind| behind< behind> behind` behind~ behind/'
  - '2h`a 2h_? 2h`s 2h.0 2h`5 2h`& 2h"9 2h"< 2h.- 2h"7 2h"6 2h.< 2h_< 2h_* 2h_| 2h`< 2h`> 2h."9 2h`9 2h/'
  - xfail: contraction followed by special characters is ignored

- - 'beh) beh] beh} beh'' beh" beh- beh, beh. beh; beh: beh? beh!'
  - 'beh"> beh.> beh_> beh,0beh0 beh- beh1 beh4 beh; beh03 beh8 beh!'

- - 'beh@ beh# beh$ beh% beh^ beh& beh* beh( beh_ beh= beh+ beh[ beh{ beh\\ beh| beh< beh> beh` beh~ beh/'
  - 'beh`a beh_? beh`s beh.0 beh`5 beh`& beh"9 beh"< beh.- beh"7 beh"6 beh.< beh_< beh_* beh_| beh`< beh`> beh."9 beh`9 beh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'behind-xl behind-([{''"xl behind-/xl behind-$xl'
  - '2h-xl 2h-"<.<{''0xl 2h-_/xl 2h-`sxl'

- - 'behind(xl behind[xl behind{xl behind''xl behind"xl behind=([{''"-xl behind([{''"-xl behind/-xl behind$-xl'
  - '2h"<xl 2h.<xl 2h{xl 2h''xl 2h0xl 2h"7"<.<{''0-xl 2h"<.<{''0-xl 2h/-xl 2h`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(behinds [behinds {behinds ''behinds "behinds -behinds'
  - '"<2hs .<2hs _<2hs,82hs 82hs -2hs'

- - '!behinds @behinds #behinds $behinds %behinds ^behinds &behinds *behinds )behinds _behinds =behinds +behinds ]behinds }behinds \\behinds |behinds .behinds ,behinds ;behinds :behinds ?behinds <behinds >behinds `behinds ~behinds /behinds'
  - '!2hs `a2hs _?2hs `s2hs .02hs `52hs `&2hs "92hs ">2hs .-2hs "72hs "62hs .>2hs _>2hs _*2hs _|2hs 42hs 12hs ;2hs0 32hs ;82hs `<2hs `>2hs ;82hs .*2hs `92hs _/2hs'
  - xfail: contraction following special characters is ignored

- - '!behs @behs #behs $behs %behs ^behs &behs *behs )behs _behs =behs +behs ]behs erbehs \\behs |behs .behs ,behs ;behs :behs ?behs <behs >behs `behs ~behs /behs'
  - '!behs `abehs _?behs `sbehs .0behs `5behs `&behs "9behs ">behs .-behs "7behs "6behs .>behs erbehs _*behs _|behs 4behs 1behs ;behs0 3behs ;8behs `<behs `>behs .*behs `9behs _/behs'

- - 'behs (behs [behs {behs ''behs "behs -behs'
  - 'behs "<behs .<behs _<behs,8behs 8behs -behs'
  - xfail: non-contraction of "behs" conflicts witcv contraction of "behinds"

- - 'xl-behinds xl-([{''"behinds xl/-behinds xl$-behinds'
  - 'xl-2hs xl-"<.<{''02hs xl_/-2hs xl`s-2hs'

- - 'xl(behinds xl[behinds xl{behinds xl''behinds xl"behinds xl-=([{''"behinds'
  - 'xl"<2hs xl.<2hs xl{2hs xl''2hs xl02hs xl-"7"<.<{''02hs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'behinds) behinds] behinds} behinds'' behinds" behinds- behinds, behinds. behinds; behinds: behinds? behinds!'
  - '2hs"> 2hs.> 2hs_> 2hs,02hs0 2hs- 2hs1 2hs4 2hs; 2hs03 2hs8 2hs!'

- - 'behinds@ behinds# behinds$ behinds% behinds^ behinds& behinds* behinds( behinds_ behinds= behinds+ behinds[ behinds{ behinds\\ behinds| behinds< behinds> behinds` behinds~ behinds/'
  - '2hs`a 2hs_? 2hs`s 2hs.0 2hs`5 2hs`& 2hs"9 2hs"< 2hs.- 2hs"7 2hs"6 2hs.< 2hs_< 2hs_* 2hs_| 2hs`< 2hs`> 2hs."9 2hs`9 2hs/'
  - xfail: contraction followed by special characters is ignored

- - 'behs) behs] behs} behs'' behs" behs- behs, behs. behs; behs: behs? behs! behs@ behs# behs$ behs% behs^ behs& behs* behs( behs_ behs= behs+ behs[ behs{ behs\\ behs| behs< behs> behs` behs~ behs/'
  - 'behs"> behs.> behs_> behs,0behs0 behs- behs1 behs4 behs; behs03 behs8 behs! behs`a behs_? behs`s behs.0 behs`5 behs`& behs"9 behs"< behs.- behs"7 behs"6 behs.< behs_< behs_* behs_| behs`< behs`> behs."9 behs`9 behs/'
  - xfail: non-contraction of "behs" conflicts with contraction of "behinds"

- - 'behinds-xl behinds-([{''"xl behinds-/xl behinds-$xl'
  - '2hs-xl 2hs-"<.<{''0xl 2hs-_/xl 2hs-`sxl'

- - 'behinds(xl behinds[xl behinds{xl behinds''xl behinds"xl behinds=([{''"-xl behinds([{''"-xl behinds/-xl behinds$-xl'
  - '2hs"<xl 2hs.<xl 2hs{xl 2hs''xl 2hs0xl 2hs"7"<.<{''0-xl 2hs"<.<{''0-xl 2hs/-xl 2hs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(below [below {below ''below "below -below'
  - '"<2l .<2l {2l,82l 82l -2l'

- - '!below @below #below $below %below ^below &below *below )below _below =below +below ]below }below \\below |below .below ,below ;below :below ?below <below >below `below ~below /below'
  - '!2l `a2l _?2l `s2l .02l `52l `&2l "92l ">2l .-2l "72l "62l .>2l _>2l _*2l _|2l 42l 12l ;2l0 32l ;82l `<2l `>2l .*2l `92l _/2l'
  - xfail: contraction following special characters is ignored

- - 'xl-below xl-([{''"below xl/-below xl$-below'
  - 'xl-2l xl-"<.<{''02l xl_/-2l xl`s-2l'

- - 'xl(below xl[below xl{below xl''below xl"below xl-=([{''"below'
  - 'xl"<2l xl.<2l xl{2l xl''2l xl02l xl-"7"<.<{''02l'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'below) below] below} below'' below" below- below, below. below; below: below? below!'
  - '2l"> 2l.> 2l_> 2l,02l0 2l- 2l1 2l4 2l; 2l03 2l8 2l!'

- - 'below@ below# below$ below% below^ below& below* below( below_ below= below+ below[ below{ below\\ below| below< below> below` below~ below/'
  - '2l`a 2l_? 2l`s 2l.0 2l`5 2l`& 2l"9 2l"< 2l.- 2l"7 2l"6 2l.< 2l_< 2l_* 2l_| 2l`< 2l`> 2l."9 2l`9 2l/'
  - xfail: contraction followed by special characters is ignored

- - 'below-xl below-([{''"xl below-/xl below-$xl'
  - '2l-xl 2l-"<.<{''0xl 2l-_/xl 2l-`sxl'

- - 'below(xl below[xl below{xl below''xl below"xl below=([{''"-xl below([{''"-xl below/-xl below$-xl'
  - '2l"<xl 2l.<xl 2l{xl 2l''xl 2l0xl 2l"7"<.<{''0-xl 2l"<.<{''0-xl 2l/-xl 2l`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(belows [belows {belows ''belows "belows -belows'
  - '"<2ls .<2ls _<2ls,82ls 82ls -2ls'

- - '!belows @belows #belows $belows %belows ^belows &belows *belows )belows _belows =belows +belows ]belows }belows \\belows |belows .belows ,belows ;belows :belows ?belows <belows >belows `belows ~belows /belows'
  - '!2ls `a2ls _?2ls `s2ls .02ls `52ls `&2ls "92ls ">2ls .-2ls "72ls "62ls .>2ls _>2ls _*2ls _|2ls 42ls 12ls ;2ls0 32ls ;82ls `<2ls `>2ls .*2ls `92ls _/2ls'
  - xfail: contraction following special characters is ignored

- - 'xl-belows xl-([{''"belows xl/-belows xl$-belows'
  - 'xl-2ls xl-"<.<{''02ls xl_/-2ls xl`s-2ls'

- - 'xl(belows xl[belows xl{belows xl''belows xl"belows xl-=([{''"belows'
  - 'xl"<2ls xl.<2ls xl{2ls xl''2ls xl02ls xl-"7"<.<{''02ls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'belows) belows] belows} belows'' belows" belows- belows, belows. belows; belows: belows? belows!'
  - '2ls"> 2ls.> 2ls_> 2ls,02ls0 2ls- 2ls1 2ls4 2ls; 2ls03 2ls8 2ls!'

- - 'belows@ belows# belows$ belows% belows^ belows& belows* belows( belows_ belows= belows+ belows[ belows{ belows\\ belows| belows< belows> belows` belows~ belows/'
  - '2ls`a 2ls_? 2ls`s 2ls.0 2ls`5 2ls`& 2ls"9 2ls"< 2ls.- 2ls"7 2ls"6 2ls.< 2ls_< 2ls_* 2ls_| 2ls`< 2ls`> 2ls."9 2ls`9 2ls/'
  - xfail: contraction followed by special characters is ignored

- - 'belows-xl belows-([{''"xl belows-/xl belows-$xl'
  - '2ls-xl 2ls-"<.<{''0xl 2ls-_/xl 2ls-`sxl'

- - 'belows(xl belows[xl belows{xl belows''xl belows"xl belows=([{''"-xl belows([{''"-xl belows/-xl belows$-xl'
  - '2ls"<xl 2ls.<xl 2ls{xl 2ls''xl 2ls0xl 2ls"7"<.<{''0-xl 2ls"<.<{''0-xl 2ls/-xl 2ls`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beneath [beneath {beneath ''beneath "beneath -beneath'
  - '"<2n .<2n _<2n,82n 82n -2n'

- - '!beneath @beneath #beneath $beneath %beneath ^beneath &beneath *beneath )beneath _beneath =beneath +beneath ]beneath }beneath \\beneath |beneath .beneath ,beneath ;beneath :beneath ?beneath <beneath >beneath `beneath ~beneath /beneath'
  - '!2n `a2n _?2n `s2n .02n `52n `&2n "92n ">2n .-2n "72n "62n .>2n _>2n _*2n _|2n 42n 12n ;2n0 32n ?2n `<2n `>2n .*2n `92n _/2n'
  - xfail: contraction following special characters is ignored

- - 'xl-beneath xl-([{''"beneath xl/-beneath xl$-beneath'
  - 'xl-2n xl-"<.<{''02n xl_/-2n xl`s-2n'

- - 'xl(beneath xl[beneath xl{beneath xl''beneath xl"beneath xl-=([{''"beneath'
  - 'xl"<2n xl.<2n xl{2n xl''2n xl02n xl-"7"<.<{''02n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beneath) beneath] beneath} beneath'' beneath" beneath- beneath, beneath. beneath; beneath: beneath? beneath!'
  - '2n"> 2n.> 2n_> 2n,02n0 2n- 2n1 2n4 2n; 2n03 2n8 2n!'

- - 'beneath@ beneath# beneath$ beneath% beneath^ beneath& beneath* beneath( beneath_ beneath= beneath+ beneath[ beneath{ beneath\\ beneath| beneath< beneath> beneath` beneath~ beneath/'
  - '2n`a 2n_? 2n`s 2n.0 2n`5 2n`& 2n"9 2n"< 2n.- 2n"7 2n"6 2n.< 2n_< 2n_* 2n_| 2n`< 2n`> 2n."9 2n`9 2n/'
  - xfail: contraction followed by special characters is ignored

- - 'beneath-xl beneath-([{''"xl beneath-/xl beneath-$xl'
  - '2n-xl 2n-"<.<{''0xl 2n-_/xl 2n-`sxl'

- - 'beneath(xl beneath[xl beneath{xl beneath''xl beneath"xl beneath=([{''"-xl beneath([{''"-xl beneath/-xl beneath$-xl'
  - '2n"<xl 2n.<xl 2n{xl 2n''xl 2n0xl 2n"7"<.<{''0-xl 2n"<.<{''0-xl 2n/-xl 2n`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beneaths [beneaths {beneaths ''beneaths "beneaths -beneaths'
  - '"<2ns .<2ns _<2ns,82ns 82ns -2ns'

- - '!beneaths @beneaths #beneaths $beneaths %beneaths ^beneaths &beneaths *beneaths )beneaths _beneaths =beneaths +beneaths ]beneaths }beneaths \\beneaths |beneaths .beneaths ,beneaths ;beneaths :beneaths ?beneaths <beneaths >beneaths `beneaths ~beneaths /beneaths'
  - '!2ns `a2ns _?2ns `s2ns .02ns `52ns `&2ns "92ns ">2ns .-2ns "72ns "62ns .>2ns _>2ns _*2ns _|2ns 42ns 12ns ;2ns0 32ns ;82ns `<2ns `>2ns ;82ns .*2ns `92ns _/2ns'
  - xfail: contraction following special characters is ignored

- - 'xl-beneaths xl-([{''"beneaths xl/-beneaths xl$-beneaths'
  - 'xl-2ns xl-"<.<{''02ns xl_/-2ns xl`s-2ns'

- - 'xl(beneaths xl[beneaths xl{beneaths xl''beneaths xl"beneaths xl-=([{''"beneaths'
  - 'xl"<2ns xl.<2ns xl{2ns xl''2ns xl02ns xl-"7"<.<{''02ns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beneaths) beneaths] beneaths} beneaths'' beneaths" beneaths- beneaths, beneaths. beneaths; beneaths: beneaths? beneaths!'
  - '2ns"> 2ns.> 2ns_> 2ns,02ns0 2ns- 2ns1 2ns4 2ns; 2ns03 2ns8 2ns!'

- - 'beneaths@ beneaths# beneaths$ beneaths% beneaths^ beneaths& beneaths* beneaths( beneaths_ beneaths= beneaths+ beneaths[ beneaths{ beneaths\\ beneaths| beneaths< beneaths> beneaths` beneaths~ beneaths/'
  - '2ns`a 2ns_? 2ns`s 2ns.0 2ns`5 2ns`& 2ns"9 2ns"< 2ns.- 2ns"7 2ns"6 2ns.< 2ns_< 2ns_* 2ns_| 2ns`< 2ns`> 2ns."9 2ns`9 2ns/'
  - xfail: contraction followed by special characters is ignored

- - 'beneaths-xl beneaths-([{''"xl beneaths-/xl beneaths-$xl'
  - '2ns-xl 2ns-"<.<{''0xl 2ns-_/xl 2ns-`sxl'

- - 'beneaths(xl beneaths[xl beneaths{xl beneaths''xl beneaths"xl beneaths=([{''"-xl beneaths([{''"-xl beneaths/-xl beneaths$-xl'
  - '2ns"<xl 2ns.<xl 2ns{xl 2ns''xl 2ns0xl 2ns"7"<.<{''0-xl 2ns"<.<{''0-xl 2ns/-xl 2ns`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beside [beside {beside ''beside "beside -beside'
  - '"<2s .<2s _<2s,82s 82s -2s'

- - '!beside @beside #beside $beside %beside ^beside &beside *beside )beside _beside =beside +beside ]beside }beside \\beside |beside .beside ,beside ;beside :beside ?beside <beside >beside `beside ~beside /beside'
  - '!2s `a2s _?2s `s2s .02s `52s `&2s "92s ">2s .-2s "72s "62s .>2s _>2s _*2s _|2s 42s 12s ;2s0 32s ;82s `<2s `>2s .*2s `92s _/2s'
  - xfail: contraction following special characters is ignored

- - 'xl-beside xl-([{''"beside xl/-beside xl$-beside'
  - 'xl-2s xl-"<.<{''02s xl_/-2s xl`s-2s'

- - 'xl(beside xl[beside xl{beside xl''beside xl"beside xl-=([{''"beside'
  - 'xl"<2s xl.<2s xl{2s xl''2s xl02s xl-"7"<.<{''02s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beside) beside] beside} beside'' beside" beside- beside, beside. beside; beside: beside? beside!'
  - '2s"> 2s.> 2s_> 2s,02s0 2s- 2s1 2s4 2s; 2s03 2s8 2s!'

- - 'beside@ beside# beside$ beside% beside^ beside& beside* beside( beside_ beside= beside+ beside[ beside{ beside\\ beside| beside< beside> beside` beside~ beside/'
  - '2s`a 2s_? 2s`s 2s.0 2s`5 2s`& 2s"9 2s"< 2s.- 2s"7 2s"6 2s.< 2s_< 2s_* 2s_| 2s`< 2s`> 2s."9 2s`9 2s/'
  - xfail: contraction followed by special characters is ignored

- - 'bes) bes] bes} bes'' bes" bes- bes, bes. bes; bes: bes? bes!'
  - 'bes"> bes.> bes_> bes,0bes0 bes- bes1 bes4 bes; bes03 bes8 bes!'

- - 'bes@ bes# bes$ bes% bes^ bes& bes* bes( bes_ bes= bes+ bes[ bes{ bes\\ bes| bes< bes> bes` bes~ bes/'
  - 'bes`a bes_? bes`s bes.0 bes`5 bes`& bes"9 bes"< bes.- bes"7 bes"6 bes.< bes_< bes_* bes_| bes`< bes`> bes."9 bes`9 bes/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'beside-xl beside-([{''"xl beside-/xl beside-$xl'
  - '2s-xl 2s-"<.<{''0xl 2s-_/xl 2s-`sxl'

- - 'beside(xl beside[xl beside{xl beside''xl beside"xl beside=([{''"-xl beside([{''"-xl beside/-xl beside$-xl'
  - '2s"<xl 2s.<xl 2s{xl 2s''xl 2s0xl 2s"7"<.<{''0-xl 2s"<.<{''0-xl 2s/-xl 2s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(besides [besides {besides ''besides "besides -besides'
  - '"<2ss .<2ss _<2ss,82ss 82ss -2ss'

- - '!besides @besides #besides $besides %besides ^besides &besides *besides )besides _besides =besides +besides ]besides }besides \\besides |besides .besides ,besides ;besides :besides ?besides <besides >besides `besides ~besides /besides'
  - '!2ss `a2ss _?2ss `s2ss .02ss `52ss `&2ss "92ss ">2ss .-2ss "72ss "62ss .>2ss _>2ss _*2ss _|2ss 42ss 12ss ;2ss0 32ss ;82ss `<2ss `>2ss ;82ss .*2ss `92ss _/2ss'
  - xfail: contraction following special characters is ignored

- - 'xl-besides xl-([{''"besides xl/-besides xl$-besides'
  - 'xl-2ss xl-"<.<{''02ss xl_/-2ss xl`s-2ss'

- - 'xl(besides xl[besides xl{besides xl''besides xl"besides xl-=([{''"besides'
  - 'xl"<2ss xl.<2ss xl{2ss xl''2ss xl02ss xl-"7"<.<{''02ss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'besides) besides] besides} besides'' besides" besides- besides, besides. besides; besides: besides? besides!'
  - '2ss"> 2ss.> 2ss_> 2ss,02ss0 2ss- 2ss1 2ss4 2ss; 2ss03 2ss8 2ss!'

- - 'besides@ besides# besides$ besides% besides^ besides& besides* besides( besides_ besides= besides+ besides[ besides{ besides\\ besides| besides< besides> besides` besides~ besides/'
  - '2ss`a 2ss_? 2ss`s 2ss.0 2ss`5 2ss`& 2ss"9 2ss"< 2ss.- 2ss"7 2ss"6 2ss.< 2ss_< 2ss_* 2ss_| 2ss`< 2ss`> 2ss."9 2ss`9 2ss/'
  - xfail: contraction followed by special characters is ignored

- - 'besides-xl besides-([{''"xl besides-/xl besides-$xl'
  - '2ss-xl 2ss-"<.<{''0xl 2ss-_/xl 2ss-`sxl'

- - 'besides(xl besides[xl besides{xl besides''xl besides"xl besides=([{''"-xl besides([{''"-xl besides/-xl besides$-xl'
  - '2ss"<xl 2ss.<xl 2ss{xl 2ss''xl 2ss0xl 2ss"7"<.<{''0-xl 2ss"<.<{''0-xl 2ss/-xl 2ss`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(between [between {between ''between "between -between'
  - '"<2t .<2t _<2t,82t 82t -2t'

- - '!between @between #between $between %between ^between &between *between )between _between =between +between ]between }between \\between |between .between ,between ;between :between ?between <between >between `between ~between /between'
  - '!2t `a2t _?2t `s2t .02t `52t `&2t "92t ">2t .-2t "72t "62t .>2t _>2t _*2t _|2t 42t 12t ;2t0 32t ;82t `<2t `>2t .*2t `92t _/2t'
  - xfail: contraction following special characters is ignored

- - 'xl-between xl-([{''"between xl/-between xl$-between'
  - 'xl-2t xl-"<.<{''02t xl_/-2t xl`s-2t'

- - 'xl(between xl[between xl{between xl''between xl"between xl-=([{''"between'
  - 'xl"<2t xl.<2t xl{2t xl''2t xl02t xl-"7"<.<{''02t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'between) between] between} between'' between" between- between, between. between; between: between? between!'
  - '2t"> 2t.> 2t_> 2t,02t0 2t- 2t1 2t4 2t; 2t03 2t8 2t!'

- - 'between@ between# between$ between% between^ between& between* between( between_ between= between+ between[ between{ between\\ between| between< between> between` between~ between/'
  - '2t`a 2t_? 2t`s 2t.0 2t`5 2t`& 2t"9 2t"< 2t.- 2t"7 2t"6 2t.< 2t_< 2t_* 2t_| 2t`< 2t`> 2t."9 2t`9 2t/'
  - xfail: contraction followed by special characters is ignored

- - 'bet) bet] bet} bet'' bet" bet- bet, bet. bet; bet: bet? bet!'
  - 'bet"> bet.> bet_> bet,0bet0 bet- bet1 bet4 bet; bet03 bet8 bet!'

- - 'bet@ bet# bet$ bet% bet^ bet& bet* bet( bet_ bet= bet+ bet[ bet{ bet\\ bet| bet< bet> bet` bet~ bet/'
  - 'bet`a bet_? bet`s bet.0 bet`5 bet`& bet"9 bet"< bet.- bet"7 bet"6 bet.< bet_< bet_* bet_| bet`< bet`> bet."9 bet`9 bet/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'between-xl between-([{''"xl between-/xl between-$xl'
  - '2t-xl 2t-"<.<{''0xl 2t-_/xl 2t-`sxl'

- - 'between(xl between[xl between{xl between''xl between"xl between=([{''"-xl between([{''"-xl between/-xl between$-xl'
  - '2t"<xl 2t.<xl 2t{xl 2t''xl 2t0xl 2t"7"<.<{''0-xl 2t"<.<{''0-xl 2t/-xl 2t`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(betweens [betweens {betweens ''betweens "betweens -betweens'
  - '"<2ts .<2ts _<2ts,82ts 82ts -2ts'

- - '!betweens @betweens #betweens $betweens %betweens ^betweens &betweens *betweens )betweens _betweens =betweens +betweens ]betweens }betweens \\betweens |betweens .betweens ,betweens ;betweens :betweens ?betweens <betweens >betweens `betweens ~betweens /betweens'
  - '!2ts `a2ts _?2ts `s2ts .02ts `52ts `&2ts "92ts ">2ts .-2ts "72ts "62ts .>2ts _>2ts _*2ts _|2ts 42ts 12ts ;2ts0 32ts ;82ts `<2ts `>2ts ;82ts .*2ts `92ts _/2ts'
  - xfail: contraction following special characters is ignored

- - 'xl-betweens xl-([{''"betweens xl/-betweens xl$-betweens'
  - 'xl-2ts xl-"<.<{''02ts xl_/-2ts xl`s-2ts'

- - 'xl(betweens xl[betweens xl{betweens xl''betweens xl"betweens xl-=([{''"betweens'
  - 'xl"<2ts xl.<2ts xl{2ts xl''2ts xl02ts xl-"7"<.<{''02ts'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'betweens) betweens] betweens} betweens'' betweens" betweens- betweens, betweens. betweens; betweens: betweens? betweens!'
  - '2ts"> 2ts.> 2ts_> 2ts,02ts0 2ts- 2ts1 2ts4 2ts; 2ts03 2ts8 2ts!'

- - 'betweens@ betweens# betweens$ betweens% betweens^ betweens& betweens* betweens( betweens_ betweens= betweens+ betweens[ betweens{ betweens\\ betweens| betweens< betweens> betweens` betweens~ betweens/'
  - '2ts`a 2ts_? 2ts`s 2ts.0 2ts`5 2ts`& 2ts"9 2ts"< 2ts.- 2ts"7 2ts"6 2ts.< 2ts_< 2ts_* 2ts_| 2ts`< 2ts`> 2ts."9 2ts`9 2ts/'
  - xfail: contraction followed by special characters is ignored

- - 'betweens-xl betweens-([{''"xl betweens-/xl betweens-$xl'
  - '2ts-xl 2ts-"<.<{''0xl 2ts-_/xl 2ts-`sxl'

- - 'betweens(xl betweens[xl betweens{xl betweens''xl betweens"xl betweens=([{''"-xl betweens([{''"-xl betweens/-xl betweens$-xl'
  - '2ts"<xl 2ts.<xl 2ts{xl 2ts''xl 2ts0xl 2ts"7"<.<{''0-xl 2ts"<.<{''0-xl 2ts/-xl 2ts`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beyond [beyond {beyond ''beyond "beyond -beyond'
  - '"<2y .<2y _<2y,82y 82y -2y'

- - '!beyond @beyond #beyond $beyond %beyond ^beyond &beyond *beyond )beyond _beyond =beyond +beyond ]beyond }beyond \\beyond |beyond .beyond ,beyond ;beyond :beyond ?beyond <beyond >beyond `beyond ~beyond /beyond'
  - '!2y `a2y _?2y `s2y .02y `52y `&2y "92y ">2y .-2y "72y "62y .>2y _>2y _*2y _|2y 42y 12y ;2y0 32y ;82y `<2y `>2y .*2y `92y _/2y'
  - xfail: contraction following special characters is ignored

- - 'xl-beyond xl-([{''"beyond xl/-beyond xl$-beyond'
  - 'xl-2y xl-"<.<{''02y xl_/-2y xl`s-2y'

- - 'xl(beyond xl[beyond xl{beyond xl''beyond xl"beyond xl-=([{''"beyond'
  - 'xl"<2y xl.<2y xl{2y xl''2y xl02y xl-"7"<.<{''02y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beyond) beyond] beyond} beyond'' beyond" beyond- beyond, beyond. beyond; beyond: beyond? beyond!'
  - '2y"> 2y.> 2y_> 2y,02y0 2y- 2y1 2y4 2y; 2y03 2y8 2y!'

- - 'beyond@ beyond# beyond$ beyond% beyond^ beyond& beyond* beyond( beyond_ beyond= beyond+ beyond[ beyond{ beyond\\ beyond| beyond< beyond> beyond` beyond~ beyond/'
  - '2y`a 2y_? 2y`s 2y.0 2y`5 2y`& 2y"9 2y"< 2y.- 2y"7 2y"6 2y.< 2y_< 2y_* 2y_| 2y`< 2y`> 2y."9 2y`9 2y/'
  - xfail: contraction followed by special characters is ignored

- - 'beyond-xl beyond-([{''"xl beyond-/xl beyond-$xl'
  - '2y-xl 2y-"<.<{''0xl 2y-_/xl 2y-`sxl'

- - 'beyond(xl beyond[xl beyond{xl beyond''xl beyond"xl beyond=([{''"-xl beyond([{''"-xl beyond/-xl beyond$-xl'
  - '2y"<xl 2y.<xl 2y{xl 2y''xl 2y0xl 2y"7"<.<{''0-xl 2y"<.<{''0-xl 2y/-xl 2y`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(beyonds [beyonds {beyonds ''beyonds "beyonds -beyonds'
  - '"<2ys .<2ys _<2ys,82ys 82ys -2ys'

- - '!beyonds @beyonds #beyonds $beyonds %beyonds ^beyonds &beyonds *beyonds )beyonds _beyonds =beyonds +beyonds ]beyonds }beyonds \\beyonds |beyonds .beyonds ,beyonds ;beyonds :beyonds ?beyonds <beyonds >beyonds `beyonds ~beyonds /beyonds'
  - '!2ys `a2ys _?2ys `s2ys .02ys `52ys `&2ys "92ys ">2ys .-2ys "72ys "62ys .>2ys _>2ys _*2ys _|2ys 42ys 12ys ;2ys0 32ys ;82ys `<2ys `>2ys ;82ys .*2ys `92ys _/2ys'
  - xfail: contraction following special characters is ignored

- - 'xl-beyonds xl-([{''"beyonds xl/-beyonds xl$-beyonds'
  - 'xl-2ys xl-"<.<{''02ys xl_/-2ys xl`s-2ys'

- - 'xl(beyonds xl[beyonds xl{beyonds xl''beyonds xl"beyonds xl-=([{''"beyonds'
  - 'xl"<2ys xl.<2ys xl{2ys xl''2ys xl02ys xl-"7"<.<{''02ys'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'beyonds) beyonds] beyonds} beyonds'' beyonds" beyonds- beyonds, beyonds. beyonds; beyonds: beyonds? beyonds!'
  - '2ys"> 2ys.> 2ys_> 2ys,02ys0 2ys- 2ys1 2ys4 2ys; 2ys03 2ys8 2ys!'

- - 'beyonds@ beyonds# beyonds$ beyonds% beyonds^ beyonds& beyonds* beyonds( beyonds_ beyonds= beyonds+ beyonds[ beyonds{ beyonds\\ beyonds| beyonds< beyonds> beyonds` beyonds~ beyonds/'
  - '2ys`a 2ys_? 2ys`s 2ys.0 2ys`5 2ys`& 2ys"9 2ys"< 2ys.- 2ys"7 2ys"6 2ys.< 2ys_< 2ys_* 2ys_| 2ys`< 2ys`> 2ys."9 2ys`9 2ys/'
  - xfail: contraction followed by special characters is ignored

- - 'beyonds-xl beyonds-([{''"xl beyonds-/xl beyonds-$xl'
  - '2ys-xl 2ys-"<.<{''0xl 2ys-_/xl 2ys-`sxl'

- - 'beyonds(xl beyonds[xl beyonds{xl beyonds''xl beyonds"xl beyonds=([{''"-xl beyonds([{''"-xl beyonds/-xl beyonds$-xl'
  - '2ys"<xl 2ys.<xl 2ys{xl 2ys''xl 2ys0xl 2ys"7"<.<{''0-xl 2ys"<.<{''0-xl 2ys/-xl 2ys`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(blind [blind {blind ''blind "blind -blind'
  - '"<bl .<bl _<bl,8bl 8bl -bl'

- - '!blind @blind #blind $blind %blind ^blind &blind *blind )blind _blind =blind +blind ]blind }blind \\blind |blind .blind ,blind ;blind :blind ?blind <blind >blind `blind ~blind /blind'
  - '!bl `abl _?bl `sbl .0bl `5bl `&bl "9bl ">bl .-bl "7bl "6bl .>bl _>bl _*bl _|bl 4bl 1bl ;bl0 3bl ;8bl `<bl `>bl ;8bl .*bl `9bl _/bl'
  - xfail: contraction following special characters is ignored

- - '(bl [bl {bl ''bl "bl -bl'
  - '"<;bl .<;bl _<;bl,8;bl 8;bl -;bl'

- - '!bl @bl #bl $bl %bl ^bl &bl *bl )bl _bl =bl +bl ]bl }bl \\bl |bl .bl ,bl ;bl :bl ?bl <bl >bl ?bl `bl ~bl /bl'
  - '!;bl `a;bl _?;bl `s;bl .0;bl `5;bl `&;bl "9;bl ">;bl .-;bl "7;bl "6;bl .>;bl _>;bl _*;bl _|;bl 4;bl 1;bl ;2bl0 3;bl ;8;bl `<;bl `>;bl .*;bl `9;bl _/;bl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-blind xl-([{''"blind xl/-blind xl$-blind'
  - 'xl-bl xl-"<.<{''0bl xl_/-bl xl`s-bl'

- - 'xl(blind xl[blind xl{blind xl''blind xl"blind xl-=([{''"blind'
  - 'xl"<bl xl.<bl xl{bl xl''bl xl0bl xl-"7"<.<{''0bl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'blind) blind] blind} blind'' blind" blind- blind, blind. blind; blind: blind? blind!'
  - 'bl"> bl.> bl_> bl,0bl0 bl- bl1 bl4 bl; bl03 bl8 bl!'

- - 'blind@ blind# blind$ blind% blind^ blind& blind* blind( blind_ blind= blind+ blind[ blind{ blind\\ blind| blind< blind> blind` blind~ blind/'
  - 'bl`a bl_? bl`s bl.0 bl`5 bl`& bl"9 bl"< bl.- bl"7 bl"6 bl.< bl_< bl_* bl_| bl`< bl`> bl."9 bl`9 bl/'
  - xfail: contraction followed by special characters is ignored

- - 'bl) bl] bl} bl'' bl" bl- bl, bl. bl; bl: bl? bl!'
  - ';bl"> ;bl.> ;bl_> ;bl,0;bl0 ;bl- ;bl1 ;bl4 ;bl; ;bl03 ;bl8 ;bl!'

- - 'bl@ bl# bl$ bl% bl^ bl& bl* bl( bl_ bl= bl+ bl[ bl{ bl\\ bl| bl< bl> bl` bl~ bl/'
  - ';bl`a ;bl_? ;bl`s ;bl.0 ;bl`5 ;bl`& ;bl"9 ;bl"< ;bl.- ;bl"7 ;bl"6 ;bl.< ;bl_< ;bl_* ;bl_| ;bl`< ;bl`> ;bl."9 ;bl`9 ;bl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'blind-xl blind-([{''"xl blind-/xl blind-$xl'
  - 'bl-xl bl-"<.<{''0xl bl-_/xl bl-`sxl'

- - 'blind(xl blind[xl blind{xl blind''xl blind"xl blind=([{''"-xl blind([{''"-xl blind/-xl blind$-xl'
  - 'bl"<xl bl.<xl bl{xl bl''xl bl0xl bl"7"<.<{''0-xl bl"<.<{''0-xl bl/-xl bl`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'blindb blindc blindd blindf blindg blindh blindj blindk blindl blindm blindn blindp blindq blindr blinds blindt blindv blindw blindx blindz probablindly'
  - 'blb blc bld blf blg blh blj blk bll blm bln blp blq blr bls blt blv blw blx blz probablly'

- - 'blb blc bld blf blg blh blj blk bll blm bln blp blq blr bls blt blv blw blx blz blful blment blness blsion bltion blless blance blence blity blong probablly'
  - ';blb ;blc ;bld ;blf ;blg ;blh ;blj ;blk ;bll ;blm ;bln ;blp ;blq ;blr ;bls ;blt ;blv ;blw ;blx ;blz ;bl;l ;bl;t ;bl;s ;bl4n ;bl;n ;bl4s ;bl4e ;bl;e ;bl;y ;bl;g proba;blly'
  - xfail: non-contraction of "bl" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "blind"

- - 'ablind bblind cblind dblind eblind  fblind gblind hblind iblind jblind kblind lblind  mblind nblind oblind pbl qblind rblind sblind tblind ublind  vblind wblind xblind yblind zblind'
  - 'abl bbl cbl dbl ebl  fbl gbl hbl ibl jbl kbl lbl  mbl nbl obl pbl qbl rbl sbl tbl ubl  vbl wbl xbl ybl zbl'

- - 'abl bbl cbl dbl ebl  fbl gbl hbl ibl jbl kbl lbl  mbl nbl obl pbl qbl rbl sbl tbl ubl  vbl wbl xbl ybl zbl'
  - 'a;bl b;bl c;bl d;bl e;bl  f;bl g;bl h;bl i;bl j;bl k;bl l;bl  m;bl n;bl o;bl p;bl q;bl r;bl s;bl t;bl u;bl  v;bl w;bl x;bl y;bl z;bl'
  - xfail: non-contraction of "bl" following letter  has a missing grade 1 indicator due to conflict with contraction of "blind"

- - '(braille [braille {braille ''braille "braille -braille'
  - '"<brl .<brl _<brl,8brl 8brl -brl'

- - '!braille @braille #braille $braille %braille ^braille &braille *braille )braille _braille =braille +braille ]braille }braille \\braille |braille .braille ,braille ;braille :braille ?braille <braille >braille `braille ~braille /'
  - '!brl `abrl _?brl `sbrl .0brl `5brl `&brl "9brl ">brl .-brl "7brl "6brl .>brl _>brl _*brl _|brl 4brl 1brl ;brl0 3brl ;8brl `<brl `>brl ;8brl .*brl `9brl _/brl'
  - xfail: contraction following special characters is ignored

- - '(brl [brl {brl ''brl "brl -brl'
  - '"<;brl .<;brl _<;brl,8;brl 8;brl -;brl'

- - '!brl @brl #brl $brl %brl ^brl &brl *brl )brl _brl =brl +brl ]brl }brl \\brl |brl .brl ,brl ;brl :brl ?brl <brl >brl ?brl `brl ~brl /brl'
  - '!;brl `a;brl _?;brl `s;brl .0;brl `5;brl `&;brl "9;brl ">;brl .-;brl "7;brl "6;brl .>;brl _>;brl _*;brl _|;brl 4;brl 1;brl ;2brl0 3;brl ;8;brl `<;brl `>;brl .*;brl `9;brl _/;brl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-braille xl-([{''"braille xl/-braille xl$-braille'
  - 'xl-brl xl-"<.<{''0brl xl_/-brl xl`s-brl'

- - 'xl(braille xl[braille xl{braille xl''braille xl"braille xl-=([{''"braille'
  - 'xl"<brl xl.<brl xl{brl xl''brl xl0brl xl-"7"<.<{''0brl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'braille) braille] braille} braille'' braille" braille- braille, braille. braille; braille: braille? braille!'
  - 'brl"> brl.> brl_> brl,0brl0 brl- brl1 brl4 brl; brl03 brl8 brl!'

- - 'braille@ braille# braille$ braille% braille^ braille& braille* braille( braille_ braille= braille+ braille[ braille{ braille\\ braille| braille< braille> braille` braille~ braille/'
  - 'brl`a brl_? brl`s brl.0 brl`5 brl`& brl"9 brl"< brl.- brl"7 brl"6 brl.< brl_< brl_* brl_| brl`< brl`> brl."9 brl`9 brl/'
  - xfail: contraction followed by special characters is ignored

- - 'brl) brl] brl} brl'' brl" brl- brl, brl. brl; brl: brl? brl!'
  - ';brl"> ;brl.> ;brl_> ;brl,0;brl0 ;brl- ;brl1 ;brl4 ;brl; ;brl03 ;brl8 ;brl!'

- - 'brl@ brl# brl$ brl% brl^ brl& brl* brl( brl_ brl= brl+ brl[ brl{ brl\\ brl| brl< brl> brl` brl~ brl/'
  - ';brl`a ;brl_? ;brl`s ;brl.0 ;brl`5 ;brl`& ;brl"9 ;brl"< ;brl.- ;brl"7 ;brl"6 ;brl.< ;brl_< ;brl_* ;brl_| ;brl`< ;brl`> ;brl."9 ;brl`9 ;brl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'braille-xl braille-([{''"xl braille-/xl braille-$xl'
  - 'brl-xl brl-"<.<{''0xl brl-_/xl brl-`sxl'

- - 'braille(xl braille[xl braille{xl braille''xl braille"xl braille=([{''"-xl braille([{''"-xl braille/-xl braille$-xl'
  - 'brl"<xl brl.<xl brl{xl brl''xl brl0xl brl"7"<.<{''0-xl brl"<.<{''0-xl brl/-xl brl`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'braillea brailleb braillec brailled braillee braillef brailleg brailleh braillei braillej braillek braillel braillem braillen brailleo braillep brailleq brailler brailles braillet brailleu braillev braillew braillex brailley braillez'
  - 'brla brlb brlc brld brle brlf brlg brlh brli brlj brlk brll brlm brln brlo brlp brlq brlr brls brlt brlu brlv brlw brlx brly brlz'

- - 'brla brlb brlc brld brle brlf brlg brlh brli brlj brlk brll brlm brln brlo brlp brlq brlr brls brlt brlu brlv brlw brlx brly brlz brlful brlment brlness brlsion brltion brlless brlance brlence brlity brlong'
  - ';brla ;brlb ;brlc ;brld ;brle ;brlf ;brlg ;brlh ;brli ;brlj ;brlk ;brll ;brlm ;brln ;brlo ;brlp ;brlq ;brlr ;brls ;brlt ;brlu ;brlv ;brlw ;brlx ;brly ;brlz ;brl;l ;brl;t ;brl;s ;brl4n ;brl;n ;brl4s ;brl4e ;brl;e ;brl;y ;brl;g'
  - xfail: non-contraction of "brl" followed by letter has a missing grade 1 indicator due to conflict with contraction of "braille"

- - 'abraille bbraille cbraille dbraille ebraille  fbraille gbraille hbraille ibraille jbraille kbraille lbraille  mbraille nbraille obraille pbrl qbraille rbraille sbraille tbraille ubraille  vbraille wbraille xbraille ybraille zbraille'
  - 'abrl bbrl cbrl dbrl ebrl  fbrl gbrl hbrl ibrl jbrl kbrl lbrl  mbrl nbrl obrl pbrl qbrl rbrl sbrl tbrl ubrl  vbrl wbrl xbrl ybrl zbrl'

- - 'abrl bbrl cbrl dbrl ebrl  fbrl gbrl hbrl ibrl jbrl kbrl lbrl  mbrl nbrl obrl pbrl qbrl rbrl sbrl tbrl ubrl  vbrl wbrl xbrl ybrl zbrl'
  - 'a;brl b;brl c;brl d;brl e;brl  f;brl g;brl h;brl i;brl j;brl k;brl l;brl  m;brl n;brl o;brl p;brl q;brl r;brl s;brl t;brl u;brl  v;brl w;brl x;brl y;brl z;brl'
  - xfail: non-contraction of "brl" following letter  has a missing grade 1 indicator due to conflict with contraction of "braille"

- - '(brailled [brailled {brailled ''brailled "brailled -brailled'
  - '"<brld .<brld _<brld,8brld 8brld -brld'

- - '!brailled @brailled #brailled $brailled %brailled ^brailled &brailled *brailled )brailled _brailled =brailled +brailled ]brailled }brailled \\brailled |brailled .brailled ,brailled ;brailled :brailled ?brailled <brailled >braille /brailled'
  - '!brld `abrld _?brld $brld .0brld `5brld `&brld "9brld ">brld .-brld "7brld "6brld .>brld _>brld _*brld _|brld 4brld 1brld ;brld0 3brld ;8brld `<brld `>brld .*brld `9brld _/brld'
  - xfail: contraction following special characters is ignored

- - '(brld [brld {brld ''brld "brld -brld'
  - '"<;brld .<;brld _<;brld,8;brld 8;brld -;brld'

- - '!brld @brld #brld $brld %brld ^brld &brld *brld )brld _brld =brld +brld ]brld }brld \\brld |brld .brld ,brld ;brld :brld ?brld <brld >brld `brld ~brld /brld'
  - '!;brld `a;brld _?;brld `s;brld .0;brld `5;brld `&;brld "9;brld ">;brld .-;brld "7;brld "6;brld .>;brld _>;brld _*;brld _|;brld 4;brld 1;brld ;2brld0 3;brld ;8;brld `<;brld `>;brld .*;brld `9;brld _/;brld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailled xl-([{''"brailled xl/-brailled xl$-brailled'
  - 'xl-brld xl-"<.<{''0brld xl_/-brld xl$-brld'

- - 'xl(brailled xl[brailled xl{brailled xl''brailled xl"brailled xl-=([{''"brailled'
  - 'xl"<brld xl.<brld xl{brld xl''brld xl0brld xl-"7"<.<{''0brld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailled) brailled] brailled} brailled'' brailled" brailled- brailled, brailled. brailled; brailled: brailled? brailled!'
  - 'brld"> brld.> brld_> brld,0brld0 brld- brld1 brld4 brld; brld03 brld8 brld!'

- - 'brailled@ brailled# brailled$ brailled% brailled^ brailled& brailled* brailled( brailled_ brailled= brailled+ brailled[ brailled{ brailled\\ brailled| brailled< brailled> brailled` brailled~ brailled/'
  - 'brld`a brld_? brld`s brld.0 brld`5 brld`& brld"9 brld"< brld.- brld"7 brld"6 brld.< brld_< brld_* brld_| brld`< brld`> brld."9 brld`9 brld/'
  - xfail: contraction followed by special characters is ignored

- - 'brld) brld] brld} brld'' brld" brld- brld, brld. brld; brld: brld? brld!'
  - ';brld"> ;brld.> ;brld_> ;brld,0;brld0 ;brld- ;brld1 ;brld4 ;brld; ;brld03 ;brld8 ;brld!'

- - 'brld@ brld# brld$ brld% brld^ brld& brld* brld( brld_ brld= brld+ brld[ brld{ brld\\ brld| brld< brld> brld` brld~ brld/'
  - ';brld`a ;brld_? ;brld`s ;brld.0 ;brld`5 ;brld`& ;brld"9 ;brld"< ;brld.- ;brld"7 ;brld"6 ;brld.< ;brld_< ;brld_* ;brld_| ;brld`< ;brld`> ;brld."9 ;brld`9 ;brld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailled-xl brailled-([{''"xl brailled-/xl brailled-$xl'
  - 'brld-xl brld-"<.<{''0xl brld-_/xl brld-`sxl'

- - 'brailled(xl brailled[xl brailled{xl brailled''xl brailled"xl brailled=([{''"-xl brailled([{''"-xl brailled/-xl brailled$-xl'
  - 'brld"<xl brld.<xl brld{xl brld''xl brld0xl brld"7"<.<{''0-xl brld"<.<{''0-xl brld/-xl brld`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(brailler [brailler {brailler ''brailler "brailler -brailler'
  - '"<brlr .<brlr _<brlr,8brlr 8brlr -brlr'

- - '!brailler @brailler #brailler $brailler %brailler ^brailler &brailler *brailler )brailler _brailler =brailler +brailler ]brailler }brailler \\brailler |brailler .brailler ,brailler ;brailler :brailler ?brailler <brailler >braille /brailler'
  - '!brlr `abrlr _?brlr `sbrlr .0brlr `5brlr `&brlr "9brlr ">brlr .-brlr "7brlr "6brlr .>brlr }brlr _*brlr _|brlr 4brlr 1brlr ;brlr0 3brlr ;8brlr `<brlr `>brlr .*brlr `9brlr _/brlr'
  - xfail: contraction following special characters is ignored

- - '(brlr [brlr {brlr ''brlr "brlr -brlr'
  - '"<;brlr .<;brlr _<;brlr,8;brlr 8;brlr -;brlr'

- - '!brlr @brlr #brlr $brlr %brlr ^brlr &brlr *brlr )brlr _brlr =brlr +brlr ]brlr }brlr \\brlr |brlr .brlr ,brlr ;brlr :brlr ?brlr <brlr >brlr `brlr ~brlr /brlr'
  - '!;brlr `a;brlr _?;brlr `s;brlr .0;brlr `5;brlr `&;brlr "9;brlr ">;brlr .-;brlr "7;brlr "6;brlr .>;brlr _>;brlr _*;brlr _|;brlr 4;brlr 1;brlr ;2brlr0 3;brlr ;8;brlr `<;brlr `>;brlr .*;brlr `9;brlr _/;brlr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailler xl-([{''"brailler xl/-brailler xl$-brailler'
  - 'xl-brlr xl-"<.<{''0brlr xl_/-brlr xl`s-brlr'

- - 'xl(brailler xl[brailler xl{brailler xl''brailler xl"brailler xl-=([{''"brailler'
  - 'xl"<brlr xl.<brlr xl{brlr xl''brlr xl0brlr xl-"7"<.<{''0brlr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailler) brailler] brailler} brailler'' brailler" brailler- brailler, brailler. brailler; brailler: brailler? brailler!'
  - 'brlr"> brlr.> brlr_> brlr,0brlr0 brlr- brlr1 brlr4 brlr; brlr03 brlr8 brlr!'

- - 'brailler@ brailler# brailler$ brailler% brailler^ brailler& brailler* brailler( brailler_ brailler= brailler+ brailler[ brailler{ brailler\\ brailler| brailler< brailler> brailler` brailler~ brailler/'
  - 'brlr`a brlr_? brlr`s brlr.0 brlr`5 brlr`& brlr"9 brlr"< brlr.- brlr"7 brlr"6 brlr.< brlr_< brlr_* brlr_| brlr`< brlr`> brlr."9 brlr`9 brlr/'
  - xfail: contraction followed by special characters is ignored

- - 'brlr) brlr] brlr} brlr'' brlr" brlr- brlr, brlr. brlr; brlr: brlr? brlr!'
  - ';brlr"> ;brlr.> ;brlr_> ;brlr,0;brlr0 ;brlr- ;brlr1 ;brlr4 ;brlr; ;brlr03 ;brlr8 ;brlr!'

- - 'brlr@ brlr# brlr$ brlr% brlr^ brlr& brlr* brlr( brlr_ brlr= brlr+ brlr[ brlr{ brlr\\ brlr| brlr< brlr> brlr` brlr~ brlr/'
  - ';brlr`a ;brlr_? ;brlr`s ;brlr.0 ;brlr`5 ;brlr`& ;brlr"9 ;brlr"< ;brlr.- ;brlr"7 ;brlr"6 ;brlr.< ;brlr_< ;brlr_* ;brlr_| ;brlr`< ;brlr`> ;brlr."9 ;brlr`9 ;brlr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailler-xl brailler-([{''"xl brailler-/xl brailler-$xl'
  - 'brlr-xl brlr-"<.<{''0xl brlr-_/xl brlr-`sxl'

- - 'brailler(xl brailler[xl brailler{xl brailler''xl brailler"xl brailler=([{''"-xl brailler([{''"-xl brailler/-xl brailler$-xl'
  - 'brlr"<xl brlr.<xl brlr{xl brlr''xl brlr0xl brlr"7"<.<{''0-xl brlr"<.<{''0-xl brlr/-xl brlr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(braillers [braillers {braillers ''braillers "braillers -braillers'
  - '"<brlrs .<brlrs _<brlrs,8brlrs 8brlrs -brlrs'

- - '!braillers @braillers #braillers $braillers %braillers ^braillers &braillers *braillers )braillers _braillers =braillers +braillers ]braillers }braillers \\braillers |braillers .braillers ,braillers ;braillers :braillers ?braillers <braillers >braille `braillers'
  - '!brlrs `abrlrs _?brlrs `sbrlrs .0brlrs `5brlrs `&brlrs "9brlrs ">brlrs .-brlrs "7brlrs "6brlrs .>brlrs _>brlrs _*brlrs _|brlrs 4brlrs 1brlrs ;brlrs0 3brlrs ;8brlrs `<brlrs `>brlrs .*brlrs'
  - xfail: contraction following special characters is ignored

- - '~braillers /brailers'
  - '`9brlrs _/brlrs'
  - xfail: contraction following special characters is ignored

- - 'brlers (brlrs [brlrs {brlrs ''brlrs "brlrs -brlrs !brlrs @brlrs #brlrs $brlrs %brlrs ^brlrs &brlrs *brlrs )brlrs _brlrs =brlrs +brlrs ]brlrs }brlrs \\brlrs |brlrs .brlrs ,brlrs ;brlrs :brlrs ?brlrs <brlrs >brlrs `brlrs ~brlrs /brlrs'
  - 'brlers "<;brlrs .<;brlrs _<;brlrs,8;brlrs 8;brlrs -;brlrs !;brlrs `a;brlrs _?;brlrs `s;brlrs .0;brlrs `5;brlrs `&;brlrs "9;brlrs ">;brlrs .-;brlrs "7;brlrs "6;brlrs .>;brlrs _>;brlrs _*;brlrs _|;brlrs 4;brlrs 1;brlrs ;2brlrs0 3;brlrs ;8;brlrs `<;brlrs `>;brlrs .*;brlrs `9;brlrs _/;brlrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-braillers xl-([{''"braillers xl/-braillers xl$-braillers'
  - 'xl-brlrs xl-"<.<{''0brlrs xl_/-brlrs xl`s-brlrs'

- - 'xl(braillers xl[braillers xl{braillers xl''braillers xl"braillers xl-=([{''"braillers'
  - 'xl"<brlrs xl.<brlrs xl{brlrs xl''brlrs xl0brlrs xl-"7"<.<{''0brlrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'braillers) braillers] braillers} braillers'' braillers" braillers- braillers, braillers. braillers; braillers: braillers? braillers!'
  - 'brlrs"> brlrs.> brlrs_> brlrs,0brlrs0 brlrs- brlrs1 brlrs4 brlrs; brlrs03 brlrs8 brlrs!'

- - 'braillers@ braillers# braillers$ braillers% braillers^ braillers& braillers* braillers( braillers_ braillers= braillers+ braillers[ braillers{ braillers\\ braillers| braillers< braillers> braillers` braillers~ braillers/'
  - 'brlrs`a brlrs_? brlrs`s brlrs.0 brlrs`5 brlrs`& brlrs"9 brlrs"< brlrs.- brlrs"7 brlrs"6 brlrs.< brlrs_< brlrs_* brlrs_| brlrs`< brlrs`> brlrs."9 brlrs`9 brlrs/'
  - xfail: contraction followed by special characters is ignored

- - 'brlrs) brlrs] brlrs} brlrs'' brlrs" brlrs- brlrs, brlrs. brlrs; brlrs: brlrs? brlrs! brlrs@ brlrs# brlrs$ brlrs% brlrs^ brlrs& brlrs* brlrs( brlrs_ brlrs= brlrs+ brlrs[ brlrs{ brlrs\\ brlrs| brlrs< brlrs> brlrs` brlrs~ brlrs/'
  - ';brlrs"> ;brlrs.> ;brlrs_> ;brlrs,0;brlrs0 ;brlrs- ;brlrs1 ;brlrs4 ;brlrs; ;brlrs03 ;brlrs8 ;brlrs! ;brlrs`a ;brlrs_? ;brlrs`s ;brlrs.0 ;brlrs`5 ;brlrs`& ;brlrs"9 ;brlrs"< ;brlrs.- ;brlrs"7 ;brlrs"6 ;brlrs.< ;brlrs_< ;brlrs_* ;brlrs_| ;brlrs`< ;brlrs`> ;brlrs."9 ;brlrs`9 ;brlrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'braillers-xl braillers-([{''"xl braillers-/xl braillers-$xl'
  - 'brlrs-xl brlrs-"<.<{''0xl brlrs-_/xl brlrs-`sxl'

- - 'braillers(xl braillers[xl braillers{xl braillers''xl braillers"xl braillers=([{''"-xl braillers([{''"-xl braillers/-xl braillers$-xl'
  - 'brlrs"<xl brlrs.<xl brlrs{xl brlrs''xl brlrs0xl brlrs"7"<.<{''0-xl brlrs"<.<{''0-xl brlrs/-xl brlrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(brailles [brailles {brailles ''brailles "brailles -brailles'
  - '"<brls .<brls _<brls,8brls 8brls -brls'

- - '!brailles @brailles #brailles $brailles %brailles ^brailles &brailles *brailles )brailles _brailles =brailles +brailles ]brailles }brailles \\brailles |brailles .brailles ,brailles ;brailles :brailles ?brailles <brailles >braille /brailles'
  - '!brls `abrls _?brls `sbrls .0brls `5brls `&brls "9brls ">brls .-brls "7brls "6brls .>brls _>brls _*brls _|brls 4brls 1brls ;brls0 3brls ;8brls `<brls `>brls .*brls `9brls _/brls'
  - xfail: contraction following special characters is ignored

- - 'brls (brls [brls {brls ''brls "brls -brls !brls @brls #brls $brls %brls ^brls &brls *brls )brls _brls =brls +brls ]brls }brls \\brls |brls .brls ,brls ;brls :brls ?brls <brls >brls `brls ~brls /brls'
  - 'brls "<;brls .<;brls _<;brls,8;brls 8;brls -;brls !;brls `a;brls _?;brls `s;brls .0;brls `5;brls `&;brls "9;brls ">;brls .-;brls "7;brls "6;brls .>;brls _>;brls _*;brls _|;brls 4;brls 1;brls ;2brls0 3;brls ;8;brls `<;brls `>;brls .*;brls `9;brls _/;brls'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-brailles xl-([{''"brailles xl/-brailles xl$-brailles'
  - 'xl-brls xl-"<.<{''0brls xl_/-brls xl`s-brls'

- - 'xl(brailles xl[brailles xl{brailles xl''brailles xl"brailles xl-=([{''"brailles'
  - 'xl"<brls xl.<brls xl{brls xl''brls xl0brls xl-"7"<.<{''0brls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'brailles) brailles] brailles} brailles'' brailles" brailles- brailles, brailles. brailles; brailles: brailles? brailles!'
  - 'brls"> brls.> brls_> brls,0brls0 brls- brls1 brls4 brls; brls03 brls8 brls!'

- - 'brailles@ brailles# brailles$ brailles% brailles^ brailles& brailles* brailles( brailles_ brailles= brailles+ brailles[ brailles{ brailles\\ brailles| brailles< brailles> brailles` brailles~ brailles/'
  - 'brls`a brls_? brls`s brls.0 brls`5 brls`& brls"9 brls"< brls.- brls"7 brls"6 brls.< brls_< brls_* brls_| brls`< brls`> brls."9 brls`9 brls/'
  - xfail: contraction followed by special characters is ignored

- - 'brls) brls] brls} brls'' brls" brls- brls, brls. brls; brls: brls? brls!'
  - ';brls"> ;brls.> ;brls_> ;brls,0;brls0 ;brls- ;brls1 ;brls4 ;brls; ;brls03 ;brls8 ;brls!'

- - 'brls@ brls# brls$ brls% brls^ brls& brls* brls( brls_ brls= brls+ brls[ brls{ brls\\ brls| brls< brls> brls` brls~ brls/'
  - ';brls`a ;brls_? ;brls`s ;brls.0 ;brls`5 ;brls`& ;brls"9 ;brls"< ;brls.- ;brls"7 ;brls"6 ;brls.< ;brls_< ;brls_* ;brls_| ;brls`< ;brls`> ;brls."9 ;brls`9 ;brls/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'brailles-xl brailles-([{''"xl brailles-/xl brailles-$xl'
  - 'brls-xl brls-"<.<{''0xl brls-_/xl brls-`sxl'

- - 'brailles(xl brailles[xl brailles{xl brailles''xl brailles"xl brailles=([{''"-xl brailles([{''"-xl brailles/-xl brailles$-xl'
  - 'brls"<xl brls.<xl brls{xl brls''xl brls0xl brls"7"<.<{''0-xl brls"<.<{''0-xl brls/-xl brls`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(but [but {but ''but "but -but'
  - '"<b .<b _<b,8b 8b -b'

- - '!but @but #but $but %but ^but &but *but )but _but =but +but ]but }but \\but |but .but ,but ;but :but ?but <but >but `but ~but /but'
  - '!b `ab _?b `sb .0b `5b `&b "9b ">b .-b "7b "6b .>b _>b _*b _|b 4b 1b ;b0 3b ;8b `<b `>b .*b `9b _/b'
  - xfail: contraction following special characters is ignored

- - '(b [b {b ''b "b -b'
  - '"<;b .<;b _<;b,8;b 8;b -;b'

- - '!b @b #b $b %b ^b &b *b )b _b =b +b ]b }b \\b |b .b ,b ;b :b ?b <b >b `b ~b /b'
  - '!;b `a;b _?;b `s;b .0;b `5;b `&;b "9;b ">;b .-;b "7;b "6;b .>;b _>;b _*;b _|;b 4;b 1;b ;2b0 3;b ;8;b `<;b `>;b .*;b `9;b _/;b'
  - xfail: non-contraction following special characters hbut a missing grade 1 indicator

- - 'xl-but xl-([{''"but xl/-but xl$-but'
  - 'xl-b xl-"<.<{''0b xl_/-b xl`s-b'

- - 'xl(but xl[but xl{but xl''but xl"but xl-=([{''"but'
  - 'xl"<b xl.<b xl{b xl''b xl0b xl-"7"<.<{''0b'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'but) but] but} but'' but" but- but, but. but; but: but? but!'
  - 'b"> b.> b_> b,0b0 b- b1 b4 b; b03 b8 b!'

- - 'but@ but# but$ but% but^ but& but* but( but_ but= but+ but[ but{ but\\ but| but< but> but` but~ but/'
  - 'b`a b_? b`s b.0 b`5 b`& b"9 b"< b.- b"7 b"6 b.< b_< b_* b_| b`< b`> b."9 b`9 b/'
  - xfail: contraction followed by special characters is ignored

- - 'b) b] b} b'' b" b- b, b. b; b: b? b!'
  - ';b"> ;b.> ;b_> ;b,0;b0 ;b- ;b1 ;b4 ;b; ;b03 ;b8 ;b!'

- - 'b@ b# b$ b% b^ b& b* b( b_ b= b+ b[ b{ b\\ b| b< b> b` b~ b/'
  - ';b`a ;b_? ;b`s ;b.0 ;b`5 ;b`& ;b"9 ;b"< ;b.- ;b"7 ;b"6 ;b.< ;b_< ;b_* ;b_| ;b`< ;b`> ;b."9 ;b`9 ;b/'
  - xfail: non-contraction following special characters hbut a missing grade 1 indicator

- - 'but-xl but-([{''"xl but-/xl but-$xl'
  - 'b-xl b-"<.<{''0xl b-_/xl b-`sxl'

- - 'but(xl but[xl but{xl but''xl but"xl but=([{''"-xl but([{''"-xl but/-xl but$-xl'
  - 'b"<xl b.<xl b{xl b''xl b0xl b"7"<.<{''0-xl b"<.<{''0-xl b/-xl b`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(can [can {can ''can "can -can'
  - '"<c .<c _<c,8c 8c -c'

- - '!can @can #can $can %can ^can &can *can )can _can =can +can ]can }can \\can |can .can ,can ;can :can ?can <can >can `can ~can /can'
  - '!c `ac _?c `sc .0c `5c `&c "9c ">c .-c "7c "6c .>c _>c _*c _|c 4c 1c ;c0 3c ;8c `<c `>c .*c `9c _/c'
  - xfail: contraction following special characters is ignored

- - '(c [c {c ''c "c -c'
  - '"<;c .<;c _<;c,8;c 8;c -;c'

- - '!c @c #c $c %c ^c &c *c )c _c =c +c ]c }c \\c |c .c ,c ;c :c ?c <c >c `c ~c /c'
  - '!;c `a;c _?;c `s;c .0;c `5;c `&;c "9;c ">;c .-;c "7;c "6;c .>;c _>;c _*;c _|;c 4;c 1;c ;2c0 3;c ;8;c `<;c `>;c .*;c `9;c _/;c'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-can xl-([{''"can xl/-can xl$-can'
  - 'xl-c xl-"<.<{''0c xl_/-c xl`s-c'

- - 'xl(can xl[can xl{can xl''can xl"can xl-=([{''"can'
  - 'xl"<c xl.<c xl{c xl''c xl0c xl-"7"<.<{''0c'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'can) can] can} can'' can" can- can, can. can; can: can? can!'
  - 'c"> c.> c_> c,0c0 c- c1 c4 c; c03 c8 c!'

- - 'can@ can# can$ can% can^ can& can* can( can_ can= can+ can[ can{ can\\ can| can< can> can` can~ can/'
  - 'c`a c_? c`s c.0 c`5 c`& c"9 c"< c.- c"7 c"6 c.< c_< c_* c_| c`< c`> c."9 c`9 c/'
  - xfail: contraction followed by special characters is ignored

- - 'c) c] c} c'' c" c- c, c. c; c: c? c!'
  - ';c"> ;c.> ;c_> ;c,0;c0 ;c- ;c1 ;c4 ;c; ;c03 ;c8 ;c!'

- - 'c@ c# c$ c% c^ c& c* c( c_ c= c+ c[ c{ c\\ c| c< c> c` c~ c/'
  - ';c`a ;c_? ;c`s ;c.0 ;c`5 ;c`& ;c"9 ;c"< ;c.- ;c"7 ;c"6 ;c.< ;c_< ;c_* ;c_| ;c`< ;c`> ;c."9 ;c`9 ;c/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'can-xl can-([{''"xl can-/xl can-$xl'
  - 'c-xl c-"<.<{''0xl c-_/xl c-`sxl'

- - 'can(xl can[xl can{xl can''xl can"xl can=([{''"-xl can([{''"-xl can/-xl can$-xl'
  - 'c"<xl c.<xl c{xl c''xl c0xl c"7"<.<{''0-xl c"<.<{''0-xl c/-xl c`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(child [child {child ''child "child -child'
  - '"<* .<* _<*,8* 8* -*'

- - '!child @child #child $child %child ^child &child *child )child _child =child +child ]child }child \\child |child .child ,child ;child :child ?child <child >child `child ~child /child'
  - '!* `a* _?* `s* .0* `5* `&* "9* ">* .-* "7* "6* .>* _>* _** _|* 4* 1* ;*0 3* ;8* `<* `>* .** `9* _/*'
  - xfail: contraction following special characters is ignored

- - '(ch [ch {ch ''ch "ch -ch'
  - '"<ch .<ch _<ch,8ch 8ch -ch'

- - '!ch @ch #ch $ch %ch ^ch &ch *ch )ch _ch =ch +ch ]ch }ch \\ch |ch .ch ,ch ;ch :ch ?ch <ch >ch `ch ~ch /ch'
  - '!ch `ach _?ch `sch .0ch `5ch `&ch *ch ">ch .-ch "7ch "6ch .>ch _>ch _*ch _|ch 4ch 1ch ;ch0 3ch ;8ch `<ch `>ch .*ch `9ch _/ch'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-child xl-([{''"child xl/-child xl$-child'
  - 'xl-* xl-"<.<{''0* xl_/-* xl`s-*'

- - 'xl(child xl[child xl{child xl''child xl"child xl-=([{''"child'
  - 'xl"<* xl.<* xl{* xl''* xl0* xl-"7"<.<{''0*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'child) child] child} child'' child" child- child, child. child; child: child? child!'
  - '*"> *.> *_> *,0*0 *- *1 *4 *; *03 *8 *!'

- - 'child@ child# child$ child% child^ child& child* child( child_ child= child+ child[ child{ child\\ child| child< child> child` child~ child/'
  - '*`a *_? *`s *.0 *`5 *`& *"9 *"< *.- *"7 *"6 *.< *_< *_* *_| *`< *`> *.* *`9 */'
  - xfail: contraction followed by special characters is ignored

- - 'ch) ch] ch} ch'' ch" ch- ch, ch. ch; ch: ch? ch!'
  - 'ch"> ch.> ch_> ch,0ch0 ch- ch1 ch4 ch; ch03 ch8 ch!'

- - 'ch@ ch# ch$ ch% ch^ ch& ch* ch( ch_ ch= ch+ ch[ ch{ ch\\ ch| ch< ch> ch` ch~ ch/'
  - 'ch`a ch_? ch`s ch.0 ch`5 ch`& ch* ch"< ch.- ch"7 ch"6 ch.< ch_< ch_* ch_| ch`< ch`> ch.* ch`9 ch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'child-xl child-([{''"xl child-/xl child-$xl'
  - '*-xl *-"<.<{''0xl *-_/xl *-`sxl'

- - 'child(xl child[xl child{xl child''xl child"xl child=([{''"-xl child([{''"-xl child/-xl child$-xl'
  - '*"<xl *.<xl *{xl *''xl *0xl *"7"<.<{''0-xl *"<.<{''0-xl */-xl *`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(children [children {children ''children "children -children'
  - '"<*n .<*n _<*n,8*n 8*n -*n'

- - '!children @children #children $children %children ^children &children *children )children _children =children +children ]children }children \\children |children .children ,children ;children :children ?children <children >children `children ~children /children'
  - '!*n `a*n _?*n `s*n .0*n `5*n `&*n "9*n ">*n .-*n "7*n "6*n .>*n _>*n _**n _|*n 4*n 1*n chn0 3*n ;8*n `<*n `>*n ."9*n `9*n _/*n'
  - xfail: contraction following special characters is ignored

- - '(chn [chn {chn ''chn "chn -chn'
  - '"<chn .<chn _<chn,8chn 8chn -chn'

- - '!chn @chn #chn $chn %chn ^chn &chn *chn )chn _chn =chn +chn ]chn }chn \\chn |chn .chn ,chn ;chn :chn ?chn <chn >chn `chn ~chn /chn'
  - '!chn `achn _?chn `schn .0chn `5chn `&chn "9chn ">chn .-chn "7chn "6chn .>chn _>chn _*chn _|chn 4chn 1chn ;chn0 3chn ;8chn `<chn `>chn .*chn `9chn _/chn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-children xl-([{''"children xl/-children xl$-children'
  - 'xl-*n xl-"<.<{''0*n xl_/-*n xl`s-*n'

- - 'xl(children xl[children xl{children xl''children xl"children xl-=([{''"children'
  - 'xl"<*n xl.<*n xl{*n xl''*n xl0*n xl-"7"<.<{''0*n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'children) children] children} children'' children" children- children, children. children; children: children? children!'
  - '*n"> *n.> *n_> *n,0*n0 *n- *n1 *n4 *n; *n03 *n8 *n!'

- - 'children@ children# children$ children% children^ children& children* children( children_ children= children+ children[ children{ children\\ children| children< children> children` children~ children/'
  - '*n`a *n_? *n`s *n.0 *n`5 *n`& *n"9 *n"< *n.- *n"7 *n"6 *n.< *n_< *n_* *n_| *n`< *n`> *n.* *n`9 *n/'
  - xfail: contraction followed by special characters is ignored

- - 'chn) chn] chn} chn'' chn" chn- chn, chn. chn; chn: chn? chn!'
  - 'chn"> chn.> chn_> chn,0chn0 chn- chn1 chn4 chn; chn03 chn8 chn!'

- - 'chn@ chn# chn$ chn% chn^ chn& chn* chn( chn_ chn= chn+ chn[ chn{ chn\\ chn| chn< chn> chn` chn~ chn/'
  - 'chn`a chn_? chn`s chn.0 chn`5 chn`& chn* chn"< chn.- chn"7 chn"6 chn.< chn_< chn_* chn_| chn`< chn`> chn.* chn`9 chn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'children-xl children-([{''"xl children-/xl children-$xl'
  - '*n-xl *n-"<.<{''0xl *n-_/xl *n-`sxl'

- - 'children(xl children[xl children{xl children''xl children"xl children=([{''"-xl children([{''"-xl children/-xl children$-xl'
  - '*n"<xl *n.<xl *n{xl *n''xl *n0xl *n"7"<.<{''0-xl *n"<.<{''0-xl *n/-xl *n`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'childrenb childrenc childrend childrenf childreng childrenh childrenj childrenk childrenl childrenm childrenn childrenp childrenq childrenr childrens childrent childrenv childrenw childrenx childrenz'
  - '*nb *nc *nd *nf *ng *nh *nj *nk *nl *nm *nn *np *nq *nr *ns *nt *nv *nw *nx *nz'

- - 'chnb chnc chnd chnf chng chnh chnj chnk chnl chnm chnn chnp chnq chnr chns chnt chnv chnw chnx chnz'
  - 'chnb chnc chnd chnf chng chnh chnj chnk chnl chnm chnn chnp chnq chnr chns chnt chnv chnw chnx chnz'
  - xfail: non-contraction of "chn" followed by non-vowel letter has a missing grade 1 indicator due to conflict with contraction of "children"

- - 'achildren bchildren cchildren dchildren echildren  fchildren gchildren hchildren ichildren jchildren kchildren lchildren  mchildren nchildren ochildren p*n qchildren rchildren schildren tchildren uchildren  vchildren wchildren xchildren ychildren zchildren'
  - 'a*n b*n c*n d*n e*n  f*n g*n h*n i*n j*n k*n l*n  m*n n*n o*n p*n q*n r*n s*n t*n u*n  v*n w*n x*n y*n z*n'

- - 'achn bchn cchn dchn echn  fchn gchn hchn ichn jchn kchn lchn  mchn nchn ochn pchn qchn rchn schn tchn uchn  vchn wchn xchn ychn zchn'
  - 'achn bchn cchn dchn echn  fchn gchn hchn ichn jchn kchn lchn  mchn nchn ochn pchn qchn rchn schn tchn uchn  vchn wchn xchn ychn zchn'
  - xfail: non-contraction of chn" following letter has a missing grade 1 indicator due to conflict with contraction of "children"

- - '(conceive [conceive {conceive ''conceive "conceive -conceive'
  - '"<3cv .<3cv _<3cv,83cv 83cv -3cv'

- - '!conceive @conceive #conceive $conceive %conceive ^conceive &conceive *conceive )conceive _conceive =conceive +conceive ]conceive }conceive \\conceive |conceive .conceive ,conceive ;conceive :conceive ?conceive <conceive >conceive `conceive ~conceive /conceive'
  - '!3cv `a3cv _?3cv `s3cv .03cv `53cv `&3cv "93cv ">3cv .-3cv "73cv "63cv .>3cv _>3cv _*3cv _|3cv 43cv 13cv ;3cv0 33cv ;83cv `<3cv `>3cv .*3cv `93cv _/3cv'
  - xfail: contraction following special characters is ignored

- - 'xl-conceive xl-([{''"conceive xl/-conceive xl$-conceive'
  - 'xl-3cv xl-"<.<{''03cv xl_/-3cv xl`s-3cv'

- - 'xl(conceive xl[conceive xl{conceive xl''conceive xl"conceive xl-=([{''"conceive'
  - 'xl"<3cv xl.<3cv xl{3cv xl''3cv xl03cv xl-"7"<.<{''03cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceive) conceive] conceive} conceive'' conceive" conceive- conceive, conceive. conceive; conceive: conceive? conceive!'
  - '3cv"> 3cv.> 3cv_> 3cv,03cv0 3cv- 3cv1 3cv4 3cv; 3cv03 3cv8 3cv!'

- - 'conceive@ conceive# conceive$ conceive% conceive^ conceive& conceive* conceive( conceive_ conceive= conceive+ conceive[ conceive{ conceive\\ conceive| conceive< conceive> conceive` conceive~ conceive/'
  - '3cv`a 3cv_? 3cv`s 3cv.0 3cv`5 3cv`& 3cv"9 3cv"< 3cv.- 3cv"7 3cv"6 3cv.< 3cv_< 3cv_* 3cv_| 3cv`< 3cv`> 3cv."9 3cv`9 3cv/'
  - xfail: contraction followed by special characters is ignored

- - 'concv@ concv# concv$ concv% concv^ concv& concv* concv( concv_ concv= concv+ concv[ concv{ concv\\ concv| concv< concv> concv` concv~ concv/'
  - 'concv`a concv_? concv`s concv.0 concv`5 concv`& concv"9 concv"< concv.- concv"7 concv"6 concv.< concv_< concv_* concv_| concv`< concv`> concv."9 concv`9 concv/'
  - xfail: non-contraction of "concv" conflicts with contraction of "conceive"

- - 'conceive-xl conceive-([{''"xl conceive-/xl conceive-$xl'
  - '3cv-xl 3cv-"<.<{''0xl 3cv-_/xl 3cv-`sxl'

- - 'conceive(xl conceive[xl conceive{xl conceive''xl conceive"xl conceive=([{''"-xl conceive([{''"-xl conceive/-xl conceive$-xl'
  - '3cv"<xl 3cv.<xl 3cv{xl 3cv''xl 3cv0xl 3cv"7"<.<{''0-xl 3cv"<.<{''0-xl 3cv/-xl 3cv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceived [conceived {conceived ''conceived "conceived -conceived'
  - '"<3cvd .<3cvd _<3cvd,83cvd 83cvd -3cvd'

- - '!conceived @conceived #conceived $conceived %conceived ^conceived &conceived *conceived )conceived _conceived =conceived +conceived ]conceived }conceived \\conceived |conceived .conceived ,conceived ;conceived :conceived ?conceived <conceived >conceived'
  - '!3cvd `a3cvd _?3cvd $3cvd .03cvd `53cvd `&3cvd "93cvd ">3cvd .-3cvd "73cvd "63cvd .>3cvd _>3cvd _*3cvd _|3cvd 43cvd 13cvd ;3cvd0 33cvd ;83cvd `<3cvd `>3cvd'
  - xfail: contraction following special characters is ignored

- - '`conceived ~conceived /conceived'
  - '.*3cvd `93cvd _/3cv'
  - xfail: contraction following special characters is ignored

- - '!concvd @concvd #concvd $concvd %concvd ^concvd &concvd *concvd )concvd _concvd =concvd +concvd ]concvd erconcvd \\concvd |concvd .concvd ,concvd ;concvd :concvd ?concvd <concvd >concvd `concvd ~concvd /concvd'
  - '!concvd `aconcvd _?concvd `sconcvd .0concvd `5concvd `&concvd "9concvd ">concvd .-concvd "7concvd "6concvd .>concvd erconcvd _*concvd _|concvd 4concvd 1concvd ;concvd0 3concvd ;8concvd `<concvd `>concvd .*concvd `9concvd _/concvd'

- - 'concvd  (concvd [concvd {concvd ''concvd "concvd -concvd'
  - 'concvd  "<concvd .<concvd _<concvd,8concvd 8concvd -concvd'
  - xfail: non-contraction of "concvd" conflicts witcv contraction of "conceived"

- - 'xl-conceived xl-([{''"conceived xl/-conceived xl$-conceived'
  - 'xl-3cvd xl-"<.<{''03cvd xl_/-3cvd xl$-3cvd'

- - 'xl(conceived xl[conceived xl{conceived xl''conceived xl"conceived xl-=([{''"conceived'
  - 'xl"<3cvd xl.<3cvd xl{3cvd xl''3cvd xl03cvd xl-"7"<.<{''03cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceived) conceived] conceived} conceived'' conceived" conceived- conceived, conceived. conceived; conceived: conceived? conceived!'
  - '3cvd"> 3cvd.> 3cvd_> 3cvd,03cvd0 3cvd- 3cvd1 3cvd4 3cvd; 3cvd03 3cvd8 3cvd!'

- - 'conceived@ conceived# conceived$ conceived% conceived^ conceived& conceived* conceived( conceived_ conceived= conceived+ conceived[ conceived{ conceived\\ conceived| conceived< conceived> conceived` conceived~ conceived/'
  - '3cvd`a 3cvd_? 3cvd`s 3cvd.0 3cvd`5 3cvd`& 3cvd"9 3cvd"< 3cvd.- 3cvd"7 3cvd"6 3cvd.< 3cvd_< 3cvd_* 3cvd_| 3cvd`< 3cvd`> 3cvd."9 3cvd`9 3cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'concvd) concvd] concvd} concvd'' concvd" concvd- concvd, concvd. concvd; concvd: concvd? concvd! concvd@ concvd# concvd$ concvd% concvd^ concvd& concvd* concvd( concvd_ concvd= concvd+ concvd[ concvd{ concvd\\ concvd| concvd< concvd> concvd` concvd~ concvd/'
  - 'concvd"> concvd.> concvd_> concvd,0concvd0 concvd- concvd1 concvd4 concvd; concvd03 concvd8 concvd! concvd`a concvd_? concvd`s concvd.0 concvd`5 concvd`& concvd"9 concvd"< concvd.- concvd"7 concvd"6 concvd.< concvd_< concvd_* concvd_| concvd`< concvd`> concvd."9 concvd`9 concvd/'
  - xfail: non-contraction of "concvd" conflicts with contraction of "conceived"

- - 'conceived-xl conceived-([{''"xl conceived-/xl conceived-$xl'
  - '3cvd-xl 3cvd-"<.<{''0xl 3cvd-_/xl 3cvd-`sxl'

- - 'conceived(xl conceived[xl conceived{xl conceived''xl conceived"xl conceived=([{''"-xl conceived([{''"-xl conceived/-xl conceived$-xl'
  - '3cvd"<xl 3cvd.<xl 3cvd{xl 3cvd''xl 3cvd0xl 3cvd"7"<.<{''0-xl 3cvd"<.<{''0-xl 3cvd/-xl 3cvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceiving [conceiving {conceiving ''conceiving "conceiving -conceiving'
  - '"<3cvg .<3cvg _<3cvg,83cvg 83cvg -3cvg'

- - '!conceiving @conceiving #conceiving $conceiving %conceiving ^conceiving &conceiving *conceiving )conceiving _conceiving =conceiving +conceiving ]conceiving }conceiving \\conceiving |conceiving .conceiving ,conceiving ;conceiving :conceiving ?conceiving'
  - '!3cvg `a3cvg _?3cvg `s3cvg .03cvg `53cvg `&3cvg "93cvg ">3cvg .-3cvg "73cvg +3cvg .>3cvg _>3cvg _*3cvg _|3cvg 43cvg 13cvg ;3cvg0 33cvg ;83cvg'
  - xfail: contraction following special characters is ignored

- - '<conceiving >conceiving `conceiving ~conceiving /conceiving'
  - '`<3cvg `>3cvg .*3cvg `93cvg _/3cvg'
  - xfail: contraction following special characters is ignored

- - 'xl-conceiving xl-([{''"conceiving xl/-conceiving xl$-conceiving'
  - 'xl-3cvg xl-"<.<{''03cvg xl_/-3cvg xl`s-3cvg'

- - 'xl(conceiving xl[conceiving xl{conceiving xl''conceiving xl"conceiving xl-=([{''"conceiving'
  - 'xl"<3cvg xl.<3cvg xl{3cvg xl''3cvg xl03cvg xl-"7"<.<{''03cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceiving) conceiving] conceiving} conceiving'' conceiving" conceiving- conceiving, conceiving. conceiving; conceiving: conceiving? conceiving!'
  - '3cvg"> 3cvg.> 3cvg_> 3cvg,03cvg0 3cvg- 3cvg1 3cvg4 3cvg; 3cvg03 3cvg8 3cvg!'

- - 'conceiving@ conceiving# conceiving$ conceiving% conceiving^ conceiving& conceiving* conceiving( conceiving_ conceiving= conceiving+ conceiving[ conceiving{ conceiving\\ conceiving| conceiving< conceiving> conceiving` conceiving~ conceiving/'
  - '3cvg`a 3cvg_? 3cvg`s 3cvg.0 3cvg`5 3cvg`& 3cvg"9 3cvg"< 3cvg.- 3cvg"7 3cvg+ 3cvg.< 3cvg_< 3cvg_* 3cvg_| 3cvg`< 3cvg`> 3cvg."9 3cvg`9 3cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'concvg) concvg] concvg} concvg'' concvg" concvg- concvg, concvg. concvg; concvg: concvg? concvg!'
  - 'concvg"> concvg.> concvg_> concvg,0concvg0 concvg- concvg1 concvg4 concvg; concvg03 concvg8 concvg!'

- - 'concvg@ concvg# concvg$ concvg% concvg^ concvg& concvg* concvg( concvg_ concvg= concvg+ concvg[ concvg{ concvg\\ concvg| concvg< concvg> concvg` concvg~ concvg/'
  - 'concvg`a concvg_? concvg`s concvg.0 concvg`5 concvg`& concvg"9 concvg"< concvg.- concvg"7 concvg"6 concvg.< concvg_< concvg_* concvg_| concvg`< concvg`> concvg."9 concvg`9 concvg/'
  - xfail: non-contraction of "concvg" conflicts with contraction of "conceiving"

- - 'conceiving-xl conceiving-([{''"xl conceiving-/xl conceiving-$xl'
  - '3cvg-xl 3cvg-"<.<{''0xl 3cvg-_/xl 3cvg-`sxl'

- - 'conceiving(xl conceiving[xl conceiving{xl conceiving''xl conceiving"xl conceiving=([{''"-xl conceiving([{''"-xl conceiving/-xl conceiving$-xl'
  - '3cvg"<xl 3cvg.<xl 3cvg{xl 3cvg''xl 3cvg0xl 3cvg"7"<.<{''0-xl 3cvg"<.<{''0-xl 3cvg/-xl 3cvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceiver [conceiver {conceiver ''conceiver "conceiver -conceiver'
  - '"<3cvr .<3cvr _<3cvr,83cvr 83cvr -3cvr'

- - '!conceiver @conceiver #conceiver $conceiver %conceiver ^conceiver &conceiver *conceiver )conceiver _conceiver =conceiver +conceiver ]conceiver }conceiver \\conceiver |conceiver .conceiver ,conceiver ;conceiver :conceiver ?conceiver <conceiver >conceiver'
  - '!3cvr `a3cvr _?3cvr `s3cvr .03cvr `53cvr `&3cvr "93cvr ">3cvr .-3cvr "73cvr "63cvr .>3cvr }3cvr _*3cvr _|3cvr 43cvr 13cvr ;3cvr0 33cvr ;83cvr `<3cvr `>3cvr'
  - xfail: contraction following special characters is ignored

- - '`conceiver ~conceiver /conceiver'
  - '.*3cvr `93cvr _/3cv'
  - xfail: contraction following special characters is ignored

- - '!concvr @concvr #concvr $concvr %concvr ^concvr &concvr *concvr )concvr _concvr =concvr +concvr ]concvr erconcvr \\concvr |concvr .concvr ,concvr ;concvr :concvr ?concvr <concvr >concvr `concvr ~concvr /concvr'
  - '!concvr `aconcvr _?concvr `sconcvr .0concvr `5concvr `&concvr "9concvr ">concvr .-concvr "7concvr "6concvr .>concvr erconcvr _*concvr _|concvr 4concvr 1concvr ;concvr0 3concvr ;8concvr `<concvr `>concvr .*concvr `9concvr _/concvr'

- - 'concvr  (concvr [concvr {concvr ''concvr "concvr -concvr'
  - 'concvr  "<concvr .<concvr _<concvr,8concvr 8concvr -concvr'
  - xfail: non-contraction of "concvr" conflicts witcv contraction of "conceiver"

- - 'xl-conceiver xl-([{''"conceiver xl/-conceiver xl$-conceiver'
  - 'xl-3cvr xl-"<.<{''03cvr xl_/-3cvr xl`s-3cvr'

- - 'xl(conceiver xl[conceiver xl{conceiver xl''conceiver xl"conceiver xl-=([{''"conceiver'
  - 'xl"<3cvr xl.<3cvr xl{3cvr xl''3cvr xl03cvr xl-"7"<.<{''03cvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceiver) conceiver] conceiver} conceiver'' conceiver" conceiver- conceiver, conceiver. conceiver; conceiver: conceiver? conceiver!'
  - '3cvr"> 3cvr.> 3cvr_> 3cvr,03cvr0 3cvr- 3cvr1 3cvr4 3cvr; 3cvr03 3cvr8 3cvr!'

- - 'conceiver@ conceiver# conceiver$ conceiver% conceiver^ conceiver& conceiver* conceiver( conceiver_ conceiver= conceiver+ conceiver[ conceiver{ conceiver\\ conceiver| conceiver< conceiver> conceiver` conceiver~ conceiver/'
  - '3cvr`a 3cvr_? 3cvr`s 3cvr.0 3cvr`5 3cvr`& 3cvr"9 3cvr"< 3cvr.- 3cvr"7 3cvr"6 3cvr.< 3cvr_< 3cvr_* 3cvr_| 3cvr`< 3cvr`> 3cvr."9 3cvr`9 3cvr/'
  - xfail: contraction followed by special characters is ignored

- - 'concvr) concvr] concvr} concvr'' concvr" concvr- concvr, concvr. concvr; concvr: concvr? concvr! concvr@ concvr# concvr$ concvr% concvr^ concvr& concvr* concvr( concvr_ concvr= concvr+ concvr[ concvr{ concvr\\ concvr| concvr< concvr> concvr` concvr~ concvr/'
  - 'concvr"> concvr.> concvr_> concvr,0concvr0 concvr- concvr1 concvr4 concvr; concvr03 concvr8 concvr! concvr`a concvr_? concvr`s concvr.0 concvr`5 concvr`& concvr"9 concvr"< concvr.- concvr"7 concvr"6 concvr.< concvr_< concvr_* concvr_| concvr`< concvr`> concvr."9 concvr`9 concvr/'
  - xfail: non-contraction of "concvr" conflicts with contraction of "conceiver"

- - 'conceiver-xl conceiver-([{''"xl conceiver-/xl conceiver-$xl'
  - '3cvr-xl 3cvr-"<.<{''0xl 3cvr-_/xl 3cvr-`sxl'

- - 'conceiver(xl conceiver[xl conceiver{xl conceiver''xl conceiver"xl conceiver=([{''"-xl conceiver([{''"-xl conceiver/-xl conceiver$-xl'
  - '3cvr"<xl 3cvr.<xl 3cvr{xl 3cvr''xl 3cvr0xl 3cvr"7"<.<{''0-xl 3cvr"<.<{''0-xl 3cvr/-xl 3cvr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceivers [conceivers {conceivers ''conceivers "conceivers -conceivers'
  - '"<3cvrs .<3cvrs _<3cvrs,83cvrs 83cvrs -3cvrs'

- - '!conceivers @conceivers #conceivers $conceivers %conceivers ^conceivers &conceivers *conceivers )conceivers _conceivers =conceivers +conceivers ]conceivers }conceivers \\conceivers |conceivers .conceivers ,conceivers ;conceivers :conceivers ?conceivers'
  - '!3cvrs `a3cvrs _?3cvrs `s3cvrs .03cvrs `53cvrs `&3cvrs "93cvrs ">3cvrs .-3cvrs "73cvrs "63cvrs .>3cvrs _>3cvrs _*3cvrs _|3cvrs 43cvrs 13cvrs ;3cvrs0 33cvrs ;83cvrs'
  - xfail: contraction following special characters is ignored

- - '<conceivers >conceivers `conceivers ~conceivers /conceivers'
  - '`<3cvrs `>3cvrs .*3cvrs `93cvrs _/3cv'
  - xfail: contraction following special characters is ignored

- - '!concvrs @concvrs #concvrs $concvrs %concvrs ^concvrs &concvrs *concvrs )concvrs _concvrs =concvrs +concvrs ]concvrs erconcvrs \\concvrs |concvrs .concvrs ,concvrs ;concvrs :concvrs ?concvrs <concvrs >concvrs `concvrs ~concvrs /concvrs'
  - '!concvrs `aconcvrs _?concvrs `sconcvrs .0concvrs `5concvrs `&concvrs "9concvrs ">concvrs .-concvrs "7concvrs "6concvrs .>concvrs erconcvrs _*concvrs _|concvrs 4concvrs 1concvrs ;concvrs0 3concvrs ;8concvrs `<concvrs `>concvrs .*concvrs `9concvrs _/concvrs'

- - 'concvrs  (concvrs [concvrs {concvrs ''concvrs "concvrs -concvrs'
  - 'concvrs  "<concvrs .<concvrs _<concvrs,8concvrs 8concvrs -concvrs'
  - xfail: non-contraction of "concvrs" conflicts witcv contraction of "conceivers"

- - 'xl-conceivers xl-([{''"conceivers xl/-conceivers xl$-conceivers'
  - 'xl-3cvrs xl-"<.<{''03cvrs xl_/-3cvrs xl`s-3cvrs'

- - 'xl(conceivers xl[conceivers xl{conceivers xl''conceivers xl"conceivers xl-=([{''"conceivers'
  - 'xl"<3cvrs xl.<3cvrs xl{3cvrs xl''3cvrs xl03cvrs xl-"7"<.<{''03cvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceivers) conceivers] conceivers} conceivers'' conceivers" conceivers- conceivers, conceivers. conceivers; conceivers: conceivers? conceivers!'
  - '3cvrs"> 3cvrs.> 3cvrs_> 3cvrs,03cvrs0 3cvrs- 3cvrs1 3cvrs4 3cvrs; 3cvrs03 3cvrs8 3cvrs!'

- - 'conceivers@ conceivers# conceivers$ conceivers% conceivers^ conceivers& conceivers* conceivers( conceivers_ conceivers= conceivers+ conceivers[ conceivers{ conceivers\\ conceivers| conceivers< conceivers> conceivers` conceivers~ conceivers/'
  - '3cvrs`a 3cvrs_? 3cvrs`s 3cvrs.0 3cvrs`5 3cvrs`& 3cvrs"9 3cvrs"< 3cvrs.- 3cvrs"7 3cvrs"6 3cvrs.< 3cvrs_< 3cvrs_* 3cvrs_| 3cvrs`< 3cvrs`> 3cvrs."9 3cvrs`9 3cvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'concvrs) concvrs] concvrs} concvrs'' concvrs" concvrs- concvrs, concvrs. concvrs; concvrs: concvrs? concvrs! concvrs@ concvrs# concvrs$ concvrs% concvrs^ concvrs& concvrs* concvrs( concvrs_ concvrs= concvrs+ concvrs[ concvrs{ concvrs\\ concvrs| concvrs< concvrs>'
  - 'concvrs"> concvrs.> concvrs_> concvrs,0concvrs0 concvrs- concvrs1 concvrs4 concvrs; concvrs03 concvrs8 concvrs! concvrs`a concvrs_? concvrs`s concvrs.0 concvrs`5 concvrs`& concvrs"9 concvrs"< concvrs.- concvrs"7 concvrs"6 concvrs.< concvrs_< concvrs_* concvrs_| concvrs`< concvrs>'
  - xfail: non-contraction of "concvrs" conflicts with contraction of "conceivers"

- - 'concvrs` concvrs~ concvrs/'
  - 'concvrs."9 concvrs`9 concvrs/'
  - xfail: non-contraction of "concvrs" conflicts with contraction of "conceivers"

- - 'conceivers-xl conceivers-([{''"xl conceivers-/xl conceivers-$xl'
  - '3cvrs-xl 3cvrs-"<.<{''0xl 3cvrs-_/xl 3cvrs-`sxl'

- - 'conceivers(xl conceivers[xl conceivers{xl conceivers''xl conceivers"xl conceivers=([{''"-xl conceivers([{''"-xl conceivers/-xl conceivers$-xl'
  - '3cvrs"<xl 3cvrs.<xl 3cvrs{xl 3cvrs''xl 3cvrs0xl 3cvrs"7"<.<{''0-xl 3cvrs"<.<{''0-xl 3cvrs/-xl 3cvrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conceives [conceives {conceives ''conceives "conceives -conceives'
  - '"<3cvs .<3cvs _<3cvs,83cvs 83cvs -3cvs'

- - '!conceives @conceives #conceives $conceives %conceives ^conceives &conceives *conceives )conceives _conceives =conceives +conceives ]conceives }conceives \\conceives |conceives .conceives ,conceives ;conceives :conceives ?conceives <conceives >conceives'
  - '!3cvs `a3cvs _?3cvs `s3cvs .03cvs `53cvs `&3cvs "93cvs ">3cvs .-3cvs "73cvs "63cvs .>3cvs _>3cvs _*3cvs _|3cvs 43cvs 13cvs ;3cvs0 33cvs ;83cvs `<3cvs `>3cvs'
  - xfail: contraction following special characters is ignored

- - '`conceives ~conceives /conceives'
  - '.*3cvs `93cvs _/3cv'
  - xfail: contraction following special characters is ignored

- - '!concvs @concvs #concvs $concvs %concvs ^concvs &concvs *concvs )concvs _concvs =concvs +concvs ]concvs erconcvs \\concvs |concvs .concvs ,concvs ;concvs :concvs ?concvs <concvs >concvs `concvs ~concvs /concvs'
  - '!concvs `aconcvs _?concvs `sconcvs .0concvs `5concvs `&concvs "9concvs ">concvs .-concvs "7concvs "6concvs .>concvs erconcvs _*concvs _|concvs 4concvs 1concvs ;concvs0 3concvs ;8concvs `<concvs `>concvs .*concvs `9concvs _/concvs'

- - 'concvs  (concvs [concvs {concvs ''concvs "concvs -concvs'
  - 'concvs  "<concvs .<concvs _<concvs,8concvs 8concvs -concvs'
  - xfail: non-contraction of "concvs" conflicts witcv contraction of "conceives"

- - 'xl-conceives xl-([{''"conceives xl/-conceives xl$-conceives'
  - 'xl-3cvs xl-"<.<{''03cvs xl_/-3cvs xl`s-3cvs'

- - 'xl(conceives xl[conceives xl{conceives xl''conceives xl"conceives xl-=([{''"conceives'
  - 'xl"<3cvs xl.<3cvs xl{3cvs xl''3cvs xl03cvs xl-"7"<.<{''03cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conceives) conceives] conceives} conceives'' conceives" conceives- conceives, conceives. conceives; conceives: conceives? conceives!'
  - '3cvs"> 3cvs.> 3cvs_> 3cvs,03cvs0 3cvs- 3cvs1 3cvs4 3cvs; 3cvs03 3cvs8 3cvs!'

- - 'conceives@ conceives# conceives$ conceives% conceives^ conceives& conceives* conceives( conceives_ conceives= conceives+ conceives[ conceives{ conceives\\ conceives| conceives< conceives> conceives` conceives~ conceives/'
  - '3cvs`a 3cvs_? 3cvs`s 3cvs.0 3cvs`5 3cvs`& 3cvs"9 3cvs"< 3cvs.- 3cvs"7 3cvs"6 3cvs.< 3cvs_< 3cvs_* 3cvs_| 3cvs`< 3cvs`> 3cvs."9 3cvs`9 3cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'concvs) concvs] concvs} concvs'' concvs" concvs- concvs, concvs. concvs; concvs: concvs? concvs! concvs@ concvs# concvs$ concvs% concvs^ concvs& concvs* concvs( concvs_ concvs= concvs+ concvs[ concvs{ concvs\\ concvs| concvs< concvs> concvs` concvs~ concvs/'
  - 'concvs"> concvs.> concvs_> concvs,0concvs0 concvs- concvs1 concvs4 concvs; concvs03 concvs8 concvs! concvs`a concvs_? concvs`s concvs.0 concvs`5 concvs`& concvs"9 concvs"< concvs.- concvs"7 concvs"6 concvs.< concvs_< concvs_* concvs_| concvs`< concvs`> concvs."9 concvs`9 concvs/'
  - xfail: non-contraction of "concvs" conflicts with contraction of "conceives"

- - 'conceives-xl conceives-([{''"xl conceives-/xl conceives-$xl'
  - '3cvs-xl 3cvs-"<.<{''0xl 3cvs-_/xl 3cvs-`sxl'

- - 'conceives(xl conceives[xl conceives{xl conceives''xl conceives"xl conceives=([{''"-xl conceives([{''"-xl conceives/-xl conceives$-xl'
  - '3cvs"<xl 3cvs.<xl 3cvs{xl 3cvs''xl 3cvs0xl 3cvs"7"<.<{''0-xl 3cvs"<.<{''0-xl 3cvs/-xl 3cvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(conk [conk {conk ''conk "conk -conk !conk .conk ,conk ;conk :conk ?conk *conk =conk +conk @conk #conk $conk %conk ^conk &conk )conk _conk ]conk }conk \\conk |conk <conk >conk `conk ~conk /conk'
  - '"<3k .<3k _<3k,8conk 8conk -conk !conk 4conk 1conk ;conk0 3conk ;8conk "93k "73k "63k `a3k _?3k `s3k .03k `53k `&3k ">3k .-3k .>3k _>3k _*3k _|3k `<3k `>3k ;83k .*3k `93k _/3k'
  - xfail: contraction following special characters and followed by "k"  is ignored

- - 'xl(conk xl[conk xl{conk'
  - 'xl"<3k xl.<3k xl{3k'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'conk) conk] conk} conk'' conk" conk- conk, conk. conk? conk! conk; conk: conk@ conk# conk$ conk% conk^ conk& conk* conk( conk_ conk= conk+ conk[ conk{ conk\\ conk| conk< conk> conk` conk~ conk/'
  - '3k"> 3k.> 3k_> conk,0conk0 conk- conk1 conk4 conk8 conk! conk; conk03 3k`a 3k_? 3k`s 3k.0 3k`5 3k`& 3k"9 3k"< 3k.- 3k"7 3k"6 3k.< 3k_< 3k_* 3k_| 3k`< 3k`> 3k."9 3k`9 3k/'
  - xfail: contraction followed by "k" followed by special characters is ignored

- - 'conk(xl conk[conk conk{xl'
  - '3k"<xl 3k.<xl'
  - xfail: contraction followed by "k" followed by special characters is ignored

- - '(cons [cons {cons ''cons "cons -cons !cons .cons ,cons ;cons :cons ?cons *cons =cons +cons @cons #cons $cons %cons ^cons &cons )cons _cons ]cons }cons \\cons |cons <cons >cons `cons ~cons /cons'
  - '"<3s .<3s _<3s,8cons 8cons -cons !cons 4cons 1cons ;cons0 3cons ;8cons "93s "73s "63s `a3s _?3s `s3s .03s `53s `&3s ">3s .-3s .>3s _>3s _*3s _|3s `<3s `>3s ;83s .*3s `93s _/3s'
  - xfail: contraction following special characters and followed by "s"  is ignored

- - 'xl(cons xl[cons xl{cons'
  - 'xl"<3s xl.<3s xl{3s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'cons) cons] cons} cons'' cons" cons- cons, cons. cons? cons! cons; cons: cons@ cons# cons$ cons% cons^ cons& cons* cons( cons_ cons= cons+ cons[ cons{ cons\\ cons| cons< cons> cons` cons~ cons/'
  - '3s"> 3s.> 3s_> cons,0cons0 cons- cons1 cons4 cons8 cons! cons; cons03 3s`a 3s_? 3s`s 3s.0 3s`5 3s`& 3s"9 3s"< 3s.- 3s"7 3s"6 3s.< 3s_< 3s_* 3s_| 3s`< 3s`> 3s."9 3s`9 3s/'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - 'cons(xl cons[cons cons{xl'
  - '3s"<xl 3s.<xl'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - '(cont [cont {cont ''cont "cont -cont'
  - '"<3t .<3t _<3t,8cont 8cont -cont'

- - '!cont .cont ,cont ;cont :cont ?cont *cont =cont +cont @cont #cont $cont %cont ^cont &cont )cont _cont ]cont }cont \\cont |cont <cont >cont `cont ~cont /cont'
  - '!cont 4cont 1cont ;cont0 3cont ;8cont "93t "73t "63t `a3t _?3t `s3t .03t `53t `&3t ">3t .-3t .>3t _>3t _*3t _|3t `<3t `>3t ;83t .*3t `93t _/3t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'xl(cont xl[cont xl{cont'
  - 'xl"<3t xl.<3t xl{3t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'cont) cont] cont} cont'' cont" cont- cont, cont. cont? cont! cont; cont: cont@ cont# cont$ cont% cont^ cont& cont* cont( cont_ cont= cont+ cont[ cont{ cont\\ cont| cont< cont> cont` cont~ cont/'
  - '3t"> 3t.> 3t_> cont,0cont0 cont- cont1 cont4 cont8 cont! cont; cont03 3t`a 3t_? 3t`s 3t.0 3t`5 3t`& 3t"9 3t"< 3t.- 3t"7 3t"6 3t.< 3t_< 3t_* 3t_| 3t`< 3t`> 3t."9 3t`9 3t/'

- - 'cont(xl cont[cont cont{xl'
  - '3t"<xl 3t.<xl'

- - '(could [could {could ''could "could -could'
  - '"<cd .<cd _<cd,8cd 8cd -cd'

- - '!could @could #could $could %could ^could &could *could )could _could =could +could ]could }could \\could |could .could ,could ;could :could ?could <could >could `could ~could /could'
  - '!cd `acd _?cd `scd .0cd `5cd `&cd "9cd ">cd .-cd "7cd "6cd .>cd _>cd _*cd _|cd 4cd 1cd ;cd0 3cd ;8cd `<cd `>cd ;8cd .*cd `9cd _/cd'
  - xfail: contraction following special characters is ignored

- - '(cd [cd {cd ''cd "cd -cd'
  - '"<;cd .<;cd _<;cd,8;cd 8;cd -;cd'

- - '!cd @cd #cd $cd %cd ^cd &cd *cd )cd _cd =cd +cd ]cd }cd \\cd |cd .cd ,cd ;cd :cd ?cd <cd >cd ?cd `cd ~cd /cd'
  - '!;cd `a;cd _?;cd `s;cd .0;cd `5;cd `&;cd "9;cd ">;cd .-;cd "7;cd "6;cd .>;cd _>;cd _*;cd _|;cd 4;cd 1;cd ;2cd0 3;cd ;8;cd `<;cd `>;cd .*;cd `9;cd _/;cd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-could xl-([{''"could xl/-could xl$-could'
  - 'xl-cd xl-"<.<{''0cd xl_/-cd xl`s-cd'

- - 'xl(could xl[could xl{could xl''could xl"could xl-=([{''"could'
  - 'xl"<cd xl.<cd xl{cd xl''cd xl0cd xl-"7"<.<{''0cd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'could) could] could} could'' could" could- could, could. could; could: could? could!'
  - 'cd"> cd.> cd_> cd,0cd0 cd- cd1 cd4 cd; cd03 cd8 cd!'

- - 'could@ could# could$ could% could^ could& could* could( could_ could= could+ could[ could{ could\\ could| could< could> could` could~ could/'
  - 'cd`a cd_? cd`s cd.0 cd`5 cd`& cd"9 cd"< cd.- cd"7 cd"6 cd.< cd_< cd_* cd_| cd`< cd`> cd."9 cd`9 cd/'
  - xfail: contraction followed by special characters is ignored

- - 'cd) cd] cd} cd'' cd" cd- cd, cd. cd; cd: cd? cd!'
  - ';cd"> ;cd.> ;cd_> ;cd,0;cd0 ;cd- ;cd1 ;cd4 ;cd; ;cd03 ;cd8 ;cd!'

- - 'cd@ cd# cd$ cd% cd^ cd& cd* cd( cd_ cd= cd+ cd[ cd{ cd\\ cd| cd< cd> cd` cd~ cd/'
  - ';cd`a ;cd_? ;cd`s ;cd.0 ;cd`5 ;cd`& ;cd"9 ;cd"< ;cd.- ;cd"7 ;cd"6 ;cd.< ;cd_< ;cd_* ;cd_| ;cd`< ;cd`> ;cd."9 ;cd`9 ;cd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'could-xl could-([{''"xl could-/xl could-$xl'
  - 'cd-xl cd-"<.<{''0xl cd-_/xl cd-`sxl'

- - 'could(xl could[xl could{xl could''xl could"xl could=([{''"-xl could([{''"-xl could/-xl could$-xl'
  - 'cd"<xl cd.<xl cd{xl cd''xl cd0xl cd"7"<.<{''0-xl cd"<.<{''0-xl cd/-xl cd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(coulds [coulds {coulds ''coulds "coulds -coulds'
  - '"<cds .<cds _<cds,8cds 8cds -cds'

- - '!coulds @coulds #coulds $coulds %coulds ^coulds &coulds *coulds )coulds _coulds =coulds +coulds ]coulds }coulds \\coulds |coulds .coulds ,coulds ;coulds :coulds ?coulds <coulds >coulds `coulds ~coulds /coulds'
  - '!cds `acds _?cds `scds .0cds `5cds `&cds "9cds ">cds .-cds "7cds "6cds .>cds _>cds _*cds _|cds 4cds 1cds ;cds0 3cds ;8cds `<cds `>cds ;8cds .*cds `9cds _/cds'
  - xfail: contraction following special characters is ignored

- - 'cds  (cds [cds {cds ''cds "cds -cds !cds @cds #cds $cds %cds ^cds &cds *cds )cds _cds =cds +cds ]cds }cds \\cds |cds .cds ,cds ;cds :cds ?cds <cds >cds ?cds `cds ~cds /cds'
  - ';cds  "<;cds .<;cds _<;cds,8;cds 8;cds -;cds !;cds `a;cds _?;cds `s;cds .0;cds `5;cds `&;cds "9;cds ">;cds .-;cds "7;cds "6;cds .>;cds _>;cds _*;cds _|;cds 4;cds 1;cds ;2cds0 3;cds ;8;cds `<;cds `>;cds .*;cds `9;cds _/;cds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-coulds xl-([{''"coulds xl/-coulds xl$-coulds'
  - 'xl-cds xl-"<.<{''0cds xl_/-cds xl`s-cds'

- - 'xl(coulds xl[coulds xl{coulds xl''coulds xl"coulds xl-=([{''"coulds'
  - 'xl"<cds xl.<cds xl{cds xl''cds xl0cds xl-"7"<.<{''0cds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'coulds) coulds] coulds} coulds'' coulds" coulds- coulds, coulds. coulds; coulds: coulds? coulds!'
  - 'cds"> cds.> cds_> cds,0cds0 cds- cds1 cds4 cds; cds03 cds8 cds!'

- - 'coulds@ coulds# coulds$ coulds% coulds^ coulds& coulds* coulds( coulds_ coulds= coulds+ coulds[ coulds{ coulds\\ coulds| coulds< coulds> coulds` coulds~ coulds/'
  - 'cds`a cds_? cds`s cds.0 cds`5 cds`& cds"9 cds"< cds.- cds"7 cds"6 cds.< cds_< cds_* cds_| cds`< cds`> cds."9 cds`9 cds/'
  - xfail: contraction followed by special characters is ignored

- - 'cds) cds] cds} cds'' cds" cds- cds, cds. cds; cds: cds? cds! cds@ cds# cds$ cds% cds^ cds& cds* cds( cds_ cds= cds+ cds[ cds{ cds\\ cds| cds< cds> cds` cds~ cds/'
  - ';cds"> ;cds.> ;cds_> ;cds,0;cds0 ;cds- ;cds1 ;cds4 ;cds; ;cds03 ;cds8 ;cds! ;cds`a ;cds_? ;cds`s ;cds.0 ;cds`5 ;cds`& ;cds"9 ;cds"< ;cds.- ;cds"7 ;cds"6 ;cds.< ;cds_< ;cds_* ;cds_| ;cds`< ;cds`> ;cds."9 ;cds`9 ;cds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'coulds-xl coulds-([{''"xl coulds-/xl coulds-$xl'
  - 'cds-xl cds-"<.<{''0xl cds-_/xl cds-`sxl'

- - 'coulds(xl coulds[xl coulds{xl coulds''xl coulds"xl coulds=([{''"-xl coulds([{''"-xl coulds/-xl coulds$-xl'
  - 'cds"<xl cds.<xl cds{xl cds''xl cds0xl cds"7"<.<{''0-xl cds"<.<{''0-xl cds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(coulda [coulda {coulda ''coulda "coulda -coulda'
  - '"<cda .<cda _<cda,8cda 8cda -cda'

- - '!coulda @coulda #coulda $coulda %coulda ^coulda &coulda *coulda )coulda _coulda =coulda +coulda ]coulda }coulda \\coulda |coulda .coulda ,coulda ;coulda :coulda ?coulda <coulda >coulda `coulda ~coulda /coulda'
  - '!cda `acda _?cda `scda .0cda `5cda `&cda "9cda ">cda .-cda "7cda "6cda .>cda _>cda _*cda _|cda 4cda 1cda ;cda0 3cda ;8cda `<cda `>cda ;8cda .*cda `9cda _/cda'
  - xfail: contraction following special characters is ignored

- - '(cda [cda {cda ''cda "cda -cda'
  - '"<;cda .<;cda _<;cda,8;cda 8;cda -;cda'

- - '!cda @cda #cda $cda %cda ^cda &cda *cda )cda _cda =cda +cda ]cda }cda \\cda |cda .cda ,cda ;cda :cda ?cda <cda >cda ?cda `cda ~cda /cda'
  - '!;cda `a;cda _?;cda `s;cda .0;cda `5;cda `&;cda "9;cda ">;cda .-;cda "7;cda "6;cda .>;cda _>;cda _*;cda _|;cda 4;cda 1;cda ;2cda0 3;cda ;8;cda `<;cda `>;cda .*;cda `9;cda _/;cda'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-coulda xl-([{''"coulda xl/-coulda xl$-coulda'
  - 'xl-cda xl-"<.<{''0cda xl_/-cda xl`s-cda'

- - 'xl(coulda xl[coulda xl{coulda xl''coulda xl"coulda xl-=([{''"coulda'
  - 'xl"<cda xl.<cda xl{cda xl''cda xl0cda xl-"7"<.<{''0cda'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'coulda) coulda] coulda} coulda'' coulda" coulda- coulda, coulda. coulda; coulda: coulda? coulda!'
  - 'cda"> cda.> cda_> cda,0cda0 cda- cda1 cda4 cda; cda03 cda8 cda!'

- - 'coulda@ coulda# coulda$ coulda% coulda^ coulda& coulda* coulda( coulda_ coulda= coulda+ coulda[ coulda{ coulda\\ coulda| coulda< coulda> coulda` coulda~ coulda/'
  - 'cda`a cda_? cda`s cda.0 cda`5 cda`& cda"9 cda"< cda.- cda"7 cda"6 cda.< cda_< cda_* cda_| cda`< cda`> cda."9 cda`9 cda/'
  - xfail: contraction followed by special characters is ignored

- - 'cda) cda] cda} cda'' cda" cda- cda, cda. cda; cda: cda? cda!'
  - ';cda"> ;cda.> ;cda_> ;cda,0;cda0 ;cda- ;cda1 ;cda4 ;cda; ;cda03 ;cda8 ;cda!'

- - 'cda@ cda# cda$ cda% cda^ cda& cda* cda( cda_ cda= cda+ cda[ cda{ cda\\ cda| cda< cda> cda` cda~ cda/'
  - ';cda`a ;cda_? ;cda`s ;cda.0 ;cda`5 ;cda`& ;cda"9 ;cda"< ;cda.- ;cda"7 ;cda"6 ;cda.< ;cda_< ;cda_* ;cda_| ;cda`< ;cda`> ;cda."9 ;cda`9 ;cda/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'coulda-xl coulda-([{''"xl coulda-/xl coulda-$xl'
  - 'cda-xl cda-"<.<{''0xl cda-_/xl cda-`sxl'

- - 'coulda(xl coulda[xl coulda{xl coulda''xl coulda"xl coulda=([{''"-xl coulda([{''"-xl coulda/-xl coulda$-xl'
  - 'cda"<xl cda.<xl cda{xl cda''xl cda0xl cda"7"<.<{''0-xl cda"<.<{''0-xl cda/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceive [deceive {deceive ''deceive "deceive -deceive'
  - '"<dcv .<dcv _<dcv,8dcv 8dcv -dcv'

- - '!deceive @deceive #deceive $deceive %deceive ^deceive &deceive *deceive )deceive _deceive =deceive +deceive ]deceive }deceive \\deceive |deceive .deceive ,deceive ;deceive :deceive ?deceive <deceive >deceive `deceive ~deceive /deceive'
  - '!dcv `adcv _?dcv `sdcv .0dcv `5dcv `&dcv "9dcv ">dcv .-dcv "7dcv "6dcv .>dcv _>dcv _*dcv _|dcv 4dcv 1dcv ;dcv0 3dcv ;8dcv `<dcv `>dcv .*dcv `9dcv _/dcv'
  - xfail: contraction following special characters is ignored

- - '(dcv [dcv {dcv ''dcv "dcv -dcv'
  - '"<;dcv .<;dcv _<;dcv,8;dcv 8;dcv -;dcv'

- - '!dcv @dcv #dcv $dcv %dcv ^dcv &dcv *dcv )dcv _dcv =dcv +dcv ]dcv }dcv \\dcv |dcv .dcv ,dcv ;dcv :dcv ?dcv <dcv >dcv `dcv ~dcv /dcv'
  - '!;dcv `a;dcv _?;dcv `s;dcv .0;dcv `5;dcv `&;dcv "9;dcv ">;dcv .-;dcv "7;dcv "6;dcv .>;dcv _>;dcv _*;dcv _|;dcv 4;dcv 1;dcv ;2dcv0 3;dcv ;8;dcv `<;dcv `>;dcv .*;dcv `9;dcv _/;dcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceive xl-([{''"deceive xl/-deceive xl$-deceive'
  - 'xl-dcv xl-"<.<{''0dcv xl_/-dcv xl`s-dcv'

- - 'xl(deceive xl[deceive xl{deceive xl''deceive xl"deceive xl-=([{''"deceive'
  - 'xl"<dcv xl.<dcv xl{dcv xl''dcv xl0dcv xl-"7"<.<{''0dcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceive) deceive] deceive} deceive'' deceive" deceive- deceive, deceive. deceive; deceive: deceive? deceive!'
  - 'dcv"> dcv.> dcv_> dcv,0dcv0 dcv- dcv1 dcv4 dcv; dcv03 dcv8 dcv!'

- - 'deceive@ deceive# deceive$ deceive% deceive^ deceive& deceive* deceive( deceive_ deceive= deceive+ deceive[ deceive{ deceive\\ deceive| deceive< deceive> deceive` deceive~ deceive/'
  - 'dcv`a dcv_? dcv`s dcv.0 dcv`5 dcv`& dcv"9 dcv"< dcv.- dcv"7 dcv"6 dcv.< dcv_< dcv_* dcv_| dcv`< dcv`> dcv."9 dcv`9 dcv/'
  - xfail: contraction followed by special characters is ignored

- - 'dcv) dcv] dcv} dcv'' dcv" dcv- dcv, dcv. dcv; dcv: dcv? dcv!'
  - ';dcv"> ;dcv.> ;dcv_> ;dcv,0;dcv0 ;dcv- ;dcv1 ;dcv4 ;dcv; ;dcv03 ;dcv8 ;dcv!'

- - 'dcv@ dcv# dcv$ dcv% dcv^ dcv& dcv* dcv( dcv_ dcv= dcv+ dcv[ dcv{ dcv\\ dcv| dcv< dcv> dcv` dcv~ dcv/'
  - ';dcv`a ;dcv_? ;dcv`s ;dcv.0 ;dcv`5 ;dcv`& ;dcv"9 ;dcv"< ;dcv.- ;dcv"7 ;dcv"6 ;dcv.< ;dcv_< ;dcv_* ;dcv_| ;dcv`< ;dcv`> ;dcv."9 ;dcv`9 ;dcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceive-xl deceive-([{''"xl deceive-/xl deceive-$xl'
  - 'dcv-xl dcv-"<.<{''0xl dcv-_/xl dcv-`sxl'

- - 'deceive(xl deceive[xl deceive{xl deceive''xl deceive"xl deceive=([{''"-xl deceive([{''"-xl deceive/-xl deceive$-xl'
  - 'dcv"<xl dcv.<xl dcv{xl dcv''xl dcv0xl dcv"7"<.<{''0-xl dcv"<.<{''0-xl dcv/-xl dcv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceived [deceived {deceived ''deceived "deceived -deceived'
  - '"<dcvd .<dcvd _<dcvd,8dcvd 8dcvd -dcvd'

- - '!deceived @deceived #deceived $deceived %deceived ^deceived &deceived *deceived )deceived _deceived =deceived +deceived ]deceived }deceived \\deceived |deceived .deceived ,deceived ;deceived :deceived ?deceived <deceived >deceived `deceived ~deceived /deceived'
  - '!dcvd `adcvd _?dcvd $dcvd .0dcvd `5dcvd `&dcvd "9dcvd ">dcvd .-dcvd "7dcvd "6dcvd .>dcvd _>dcvd _*dcvd _|dcvd 4dcvd 1dcvd ;dcvd0 3dcvd ;8dcvd `<dcvd `>dcvd .*dcvd `9dcvd _/dcvd'
  - xfail: contraction following special characters is ignored

- - '(dcvd [dcvd {dcvd ''dcvd "dcvd -dcvd'
  - '"<;dcvd .<;dcvd _<;dcvd,8;dcvd 8;dcvd -;dcvd'

- - '!dcvd @dcvd #dcvd $dcvd %dcvd ^dcvd &dcvd *dcvd )dcvd _dcvd =dcvd +dcvd ]dcvd }dcvd \\dcvd |dcvd .dcvd ,dcvd ;dcvd :dcvd ?dcvd <dcvd >dcvd `dcvd ~dcvd /dcvd'
  - '!;dcvd `a;dcvd _?;dcvd `s;dcvd .0;dcvd `5;dcvd `&;dcvd "9;dcvd ">;dcvd .-;dcvd "7;dcvd "6;dcvd .>;dcvd _>;dcvd _*;dcvd _|;dcvd 4;dcvd 1;dcvd ;2dcvd0 3;dcvd ;8;dcvd `<;dcvd `>;dcvd .*;dcvd `9;dcvd _/;dcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceived xl-([{''"deceived xl/-deceived xl$-deceived'
  - 'xl-dcvd xl-"<.<{''0dcvd xl_/-dcvd xl$-dcvd'

- - 'xl(deceived xl[deceived xl{deceived xl''deceived xl"deceived xl-=([{''"deceived'
  - 'xl"<dcvd xl.<dcvd xl{dcvd xl''dcvd xl0dcvd xl-"7"<.<{''0dcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceived) deceived] deceived} deceived'' deceived" deceived- deceived, deceived. deceived; deceived: deceived? deceived!'
  - 'dcvd"> dcvd.> dcvd_> dcvd,0dcvd0 dcvd- dcvd1 dcvd4 dcvd; dcvd03 dcvd8 dcvd!'

- - 'deceived@ deceived# deceived$ deceived% deceived^ deceived& deceived* deceived( deceived_ deceived= deceived+ deceived[ deceived{ deceived\\ deceived| deceived< deceived> deceived` deceived~ deceived/'
  - 'dcvd`a dcvd_? dcvd`s dcvd.0 dcvd`5 dcvd`& dcvd"9 dcvd"< dcvd.- dcvd"7 dcvd"6 dcvd.< dcvd_< dcvd_* dcvd_| dcvd`< dcvd`> dcvd."9 dcvd`9 dcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvd) dcvd] dcvd} dcvd'' dcvd" dcvd- dcvd, dcvd. dcvd; dcvd: dcvd? dcvd!'
  - ';dcvd"> ;dcvd.> ;dcvd_> ;dcvd,0;dcvd0 ;dcvd- ;dcvd1 ;dcvd4 ;dcvd; ;dcvd03 ;dcvd8 ;dcvd!'

- - 'dcvd@ dcvd# dcvd$ dcvd% dcvd^ dcvd& dcvd* dcvd( dcvd_ dcvd= dcvd+ dcvd[ dcvd{ dcvd\\ dcvd| dcvd< dcvd> dcvd` dcvd~ dcvd/'
  - ';dcvd`a ;dcvd_? ;dcvd`s ;dcvd.0 ;dcvd`5 ;dcvd`& ;dcvd"9 ;dcvd"< ;dcvd.- ;dcvd"7 ;dcvd"6 ;dcvd.< ;dcvd_< ;dcvd_* ;dcvd_| ;dcvd`< ;dcvd`> ;dcvd."9 ;dcvd`9 ;dcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceived-xl deceived-([{''"xl deceived-/xl deceived-$xl'
  - 'dcvd-xl dcvd-"<.<{''0xl dcvd-_/xl dcvd-`sxl'

- - 'deceived(xl deceived[xl deceived{xl deceived''xl deceived"xl deceived=([{''"-xl deceived([{''"-xl deceived/-xl deceived$-xl'
  - 'dcvd"<xl dcvd.<xl dcvd{xl dcvd''xl dcvd0xl dcvd"7"<.<{''0-xl dcvd"<.<{''0-xl dcvd/-xl dcvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceiving [deceiving {deceiving ''deceiving "deceiving -deceiving'
  - '"<dcvg .<dcvg _<dcvg,8dcvg 8dcvg -dcvg'

- - '!deceiving @deceiving #deceiving $deceiving %deceiving ^deceiving &deceiving *deceiving )deceiving _deceiving =deceiving +deceiving ]deceiving }deceiving \\deceiving |deceiving .deceiving ,deceiving ;deceiving :deceiving ?deceiving <deceiving >deceiving'
  - '!dcvg `adcvg _?dcvg `sdcvg .0dcvg `5dcvg `&dcvg "9dcvg ">dcvg .-dcvg "7dcvg +dcvg .>dcvg _>dcvg _*dcvg _|dcvg 4dcvg 1dcvg ;dcvg0 3dcvg ;8dcvg `<dcvg `>dcvg'
  - xfail: contraction following special characters is ignored

- - '`deceiving ~deceiving /deceiving'
  - ' .*dcvg `9dcvg _/dcvg'
  - xfail: contraction following special characters is ignored

- - '(dcvg [dcvg {dcvg ''dcvg "dcvg -dcvg'
  - '"<;dcvg .<;dcvg _<;dcvg,8;dcvg 8;dcvg -;dcvg'

- - '!dcvg @dcvg #dcvg $dcvg %dcvg ^dcvg &dcvg *dcvg )dcvg _dcvg =dcvg +dcvg ]dcvg }dcvg \\dcvg |dcvg .dcvg ,dcvg ;dcvg :dcvg ?dcvg <dcvg >dcvg `dcvg ~dcvg /dcvg'
  - '!;dcvg `a;dcvg _?;dcvg `s;dcvg .0;dcvg `5;dcvg `&;dcvg "9;dcvg ">;dcvg .-;dcvg "7;dcvg "6;dcvg .>;dcvg _>;dcvg _*;dcvg _|;dcvg 4;dcvg 1;dcvg ;2dcvg0 3;dcvg ;8;dcvg `<;dcvg `>;dcvg .*;dcvg `9;dcvg _/;dcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceiving xl-([{''"deceiving xl/-deceiving xl$-deceiving'
  - 'xl-dcvg xl-"<.<{''0dcvg xl_/-dcvg xl`s-dcvg'

- - 'xl(deceiving xl[deceiving xl{deceiving xl''deceiving xl"deceiving xl-=([{''"deceiving'
  - 'xl"<dcvg xl.<dcvg xl{dcvg xl''dcvg xl0dcvg xl-"7"<.<{''0dcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceiving) deceiving] deceiving} deceiving'' deceiving" deceiving- deceiving, deceiving. deceiving; deceiving: deceiving? deceiving!'
  - 'dcvg"> dcvg.> dcvg_> dcvg,0dcvg0 dcvg- dcvg1 dcvg4 dcvg; dcvg03 dcvg8 dcvg!'

- - 'deceiving@ deceiving# deceiving$ deceiving% deceiving^ deceiving& deceiving* deceiving( deceiving_ deceiving= deceiving+ deceiving[ deceiving{ deceiving\\ deceiving| deceiving< deceiving> deceiving` deceiving~ deceiving/'
  - 'dcvg`a dcvg_? dcvg`s dcvg.0 dcvg`5 dcvg`& dcvg"9 dcvg"< dcvg.- dcvg"7 dcvg+ dcvg.< dcvg_< dcvg_* dcvg_| dcvg`< dcvg`> dcvg."9 dcvg`9 dcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvg) dcvg] dcvg} dcvg'' dcvg" dcvg- dcvg, dcvg. dcvg; dcvg: dcvg? dcvg!'
  - ';dcvg"> ;dcvg.> ;dcvg_> ;dcvg,0;dcvg0 ;dcvg- ;dcvg1 ;dcvg4 ;dcvg; ;dcvg03 ;dcvg8 ;dcvg!'

- - 'dcvg@ dcvg# dcvg$ dcvg% dcvg^ dcvg& dcvg* dcvg( dcvg_ dcvg= dcvg+ dcvg[ dcvg{ dcvg\\ dcvg| dcvg< dcvg> dcvg` dcvg~ dcvg/'
  - ';dcvg`a ;dcvg_? ;dcvg`s ;dcvg.0 ;dcvg`5 ;dcvg`& ;dcvg"9 ;dcvg"< ;dcvg.- ;dcvg"7 ;dcvg"6 ;dcvg.< ;dcvg_< ;dcvg_* ;dcvg_| ;dcvg`< ;dcvg`> ;dcvg."9 ;dcvg`9 ;dcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceiving-xl deceiving-([{''"xl deceiving-/xl deceiving-$xl'
  - 'dcvg-xl dcvg-"<.<{''0xl dcvg-_/xl dcvg-`sxl'

- - 'deceiving(xl deceiving[xl deceiving{xl deceiving''xl deceiving"xl deceiving=([{''"-xl deceiving([{''"-xl deceiving/-xl deceiving$-xl'
  - 'dcvg"<xl dcvg.<xl dcvg{xl dcvg''xl dcvg0xl dcvg"7"<.<{''0-xl dcvg"<.<{''0-xl dcvg/-xl dcvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceiver [deceiver {deceiver ''deceiver "deceiver -deceiver'
  - '"<dcvr .<dcvr _<dcvr,8dcvr 8dcvr -dcvr'

- - '!deceiver @deceiver #deceiver $deceiver %deceiver ^deceiver &deceiver *deceiver )deceiver _deceiver =deceiver +deceiver ]deceiver }deceiver \\deceiver |deceiver .deceiver ,deceiver ;deceiver :deceiver ?deceiver <deceiver >deceiver `deceiver ~deceiver /deceiver'
  - '!dcvr `adcvr _?dcvr `sdcvr .0dcvr `5dcvr `&dcvr "9dcvr ">dcvr .-dcvr "7dcvr "6dcvr .>dcvr }dcvr _*dcvr _|dcvr 4dcvr 1dcvr ;dcvr0 3dcvr ;8dcvr `<dcvr `>dcvr .*dcvr `9dcvr _/dcvr'
  - xfail: contraction following special characters is ignored

- - '(dcvr [dcvr {dcvr ''dcvr "dcvr -dcvr'
  - '"<;dcvr .<;dcvr _<;dcvr,8;dcvr 8;dcvr -;dcvr'

- - '!dcvr @dcvr #dcvr $dcvr %dcvr ^dcvr &dcvr *dcvr )dcvr _dcvr =dcvr +dcvr ]dcvr }dcvr \\dcvr |dcvr .dcvr ,dcvr ;dcvr :dcvr ?dcvr <dcvr >dcvr `dcvr ~dcvr /dcvr'
  - '!;dcvr `a;dcvr _?;dcvr `s;dcvr .0;dcvr `5;dcvr `&;dcvr "9;dcvr ">;dcvr .-;dcvr "7;dcvr "6;dcvr .>;dcvr _>;dcvr _*;dcvr _|;dcvr 4;dcvr 1;dcvr ;2dcvr0 3;dcvr ;8;dcvr `<;dcvr `>;dcvr .*;dcvr `9;dcvr _/;dcvr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceiver xl-([{''"deceiver xl/-deceiver xl$-deceiver'
  - 'xl-dcvr xl-"<.<{''0dcvr xl_/-dcvr xl`s-dcvr'

- - 'xl(deceiver xl[deceiver xl{deceiver xl''deceiver xl"deceiver xl-=([{''"deceiver'
  - 'xl"<dcvr xl.<dcvr xl{dcvr xl''dcvr xl0dcvr xl-"7"<.<{''0dcvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceiver) deceiver] deceiver} deceiver'' deceiver" deceiver- deceiver, deceiver. deceiver; deceiver: deceiver? deceiver!'
  - 'dcvr"> dcvr.> dcvr_> dcvr,0dcvr0 dcvr- dcvr1 dcvr4 dcvr; dcvr03 dcvr8 dcvr!'

- - 'deceiver@ deceiver# deceiver$ deceiver% deceiver^ deceiver& deceiver* deceiver( deceiver_ deceiver= deceiver+ deceiver[ deceiver{ deceiver\\ deceiver| deceiver< deceiver> deceiver` deceiver~ deceiver/'
  - 'dcvr`a dcvr_? dcvr`s dcvr.0 dcvr`5 dcvr`& dcvr"9 dcvr"< dcvr.- dcvr"7 dcvr"6 dcvr.< dcvr_< dcvr_* dcvr_| dcvr`< dcvr`> dcvr."9 dcvr`9 dcvr/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvr) dcvr] dcvr} dcvr'' dcvr" dcvr- dcvr, dcvr. dcvr; dcvr: dcvr? dcvr!'
  - ';dcvr"> ;dcvr.> ;dcvr_> ;dcvr,0;dcvr0 ;dcvr- ;dcvr1 ;dcvr4 ;dcvr; ;dcvr03 ;dcvr8 ;dcvr!'

- - 'dcvr@ dcvr# dcvr$ dcvr% dcvr^ dcvr& dcvr* dcvr( dcvr_ dcvr= dcvr+ dcvr[ dcvr{ dcvr\\ dcvr| dcvr< dcvr> dcvr` dcvr~ dcvr/'
  - ';dcvr`a ;dcvr_? ;dcvr`s ;dcvr.0 ;dcvr`5 ;dcvr`& ;dcvr"9 ;dcvr"< ;dcvr.- ;dcvr"7 ;dcvr"6 ;dcvr.< ;dcvr_< ;dcvr_* ;dcvr_| ;dcvr`< ;dcvr`> ;dcvr."9 ;dcvr`9 ;dcvr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceiver-xl deceiver-([{''"xl deceiver-/xl deceiver-$xl'
  - 'dcvr-xl dcvr-"<.<{''0xl dcvr-_/xl dcvr-`sxl'

- - 'deceiver(xl deceiver[xl deceiver{xl deceiver''xl deceiver"xl deceiver=([{''"-xl deceiver([{''"-xl deceiver/-xl deceiver$-xl'
  - 'dcvr"<xl dcvr.<xl dcvr{xl dcvr''xl dcvr0xl dcvr"7"<.<{''0-xl dcvr"<.<{''0-xl dcvr/-xl dcvr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceivers [deceivers {deceivers ''deceivers "deceivers -deceivers'
  - '"<dcvrs .<dcvrs _<dcvrs,8dcvrs 8dcvrs -dcvrs'

- - '!deceivers @deceivers #deceivers $deceivers %deceivers ^deceivers &deceivers *deceivers )deceivers _deceivers =deceivers +deceivers ]deceivers }deceivers \\deceivers |deceivers .deceivers ,deceivers ;deceivers :deceivers ?deceivers <deceivers >deceivers'
  - '!dcvrs `adcvrs _?dcvrs `sdcvrs .0dcvrs `5dcvrs `&dcvrs "9dcvrs ">dcvrs .-dcvrs "7dcvrs "6dcvrs .>dcvrs _>dcvrs _*dcvrs _|dcvrs 4dcvrs 1dcvrs ;dcvrs0 3dcvrs ;8dcvrs `<dcvrs `>dcvrs'
  - xfail: contraction following special characters is ignored

- - '`deceivers ~deceivers ~deceivers'
  - '.*dcvrs `9dcvrs _/dcvrs'
  - xfail: contraction following special characters is ignored

- - 'dcvrs (dcvrs [dcvrs {dcvrs ''dcvrs "dcvrs -dcvrs !dcvrs @dcvrs #dcvrs $dcvrs %dcvrs ^dcvrs &dcvrs *dcvrs )dcvrs _dcvrs =dcvrs +dcvrs ]dcvrs }dcvrs \\dcvrs |dcvrs .dcvrs ,dcvrs ;dcvrs :dcvrs ?dcvrs <dcvrs >dcvrs `dcvrs ~dcvrs /dcvrs'
  - ';dcvrs "<;dcvrs .<;dcvrs _<;dcvrs,8;dcvrs 8;dcvrs -;dcvrs !;dcvrs `a;dcvrs _?;dcvrs `s;dcvrs .0;dcvrs `5;dcvrs `&;dcvrs "9;dcvrs ">;dcvrs .-;dcvrs "7;dcvrs "6;dcvrs .>;dcvrs _>;dcvrs _*;dcvrs _|;dcvrs 4;dcvrs 1;dcvrs ;2dcvrs0 3;dcvrs ;8;dcvrs `<;dcvrs `>;dcvrs .*;dcvrs `9;dcvrs _/;dcvrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceivers xl-([{''"deceivers xl/-deceivers xl$-deceivers'
  - 'xl-dcvrs xl-"<.<{''0dcvrs xl_/-dcvrs xl`s-dcvrs'

- - 'xl(deceivers xl[deceivers xl{deceivers xl''deceivers xl"deceivers xl-=([{''"deceivers'
  - 'xl"<dcvrs xl.<dcvrs xl{dcvrs xl''dcvrs xl0dcvrs xl-"7"<.<{''0dcvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceivers) deceivers] deceivers} deceivers'' deceivers" deceivers- deceivers, deceivers. deceivers; deceivers: deceivers? deceivers!'
  - 'dcvrs"> dcvrs.> dcvrs_> dcvrs,0dcvrs0 dcvrs- dcvrs1 dcvrs4 dcvrs; dcvrs03 dcvrs8 dcvrs!'

- - 'deceivers@ deceivers# deceivers$ deceivers% deceivers^ deceivers& deceivers* deceivers( deceivers_ deceivers= deceivers+ deceivers[ deceivers{ deceivers\\ deceivers| deceivers< deceivers> deceivers` deceivers~ deceivers/'
  - 'dcvrs`a dcvrs_? dcvrs`s dcvrs.0 dcvrs`5 dcvrs`& dcvrs"9 dcvrs"< dcvrs.- dcvrs"7 dcvrs"6 dcvrs.< dcvrs_< dcvrs_* dcvrs_| dcvrs`< dcvrs`> dcvrs."9 dcvrs`9 dcvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvrs) dcvrs] dcvrs} dcvrs'' dcvrs" dcvrs- dcvrs, dcvrs. dcvrs; dcvrs: dcvrs? dcvrs! dcvrs@ dcvrs# dcvrs$ dcvrs% dcvrs^ dcvrs& dcvrs* dcvrs( dcvrs_ dcvrs= dcvrs+ dcvrs[ dcvrs{ dcvrs\\ dcvrs| dcvrs< dcvrs> dcvrs` dcvrs~ dcvrs/'
  - ';dcvrs"> ;dcvrs.> ;dcvrs_> ;dcvrs,0;dcvrs0 ;dcvrs- ;dcvrs1 ;dcvrs4 ;dcvrs; ;dcvrs03 ;dcvrs8 ;dcvrs! ;dcvrs`a ;dcvrs_? ;dcvrs`s ;dcvrs.0 ;dcvrs`5 ;dcvrs`& ;dcvrs"9 ;dcvrs"< ;dcvrs.- ;dcvrs"7 ;dcvrs"6 ;dcvrs.< ;dcvrs_< ;dcvrs_* ;dcvrs_| ;dcvrs`< ;dcvrs`> ;dcvrs."9 ;dcvrs`9 ;dcvrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceivers-xl deceivers-([{''"xl deceivers-/xl deceivers-$xl'
  - 'dcvrs-xl dcvrs-"<.<{''0xl dcvrs-_/xl dcvrs-`sxl'

- - 'deceivers(xl deceivers[xl deceivers{xl deceivers''xl deceivers"xl deceivers=([{''"-xl deceivers([{''"-xl deceivers/-xl deceivers$-xl'
  - 'dcvrs"<xl dcvrs.<xl dcvrs{xl dcvrs''xl dcvrs0xl dcvrs"7"<.<{''0-xl dcvrs"<.<{''0-xl dcvrs/-xl dcvrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(deceives [deceives {deceives ''deceives "deceives -deceives'
  - '"<dcvs .<dcvs _<dcvs,8dcvs 8dcvs -dcvs'

- - '!deceives @deceives #deceives $deceives %deceives ^deceives &deceives *deceives )deceives _deceives =deceives +deceives ]deceives }deceives \\deceives |deceives .deceives ,deceives ;deceives :deceives ?deceives <deceives >deceives `deceives ~deceives /deceives'
  - '!dcvs `adcvs _?dcvs `sdcvs .0dcvs `5dcvs `&dcvs "9dcvs ">dcvs .-dcvs "7dcvs "6dcvs .>dcvs _>dcvs _*dcvs _|dcvs 4dcvs 1dcvs ;dcvs0 3dcvs ;8dcvs `<dcvs `>dcvs .*dcvs `9dcvs _/dcvs'
  - xfail: contraction following special characters is ignored

- - 'dcvs (dcvs [dcvs {dcvs ''dcvs "dcvs -dcvs !dcvs @dcvs #dcvs $dcvs %dcvs ^dcvs &dcvs *dcvs )dcvs _dcvs =dcvs +dcvs ]dcvs }dcvs \\dcvs |dcvs .dcvs ,dcvs ;dcvs :dcvs ?dcvs <dcvs >dcvs `dcvs ~dcvs /dcvs'
  - ';dcvs "<;dcvs .<;dcvs _<;dcvs,8;dcvs 8;dcvs -;dcvs !;dcvs `a;dcvs _?;dcvs `s;dcvs .0;dcvs `5;dcvs `&;dcvs "9;dcvs ">;dcvs .-;dcvs "7;dcvs "6;dcvs .>;dcvs _>;dcvs _*;dcvs _|;dcvs 4;dcvs 1;dcvs ;2dcvs0 3;dcvs ;8;dcvs `<;dcvs `>;dcvs .*;dcvs `9;dcvs _/;dcvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-deceives xl-([{''"deceives xl/-deceives xl$-deceives'
  - 'xl-dcvs xl-"<.<{''0dcvs xl_/-dcvs xl`s-dcvs'

- - 'xl(deceives xl[deceives xl{deceives xl''deceives xl"deceives xl-=([{''"deceives'
  - 'xl"<dcvs xl.<dcvs xl{dcvs xl''dcvs xl0dcvs xl-"7"<.<{''0dcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'deceives) deceives] deceives} deceives'' deceives" deceives- deceives, deceives. deceives; deceives: deceives? deceives!'
  - 'dcvs"> dcvs.> dcvs_> dcvs,0dcvs0 dcvs- dcvs1 dcvs4 dcvs; dcvs03 dcvs8 dcvs!'

- - 'deceives@ deceives# deceives$ deceives% deceives^ deceives& deceives* deceives( deceives_ deceives= deceives+ deceives[ deceives{ deceives\\ deceives| deceives< deceives> deceives` deceives~ deceives/'
  - 'dcvs`a dcvs_? dcvs`s dcvs.0 dcvs`5 dcvs`& dcvs"9 dcvs"< dcvs.- dcvs"7 dcvs"6 dcvs.< dcvs_< dcvs_* dcvs_| dcvs`< dcvs`> dcvs."9 dcvs`9 dcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'dcvs) dcvs] dcvs} dcvs'' dcvs" dcvs- dcvs, dcvs. dcvs; dcvs: dcvs? dcvs! dcvs@ dcvs# dcvs$ dcvs% dcvs^ dcvs& dcvs* dcvs( dcvs_ dcvs= dcvs+ dcvs[ dcvs{ dcvs\\ dcvs| dcvs< dcvs> dcvs` dcvs~ dcvs/'
  - ';dcvs"> ;dcvs.> ;dcvs_> ;dcvs,0;dcvs0 ;dcvs- ;dcvs1 ;dcvs4 ;dcvs; ;dcvs03 ;dcvs8 ;dcvs! ;dcvs`a ;dcvs_? ;dcvs`s ;dcvs.0 ;dcvs`5 ;dcvs`& ;dcvs"9 ;dcvs"< ;dcvs.- ;dcvs"7 ;dcvs"6 ;dcvs.< ;dcvs_< ;dcvs_* ;dcvs_| ;dcvs`< ;dcvs`> ;dcvs."9 ;dcvs`9 ;dcvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'deceives-xl deceives-([{''"xl deceives-/xl deceives-$xl'
  - 'dcvs-xl dcvs-"<.<{''0xl dcvs-_/xl dcvs-`sxl'

- - 'deceives(xl deceives[xl deceives{xl deceives''xl deceives"xl deceives=([{''"-xl deceives([{''"-xl deceives/-xl deceives$-xl'
  - 'dcvs"<xl dcvs.<xl dcvs{xl dcvs''xl dcvs0xl dcvs"7"<.<{''0-xl dcvs"<.<{''0-xl dcvs/-xl dcvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceive [undeceive {undeceive ''undeceive "undeceive -undeceive'
  - '"<undcv .<undcv _<undcv,8undcv 8undcv -undcv'

- - '!undeceive @undeceive #undeceive $undeceive %undeceive ^undeceive &undeceive *undeceive )undeceive _undeceive =undeceive +undeceive ]undeceive }undeceive \\undeceive |undeceive .undeceive ,undeceive ;undeceive :undeceive ?undeceive <undeceive >undeceive'
  - '!undcv `aundcv _?undcv `sundcv .0undcv `5undcv `&undcv "9undcv ">undcv .-undcv "7undcv "6undcv .>undcv _>undcv _*undcv _|undcv 4undcv 1undcv ;undcv0 3undcv ;8undcv `<undcv `>undcv'
  - xfail: contraction following special characters is ignored

- - '`undeceive ~undeceive /undeceive'
  - '.*undcv `9undcv _/undcv'
  - xfail: contraction following special characters is ignored

- - '(undcv [undcv {undcv ''undcv "undcv -undcv'
  - '"<;undcv .<;undcv _<;undcv,8;undcv 8;undcv -;undcv'

- - '!undcv @undcv #undcv $undcv %undcv ^undcv &undcv *undcv )undcv _undcv =undcv +undcv ]undcv }undcv \\undcv |undcv .undcv ,undcv ;undcv :undcv ?undcv <undcv >undcv `undcv ~undcv /undcv'
  - '!;undcv `a;undcv _?;undcv `s;undcv .0;undcv `5;undcv `&;undcv "9;undcv ">;undcv .-;undcv "7;undcv "6;undcv .>;undcv _>;undcv _*;undcv _|;undcv 4;undcv 1;undcv ;2undcv0 3;undcv ;8;undcv `<;undcv `>;undcv .*;undcv `9;undcv _/;undcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceive xl-([{''"undeceive xl/-undeceive xl$-undeceive'
  - 'xl-undcv xl-"<.<{''0undcv xl_/-undcv xl`s-undcv'

- - 'xl(undeceive xl[undeceive xl{undeceive xl''undeceive xl"undeceive xl-=([{''"undeceive'
  - 'xl"<undcv xl.<undcv xl{undcv xl''undcv xl0undcv xl-"7"<.<{''0undcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceive) undeceive] undeceive} undeceive'' undeceive" undeceive- undeceive, undeceive. undeceive; undeceive: undeceive? undeceive!'
  - 'undcv"> undcv.> undcv_> undcv,0undcv0 undcv- undcv1 undcv4 undcv; undcv03 undcv8 undcv!'

- - 'undeceive@ undeceive# undeceive$ undeceive% undeceive^ undeceive& undeceive* undeceive( undeceive_ undeceive= undeceive+ undeceive[ undeceive{ undeceive\\ undeceive| undeceive< undeceive> undeceive` undeceive~ undeceive/'
  - 'undcv`a undcv_? undcv`s undcv.0 undcv`5 undcv`& undcv"9 undcv"< undcv.- undcv"7 undcv"6 undcv.< undcv_< undcv_* undcv_| undcv`< undcv`> undcv."9 undcv`9 undcv/'
  - xfail: contraction followed by special characters is ignored

- - 'undcv) undcv] undcv} undcv'' undcv" undcv- undcv, undcv. undcv; undcv: undcv? undcv!'
  - ';undcv"> ;undcv.> ;undcv_> ;undcv,0;undcv0 ;undcv- ;undcv1 ;undcv4 ;undcv; ;undcv03 ;undcv8 ;undcv!'

- - 'undcv@ undcv# undcv$ undcv% undcv^ undcv& undcv* undcv( undcv_ undcv= undcv+ undcv[ undcv{ undcv\\ undcv| undcv< undcv> undcv` undcv~ undcv/'
  - ';undcv`a ;undcv_? ;undcv`s ;undcv.0 ;undcv`5 ;undcv`& ;undcv"9 ;undcv"< ;undcv.- ;undcv"7 ;undcv"6 ;undcv.< ;undcv_< ;undcv_* ;undcv_| ;undcv`< ;undcv`> ;undcv."9 ;undcv`9 ;undcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceive-xl undeceive-([{''"xl undeceive-/xl undeceive-$xl'
  - 'undcv-xl undcv-"<.<{''0xl undcv-_/xl undcv-`sxl'

- - 'undeceive(xl undeceive[xl undeceive{xl undeceive''xl undeceive"xl undeceive=([{''"-xl undeceive([{''"-xl undeceive/-xl undeceive$-xl'
  - 'undcv"<xl undcv.<xl undcv{xl undcv''xl undcv0xl undcv"7"<.<{''0-xl undcv"<.<{''0-xl undcv/-xl undcv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceived [undeceived {undeceived ''undeceived "undeceived -undeceived'
  - '"<undcvd .<undcvd _<undcvd,8undcvd 8undcvd -undcvd'

- - '!undeceived @undeceived #undeceived $undeceived %undeceived ^undeceived &undeceived *undeceived )undeceived _undeceived =undeceived +undeceived ]undeceived }undeceived \\undeceived |undeceived .undeceived ,undeceived ;undeceived :undeceived ?undeceived'
  - '!undcvd `aundcvd _?undcvd $undcvd .0undcvd `5undcvd `&undcvd "9undcvd ">undcvd .-undcvd "7undcvd "6undcvd .>undcvd _>undcvd _*undcvd _|undcvd 4undcvd 1undcvd ;undcvd0 3undcvd ;8undcvd'
  - xfail: contraction following special characters is ignored

- - '<undeceived >undeceived `undeceived ~undeceived /undeceived'
  - '`<undcvd `>undcvd .*undcvd `9undcvd _/undcvd'
  - xfail: contraction following special characters is ignored

- - '(undcvd [undcvd {undcvd ''undcvd "undcvd -undcvd'
  - '"<;undcvd .<;undcvd _<;undcvd,8;undcvd 8;undcvd -;undcvd'

- - '!undcvd @undcvd #undcvd $undcvd %undcvd ^undcvd &undcvd *undcvd )undcvd _undcvd =undcvd +undcvd ]undcvd }undcvd \\undcvd |undcvd .undcvd ,undcvd ;undcvd :undcvd ?undcvd <undcvd >undcvd `undcvd ~undcvd /undcvd'
  - '!;undcvd `a;undcvd _?;undcvd `s;undcvd .0;undcvd `5;undcvd `&;undcvd "9;undcvd ">;undcvd .-;undcvd "7;undcvd "6;undcvd .>;undcvd _>;undcvd _*;undcvd _|;undcvd 4;undcvd 1;undcvd ;2undcvd0 3;undcvd ;8;undcvd `<;undcvd `>;undcvd .*;undcvd `9;undcvd _/;undcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceived xl-([{''"undeceived xl/-undeceived xl$-undeceived'
  - 'xl-undcvd xl-"<.<{''0undcvd xl_/-undcvd xl$-undcvd'

- - 'xl(undeceived xl[undeceived xl{undeceived xl''undeceived xl"undeceived xl-=([{''"undeceived'
  - 'xl"<undcvd xl.<undcvd xl{undcvd xl''undcvd xl0undcvd xl-"7"<.<{''0undcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceived) undeceived] undeceived} undeceived'' undeceived" undeceived- undeceived, undeceived. undeceived; undeceived: undeceived? undeceived!'
  - 'undcvd"> undcvd.> undcvd_> undcvd,0undcvd0 undcvd- undcvd1 undcvd4 undcvd; undcvd03 undcvd8 undcvd!'

- - 'undeceived@ undeceived# undeceived$ undeceived% undeceived^ undeceived& undeceived* undeceived( undeceived_ undeceived= undeceived+ undeceived[ undeceived{ undeceived\\ undeceived| undeceived< undeceived> undeceived` undeceived~ undeceived/'
  - 'undcvd`a undcvd_? undcvd`s undcvd.0 undcvd`5 undcvd`& undcvd"9 undcvd"< undcvd.- undcvd"7 undcvd"6 undcvd.< undcvd_< undcvd_* undcvd_| undcvd`< undcvd`> undcvd."9 undcvd`9 undcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvd) undcvd] undcvd} undcvd'' undcvd" undcvd- undcvd, undcvd. undcvd; undcvd: undcvd? undcvd!'
  - ';undcvd"> ;undcvd.> ;undcvd_> ;undcvd,0;undcvd0 ;undcvd- ;undcvd1 ;undcvd4 ;undcvd; ;undcvd03 ;undcvd8 ;undcvd!'

- - 'undcvd@ undcvd# undcvd$ undcvd% undcvd^ undcvd& undcvd* undcvd( undcvd_ undcvd= undcvd+ undcvd[ undcvd{ undcvd\\ undcvd| undcvd< undcvd> undcvd` undcvd~ undcvd/'
  - ';undcvd`a ;undcvd_? ;undcvd`s ;undcvd.0 ;undcvd`5 ;undcvd`& ;undcvd"9 ;undcvd"< ;undcvd.- ;undcvd"7 ;undcvd"6 ;undcvd.< ;undcvd_< ;undcvd_* ;undcvd_| ;undcvd`< ;undcvd`> ;undcvd."9 ;undcvd`9 ;undcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceived-xl undeceived-([{''"xl undeceived-/xl undeceived-$xl'
  - 'undcvd-xl undcvd-"<.<{''0xl undcvd-_/xl undcvd-`sxl'

- - 'undeceived(xl undeceived[xl undeceived{xl undeceived''xl undeceived"xl undeceived=([{''"-xl undeceived([{''"-xl undeceived/-xl undeceived$-xl'
  - 'undcvd"<xl undcvd.<xl undcvd{xl undcvd''xl undcvd0xl undcvd"7"<.<{''0-xl undcvd"<.<{''0-xl undcvd/-xl undcvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceiving [undeceiving {undeceiving ''undeceiving "undeceiving -undeceiving'
  - '"<undcvg .<undcvg _<undcvg,8undcvg 8undcvg -undcvg'

- - '!undeceiving @undeceiving #undeceiving $undeceiving %undeceiving ^undeceiving &undeceiving *undeceiving )undeceiving _undeceiving =undeceiving +undeceiving ]undeceiving }undeceiving \\undeceiving |undeceiving .undeceiving ,undeceiving ;undeceiving :undeceiving'
  - '!undcvg `aundcvg _?undcvg `sundcvg .0undcvg `5undcvg `&undcvg "9undcvg ">undcvg .-undcvg "7undcvg +undcvg .>undcvg _>undcvg _*undcvg _|undcvg 4undcvg 1undcvg ;undcvg0 3undcvg'
  - xfail: contraction following special characters is ignored

- - '?undeceiving <undeceiving >undeceiving `undeceiving ~undeceiving /undeceiving'
  - ';8undcvg `<undcvg `>undcvg .*undcvg `9undcvg _/undcvg'
  - xfail: contraction following special characters is ignored

- - '(undcvg [undcvg {undcvg ''undcvg "undcvg -undcvg'
  - '"<;undcvg .<;undcvg _<;undcvg,8;undcvg 8;undcvg -;undcvg'

- - '!undcvg @undcvg #undcvg $undcvg %undcvg ^undcvg &undcvg *undcvg )undcvg _undcvg =undcvg +undcvg ]undcvg }undcvg \\undcvg |undcvg .undcvg ,undcvg ;undcvg :undcvg ?undcvg <undcvg >undcvg `undcvg ~undcvg /undcvg'
  - '!;undcvg `a;undcvg _?;undcvg `s;undcvg .0;undcvg `5;undcvg `&;undcvg "9;undcvg ">;undcvg .-;undcvg "7;undcvg "6;undcvg .>;undcvg _>;undcvg _*;undcvg _|;undcvg 4;undcvg 1;undcvg ;2undcvg0 3;undcvg ;8;undcvg `<;undcvg `>;undcvg .*;undcvg `9;undcvg _/;undcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceiving xl-([{''"undeceiving xl/-undeceiving xl$-undeceiving'
  - 'xl-undcvg xl-"<.<{''0undcvg xl_/-undcvg xl`s-undcvg'

- - 'xl(undeceiving xl[undeceiving xl{undeceiving xl''undeceiving xl"undeceiving xl-=([{''"undeceiving'
  - 'xl"<undcvg xl.<undcvg xl{undcvg xl''undcvg xl0undcvg xl-"7"<.<{''0undcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceiving) undeceiving] undeceiving} undeceiving'' undeceiving" undeceiving- undeceiving, undeceiving. undeceiving; undeceiving: undeceiving? undeceiving!'
  - 'undcvg"> undcvg.> undcvg_> undcvg,0undcvg0 undcvg- undcvg1 undcvg4 undcvg; undcvg03 undcvg8 undcvg!'

- - 'undeceiving@ undeceiving# undeceiving$ undeceiving% undeceiving^ undeceiving& undeceiving* undeceiving( undeceiving_ undeceiving= undeceiving+ undeceiving[ undeceiving{ undeceiving\\ undeceiving| undeceiving< undeceiving> undeceiving` undeceiving~ undeceiving/'
  - 'undcvg`a undcvg_? undcvg`s undcvg.0 undcvg`5 undcvg`& undcvg"9 undcvg"< undcvg.- undcvg"7 undcvg+ undcvg.< undcvg_< undcvg_* undcvg_| undcvg`< undcvg`> undcvg."9 undcvg`9 undcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvg) undcvg] undcvg} undcvg'' undcvg" undcvg- undcvg, undcvg. undcvg; undcvg: undcvg? undcvg!'
  - ';undcvg"> ;undcvg.> ;undcvg_> ;undcvg,0;undcvg0 ;undcvg- ;undcvg1 ;undcvg4 ;undcvg; ;undcvg03 ;undcvg8 ;undcvg!'

- - 'undcvg@ undcvg# undcvg$ undcvg% undcvg^ undcvg& undcvg* undcvg( undcvg_ undcvg= undcvg+ undcvg[ undcvg{ undcvg\\ undcvg| undcvg< undcvg> undcvg` undcvg~ undcvg/'
  - ';undcvg`a ;undcvg_? ;undcvg`s ;undcvg.0 ;undcvg`5 ;undcvg`& ;undcvg"9 ;undcvg"< ;undcvg.- ;undcvg"7 ;undcvg"6 ;undcvg.< ;undcvg_< ;undcvg_* ;undcvg_| ;undcvg`< ;undcvg`> ;undcvg."9 ;undcvg`9 ;undcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceiving-xl undeceiving-([{''"xl undeceiving-/xl undeceiving-$xl'
  - 'undcvg-xl undcvg-"<.<{''0xl undcvg-_/xl undcvg-`sxl'

- - 'undeceiving(xl undeceiving[xl undeceiving{xl undeceiving''xl undeceiving"xl undeceiving=([{''"-xl undeceiving([{''"-xl undeceiving/-xl undeceiving$-xl'
  - 'undcvg"<xl undcvg.<xl undcvg{xl undcvg''xl undcvg0xl undcvg"7"<.<{''0-xl undcvg"<.<{''0-xl undcvg/-xl undcvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeceives [undeceives {undeceives ''undeceives "undeceives -undeceives'
  - '"<undcvs .<undcvs _<undcvs,8undcvs 8undcvs -undcvs'

- - '!undeceives @undeceives #undeceives $undeceives %undeceives ^undeceives &undeceives *undeceives )undeceives _undeceives =undeceives +undeceives ]undeceives }undeceives \\undeceives |undeceives .undeceives ,undeceives ;undeceives :undeceives ?undeceives'
  - '!undcvs `aundcvs _?undcvs `sundcvs .0undcvs `5undcvs `&undcvs "9undcvs ">undcvs .-undcvs "7undcvs "6undcvs .>undcvs _>undcvs _*undcvs _|undcvs 4undcvs 1undcvs ;undcvs0 3undcvs ;8undcvs'
  - xfail: contraction following special characters is ignored

- - '<undeceives >undeceives `undeceives ~undeceives /undeceives'
  - '`<undcvs `>undcvs .*undcvs `9undcvs _/undcvs'
  - xfail: contraction following special characters is ignored

- - 'undcvs (undcvs [undcvs {undcvs ''undcvs "undcvs -undcvs !undcvs @undcvs #undcvs $undcvs %undcvs ^undcvs &undcvs *undcvs )undcvs _undcvs =undcvs +undcvs ]undcvs }undcvs \\undcvs |undcvs .undcvs ,undcvs ;undcvs :undcvs ?undcvs <undcvs >undcvs `undcvs ~undcvs /undcv'
  - ';undcvs "<;undcvs .<;undcvs _<;undcvs,8;undcvs 8;undcvs -;undcvs !;undcvs `a;undcvs _?;undcvs `s;undcvs .0;undcvs `5;undcvs `&;undcvs "9;undcvs ">;undcvs .-;undcvs "7;undcvs "6;undcvs .>;undcvs _>;undcvs _*;undcvs _|;undcvs 4;undcvs 1;undcvs ;2undcvs0 3;undcvs ;8;undcvs `<;undcvs `>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeceives xl-([{''"undeceives xl/-undeceives xl$-undeceives'
  - 'xl-undcvs xl-"<.<{''0undcvs xl_/-undcvs xl`s-undcvs'

- - 'xl(undeceives xl[undeceives xl{undeceives xl''undeceives xl"undeceives xl-=([{''"undeceives'
  - 'xl"<undcvs xl.<undcvs xl{undcvs xl''undcvs xl0undcvs xl-"7"<.<{''0undcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeceives) undeceives] undeceives} undeceives'' undeceives" undeceives- undeceives, undeceives. undeceives; undeceives: undeceives? undeceives!'
  - 'undcvs"> undcvs.> undcvs_> undcvs,0undcvs0 undcvs- undcvs1 undcvs4 undcvs; undcvs03 undcvs8 undcvs!'

- - 'undeceives@ undeceives# undeceives$ undeceives% undeceives^ undeceives& undeceives* undeceives( undeceives_ undeceives= undeceives+ undeceives[ undeceives{ undeceives\\ undeceives| undeceives< undeceives> undeceives` undeceives~ undeceives/'
  - 'undcvs`a undcvs_? undcvs`s undcvs.0 undcvs`5 undcvs`& undcvs"9 undcvs"< undcvs.- undcvs"7 undcvs"6 undcvs.< undcvs_< undcvs_* undcvs_| undcvs`< undcvs`> undcvs."9 undcvs`9 undcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'undcvs) undcvs] undcvs} undcvs'' undcvs" undcvs- undcvs, undcvs. undcvs; undcvs: undcvs? undcvs! undcvs@ undcvs# undcvs$ undcvs% undcvs^ undcvs& undcvs* undcvs( undcvs_ undcvs= undcvs+ undcvs[ undcvs{ undcvs\\ undcvs| undcvs< undcvs> undcvs` undcvs~ undcvs/'
  - ';undcvs"> ;undcvs.> ;undcvs_> ;undcvs,0;undcvs0 ;undcvs- ;undcvs1 ;undcvs4 ;undcvs; ;undcvs03 ;undcvs8 ;undcvs! ;undcvs`a ;undcvs_? ;undcvs`s ;undcvs.0 ;undcvs`5 ;undcvs`& ;undcvs"9 ;undcvs"< ;undcvs.- ;undcvs"7 ;undcvs"6 ;undcvs.< ;undcvs_< ;undcvs_* ;undcvs_| ;undcvs`< ;undcvs>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeceives-xl undeceives-([{''"xl undeceives-/xl undeceives-$xl'
  - 'undcvs-xl undcvs-"<.<{''0xl undcvs-_/xl undcvs-`sxl'

- - 'undeceives(xl undeceives[xl undeceives{xl undeceives''xl undeceives"xl undeceives=([{''"-xl undeceives([{''"-xl undeceives/-xl undeceives$-xl'
  - 'undcvs"<xl undcvs.<xl undcvs{xl undcvs''xl undcvs0xl undcvs"7"<.<{''0-xl undcvs"<.<{''0-xl undcvs/-xl undcvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declare [declare {declare ''declare "declare -declare'
  - '"<dcl .<dcl _<dcl,8dcl 8dcl -dcl'

- - '!declare @declare #declare $declare %declare ^declare &declare *declare )declare _declare =declare +declare ]declare }declare \\declare |declare .declare ,declare ;declare :declare ?declare <declare >declare `declare ~declare /declare'
  - '!dcl `adcl _?dcl `sdcl .0dcl `5dcl `&dcl "9dcl ">dcl .-dcl "7dcl "6dcl .>dcl _>dcl _*dcl _|dcl 4dcl 1dcl ;dcl0 3dcl ;8dcl `<dcl `>dcl ;8dcl .*dcl `9dcl _/dcl'
  - xfail: contraction following special characters is ignored

- - '(dcl [dcl {dcl ''dcl "dcl -dcl'
  - '"<;dcl .<;dcl _<;dcl,8;dcl 8;dcl -;dcl'

- - '!dcl @dcl #dcl $dcl %dcl ^dcl &dcl *dcl )dcl _dcl =dcl +dcl ]dcl }dcl \\dcl |dcl .dcl ,dcl ;dcl :dcl ?dcl <dcl >dcl ?dcl `dcl ~dcl /dcl'
  - '!;dcl `a;dcl _?;dcl `s;dcl .0;dcl `5;dcl `&;dcl "9;dcl ">;dcl .-;dcl "7;dcl "6;dcl .>;dcl _>;dcl _*;dcl _|;dcl 4;dcl 1;dcl ;2dcl0 3;dcl ;8;dcl `<;dcl `>;dcl .*;dcl `9;dcl _/;dcl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declare xl-([{''"declare xl/-declare xl$-declare'
  - 'xl-dcl xl-"<.<{''0dcl xl_/-dcl xl`s-dcl'

- - 'xl(declare xl[declare xl{declare xl''declare xl"declare xl-=([{''"declare'
  - 'xl"<dcl xl.<dcl xl{dcl xl''dcl xl0dcl xl-"7"<.<{''0dcl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declare) declare] declare} declare'' declare" declare- declare, declare. declare; declare: declare? declare!'
  - 'dcl"> dcl.> dcl_> dcl,0dcl0 dcl- dcl1 dcl4 dcl; dcl03 dcl8 dcl!'

- - 'declare@ declare# declare$ declare% declare^ declare& declare* declare( declare_ declare= declare+ declare[ declare{ declare\\ declare| declare< declare> declare` declare~ declare/'
  - 'dcl`a dcl_? dcl`s dcl.0 dcl`5 dcl`& dcl"9 dcl"< dcl.- dcl"7 dcl"6 dcl.< dcl_< dcl_* dcl_| dcl`< dcl`> dcl."9 dcl`9 dcl/'
  - xfail: contraction followed by special characters is ignored

- - 'dcl) dcl] dcl} dcl'' dcl" dcl- dcl, dcl. dcl; dcl: dcl? dcl!'
  - ';dcl"> ;dcl.> ;dcl_> ;dcl,0;dcl0 ;dcl- ;dcl1 ;dcl4 ;dcl; ;dcl03 ;dcl8 ;dcl!'

- - 'dcl@ dcl# dcl$ dcl% dcl^ dcl& dcl* dcl( dcl_ dcl= dcl+ dcl[ dcl{ dcl\\ dcl| dcl< dcl> dcl` dcl~ dcl/'
  - ';dcl`a ;dcl_? ;dcl`s ;dcl.0 ;dcl`5 ;dcl`& ;dcl"9 ;dcl"< ;dcl.- ;dcl"7 ;dcl"6 ;dcl.< ;dcl_< ;dcl_* ;dcl_| ;dcl`< ;dcl`> ;dcl."9 ;dcl`9 ;dcl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declare-xl declare-([{''"xl declare-/xl declare-$xl'
  - 'dcl-xl dcl-"<.<{''0xl dcl-_/xl dcl-`sxl'

- - 'declare(xl declare[xl declare{xl declare''xl declare"xl declare=([{''"-xl declare([{''"-xl declare/-xl declare$-xl'
  - 'dcl"<xl dcl.<xl dcl{xl dcl''xl dcl0xl dcl"7"<.<{''0-xl dcl"<.<{''0-xl dcl/-xl dcl`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declared [declared {declared ''declared "declared -declared'
  - '"<dcld .<dcld _<dcld,8dcld 8dcld -dcld'

- - '!declared @declared #declared $declared %declared ^declared &declared *declared )declared _declared =declared +declared ]declared }declared \\declared |declared .declared ,declared ;declared :declared ?declared <declared >declared `declared ~declared /declared'
  - '!dcld `adcld _?dcld $dcld .0dcld `5dcld `&dcld "9dcld ">dcld .-dcld "7dcld "6dcld .>dcld _>dcld _*dcld _|dcld 4dcld 1dcld ;dcld0 3dcld ;8dcld `<dcld `>dcld .*dcld `9dcld _/dcld'
  - xfail: contraction following special characters is ignored

- - '(dcld [dcld {dcld ''dcld "dcld -dcld'
  - '"<;dcld .<;dcld _<;dcld,8;dcld 8;dcld -;dcld'

- - '!dcld @dcld #dcld $dcld %dcld ^dcld &dcld *dcld )dcld _dcld =dcld +dcld ]dcld }dcld \\dcld |dcld .dcld ,dcld ;dcld :dcld ?dcld <dcld >dcld `dcld ~dcld /dcld'
  - '!;dcld `a;dcld _?;dcld `s;dcld .0;dcld `5;dcld `&;dcld "9;dcld ">;dcld .-;dcld "7;dcld "6;dcld .>;dcld _>;dcld _*;dcld _|;dcld 4;dcld 1;dcld ;2dcld0 3;dcld ;8;dcld `<;dcld `>;dcld .*;dcld `9;dcld _/;dcld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declared xl-([{''"declared xl/-declared xl$-declared'
  - 'xl-dcld xl-"<.<{''0dcld xl_/-dcld xl$-dcld'

- - 'xl(declared xl[declared xl{declared xl''declared xl"declared xl-=([{''"declared'
  - 'xl"<dcld xl.<dcld xl{dcld xl''dcld xl0dcld xl-"7"<.<{''0dcld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declared) declared] declared} declared'' declared" declared- declared, declared. declared; declared: declared? declared!'
  - 'dcld"> dcld.> dcld_> dcld,0dcld0 dcld- dcld1 dcld4 dcld; dcld03 dcld8 dcld!'

- - 'declared@ declared# declared$ declared% declared^ declared& declared* declared( declared_ declared= declared+ declared[ declared{ declared\\ declared| declared< declared> declared` declared~ declared/'
  - 'dcld`a dcld_? dcld`s dcld.0 dcld`5 dcld`& dcld"9 dcld"< dcld.- dcld"7 dcld"6 dcld.< dcld_< dcld_* dcld_| dcld`< dcld`> dcld."9 dcld`9 dcld/'
  - xfail: contraction followed by special characters is ignored

- - 'dcld) dcld] dcld} dcld'' dcld" dcld- dcld, dcld. dcld; dcld: dcld? dcld!'
  - ';dcld"> ;dcld.> ;dcld_> ;dcld,0;dcld0 ;dcld- ;dcld1 ;dcld4 ;dcld; ;dcld03 ;dcld8 ;dcld!'

- - 'dcld@ dcld# dcld$ dcld% dcld^ dcld& dcld* dcld( dcld_ dcld= dcld+ dcld[ dcld{ dcld\\ dcld| dcld< dcld> dcld` dcld~ dcld/'
  - ';dcld`a ;dcld_? ;dcld`s ;dcld.0 ;dcld`5 ;dcld`& ;dcld"9 ;dcld"< ;dcld.- ;dcld"7 ;dcld"6 ;dcld.< ;dcld_< ;dcld_* ;dcld_| ;dcld`< ;dcld`> ;dcld."9 ;dcld`9 ;dcld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declared-xl declared-([{''"xl declared-/xl declared-$xl'
  - 'dcld-xl dcld-"<.<{''0xl dcld-_/xl dcld-`sxl'

- - 'declared(xl declared[xl declared{xl declared''xl declared"xl declared=([{''"-xl declared([{''"-xl declared/-xl declared$-xl'
  - 'dcld"<xl dcld.<xl dcld{xl dcld''xl dcld0xl dcld"7"<.<{''0-xl dcld"<.<{''0-xl dcld/-xl dcld`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declaring [declaring {declaring ''declaring "declaring -declaring'
  - '"<dclg .<dclg _<dclg,8dclg 8dclg -dclg'

- - '!declaring @declaring #declaring $declaring %declaring ^declaring &declaring *declaring )declaring _declaring =declaring +declaring ]declaring }declaring \\declaring |declaring .declaring ,declaring ;declaring :declaring ?declaring <declaring >declaring'
  - '!dclg `adclg _?dclg `sdclg .0dclg `5dclg `&dclg "9dclg ">dclg .-dclg "7dclg +dclg .>dclg _>dclg _*dclg _|dclg 4dclg 1dclg ;dclg0 3dclg ;8dclg `<dclg `>dclg'
  - xfail: contraction following special characters is ignored

- - '`declareing >declaring `declaring ~declaring /declaring'
  - '.*dclg `9dclg _/dclg'
  - xfail: contraction following special characters is ignored

- - '(dclg [dclg {dclg ''dclg "dclg -dclg'
  - '"<;dclg .<;dclg _<;dclg,8;dclg 8;dclg -;dclg'

- - '!dclg @dclg #dclg $dclg %dclg ^dclg &dclg *dclg )dclg _dclg =dclg +dclg ]dclg }dclg \\dclg |dclg .dclg ,dclg ;dclg :dclg ?dclg <dclg >dclg `dclg ~dclg /dclg'
  - '!;dclg `a;dclg _?;dclg `s;dclg .0;dclg `5;dclg `&;dclg "9;dclg ">;dclg .-;dclg "7;dclg "6;dclg .>;dclg _>;dclg _*;dclg _|;dclg 4;dclg 1;dclg ;2dclg0 3;dclg ;8;dclg `<;dclg `>;dclg .*;dclg `9;dclg _/;dclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declaring xl-([{''"declaring xl/-declaring xl$-declaring'
  - 'xl-dclg xl-"<.<{''0dclg xl_/-dclg xl`s-dclg'

- - 'xl(declaring xl[declaring xl{declaring xl''declaring xl"declaring xl-=([{''"declaring'
  - 'xl"<dclg xl.<dclg xl{dclg xl''dclg xl0dclg xl-"7"<.<{''0dclg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declaring) declaring] declaring} declaring'' declaring" declaring- declaring, declaring. declaring; declaring: declaring? declaring!'
  - 'dclg"> dclg.> dclg_> dclg,0dclg0 dclg- dclg1 dclg4 dclg; dclg03 dclg8 dclg!'

- - 'declaring@ declaring# declaring$ declaring% declaring^ declaring& declaring* declaring( declaring_ declaring= declaring+ declaring[ declaring{ declaring\\ declaring| declaring< declaring> declaring` declaring~ declaring/'
  - 'dclg`a dclg_? dclg`s dclg.0 dclg`5 dclg`& dclg"9 dclg"< dclg.- dclg"7 dclg+ dclg.< dclg_< dclg_* dclg_| dclg`< dclg`> dclg."9 dclg`9 dclg/'
  - xfail: contraction followed by special characters is ignored

- - 'dclg) dclg] dclg} dclg'' dclg" dclg- dclg, dclg. dclg; dclg: dclg? dclg!'
  - ';dclg"> ;dclg.> ;dclg_> ;dclg,0;dclg0 ;dclg- ;dclg1 ;dclg4 ;dclg; ;dclg03 ;dclg8 ;dclg!'

- - 'dclg@ dclg# dclg$ dclg% dclg^ dclg& dclg* dclg( dclg_ dclg= dclg+ dclg[ dclg{ dclg\\ dclg| dclg< dclg> dclg` dclg~ dclg/'
  - ';dclg`a ;dclg_? ;dclg`s ;dclg.0 ;dclg`5 ;dclg`& ;dclg"9 ;dclg"< ;dclg.- ;dclg"7 ;dclg"6 ;dclg.< ;dclg_< ;dclg_* ;dclg_| ;dclg`< ;dclg`> ;dclg."9 ;dclg`9 ;dclg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declaring-xl declaring-([{''"xl declaring-/xl declaring-$xl'
  - 'dclg-xl dclg-"<.<{''0xl dclg-_/xl dclg-`sxl'

- - 'declaring(xl declaring[xl declaring{xl declaring''xl declaring"xl declaring=([{''"-xl declaring([{''"-xl declaring/-xl declaring$-xl'
  - 'dclg"<xl dclg.<xl dclg{xl dclg''xl dclg0xl dclg"7"<.<{''0-xl dclg"<.<{''0-xl dclg/-xl dclg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declarer [declarer {declarer ''declarer "declarer -declarer'
  - '"<dclr .<dclr _<dclr,8dclr 8dclr -dclr'

- - '!declarer @declarer #declarer $declarer %declarer ^declarer &declarer *declarer )declarer _declarer =declarer +declarer ]declarer }declarer \\declarer |declarer .declarer ,declarer ;declarer :declarer ?declarer <declarer >declarer `declarer ~declarer /declarer'
  - '!dclr `adclr _?dclr `sdclr .0dclr `5dclr `&dclr "9dclr ">dclr .-dclr "7dclr "6dclr .>dclr }dclr _*dclr _|dclr 4dclr 1dclr ;dclr0 3dclr ;8dclr `<dclr `>dclr .*dclr `9dclr _/dclr'
  - xfail: contraction following special characters is ignored

- - '(dclr [dclr {dclr ''dclr "dclr -dclr'
  - '"<;dclr .<;dclr _<;dclr,8;dclr 8;dclr -;dclr'

- - '!dclr @dclr #dclr $dclr %dclr ^dclr &dclr *dclr )dclr _dclr =dclr +dclr ]dclr }dclr \\dclr |dclr .dclr ,dclr ;dclr :dclr ?dclr <dclr >dclr `dclr ~dclr /dclr'
  - '!;dclr `a;dclr _?;dclr `s;dclr .0;dclr `5;dclr `&;dclr "9;dclr ">;dclr .-;dclr "7;dclr "6;dclr .>;dclr _>;dclr _*;dclr _|;dclr 4;dclr 1;dclr ;2dclr0 3;dclr ;8;dclr `<;dclr `>;dclr .*;dclr `9;dclr _/;dclr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declarer xl-([{''"declarer xl/-declarer xl$-declarer'
  - 'xl-dclr xl-"<.<{''0dclr xl_/-dclr xl`s-dclr'

- - 'xl(declarer xl[declarer xl{declarer xl''declarer xl"declarer xl-=([{''"declarer'
  - 'xl"<dclr xl.<dclr xl{dclr xl''dclr xl0dclr xl-"7"<.<{''0dclr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declarer) declarer] declarer} declarer'' declarer" declarer- declarer, declarer. declarer; declarer: declarer? declarer!'
  - 'dclr"> dclr.> dclr_> dclr,0dclr0 dclr- dclr1 dclr4 dclr; dclr03 dclr8 dclr!'

- - 'declarer@ declarer# declarer$ declarer% declarer^ declarer& declarer* declarer( declarer_ declarer= declarer+ declarer[ declarer{ declarer\\ declarer| declarer< declarer> declarer` declarer~ declarer/'
  - 'dclr`a dclr_? dclr`s dclr.0 dclr`5 dclr`& dclr"9 dclr"< dclr.- dclr"7 dclr"6 dclr.< dclr_< dclr_* dclr_| dclr`< dclr`> dclr."9 dclr`9 dclr/'
  - xfail: contraction followed by special characters is ignored

- - 'dclr) dclr] dclr} dclr'' dclr" dclr- dclr, dclr. dclr; dclr: dclr? dclr!'
  - ';dclr"> ;dclr.> ;dclr_> ;dclr,0;dclr0 ;dclr- ;dclr1 ;dclr4 ;dclr; ;dclr03 ;dclr8 ;dclr!'

- - 'dclr@ dclr# dclr$ dclr% dclr^ dclr& dclr* dclr( dclr_ dclr= dclr+ dclr[ dclr{ dclr\\ dclr| dclr< dclr> dclr` dclr~ dclr/'
  - ';dclr`a ;dclr_? ;dclr`s ;dclr.0 ;dclr`5 ;dclr`& ;dclr"9 ;dclr"< ;dclr.- ;dclr"7 ;dclr"6 ;dclr.< ;dclr_< ;dclr_* ;dclr_| ;dclr`< ;dclr`> ;dclr."9 ;dclr`9 ;dclr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declarer-xl declarer-([{''"xl declarer-/xl declarer-$xl'
  - 'dclr-xl dclr-"<.<{''0xl dclr-_/xl dclr-`sxl'

- - 'declarer(xl declarer[xl declarer{xl declarer''xl declarer"xl declarer=([{''"-xl declarer([{''"-xl declarer/-xl declarer$-xl'
  - 'dclr"<xl dclr.<xl dclr{xl dclr''xl dclr0xl dclr"7"<.<{''0-xl dclr"<.<{''0-xl dclr/-xl dclr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declarers [declarers {declarers ''declarers "declarers -declarers'
  - '"<dclrs .<dclrs _<dclrs,8dclrs 8dclrs -dclrs'

- - '!declarers @declarers #declarers $declarers %declarers ^declarers &declarers *declarers )declarers _declarers =declarers +declarers ]declarers }declarers \\declarers |declarers .declarers ,declarers ;declarers :declarers ?declarers <declarers >declarers'
  - '!dclrs `adclrs _?dclrs `sdclrs .0dclrs `5dclrs `&dclrs "9dclrs ">dclrs .-dclrs "7dclrs "6dclrs .>dclrs _>dclrs _*dclrs _|dclrs 4dclrs 1dclrs ;dclrs0 3dclrs ;8dclrs `<dclrs `>dclrs'
  - xfail: contraction following special characters is ignored

- - '`declarers ~declarers /declarers'
  - '.*dclrs `9dclrs _/dclrs'
  - xfail: contraction following special characters is ignored

- - 'dclrs (dclrs [dclrs {dclrs ''dclrs "dclrs -dclrs !dclrs @dclrs #dclrs $dclrs %dclrs ^dclrs &dclrs *dclrs )dclrs _dclrs =dclrs +dclrs ]dclrs }dclrs \\dclrs |dclrs .dclrs ,dclrs ;dclrs :dclrs ?dclrs <dclrs >dclrs `dclrs ~dclrs /dclrs'
  - ';dclrs "<;dclrs .<;dclrs _<;dclrs,8;dclrs 8;dclrs -;dclrs !;dclrs `a;dclrs _?;dclrs `s;dclrs .0;dclrs `5;dclrs `&;dclrs "9;dclrs ">;dclrs .-;dclrs "7;dclrs "6;dclrs .>;dclrs _>;dclrs _*;dclrs _|;dclrs 4;dclrs 1;dclrs ;2dclrs0 3;dclrs ;8;dclrs `<;dclrs `>;dclrs .*;dclrs `9;dclrs _/;dclrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declarers xl-([{''"declarers xl/-declarers xl$-declarers'
  - 'xl-dclrs xl-"<.<{''0dclrs xl_/-dclrs xl`s-dclrs'

- - 'xl(declarers xl[declarers xl{declarers xl''declarers xl"declarers xl-=([{''"declarers'
  - 'xl"<dclrs xl.<dclrs xl{dclrs xl''dclrs xl0dclrs xl-"7"<.<{''0dclrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declarers) declarers] declarers} declarers'' declarers" declarers- declarers, declarers. declarers; declarers: declarers? declarers!'
  - 'dclrs"> dclrs.> dclrs_> dclrs,0dclrs0 dclrs- dclrs1 dclrs4 dclrs; dclrs03 dclrs8 dclrs!'

- - 'declarers@ declarers# declarers$ declarers% declarers^ declarers& declarers* declarers( declarers_ declarers= declarers+ declarers[ declarers{ declarers\\ declarers| declarers< declarers> declarers` declarers~ declarers/'
  - 'dclrs`a dclrs_? dclrs`s dclrs.0 dclrs`5 dclrs`& dclrs"9 dclrs"< dclrs.- dclrs"7 dclrs"6 dclrs.< dclrs_< dclrs_* dclrs_| dclrs`< dclrs`> dclrs."9 dclrs`9 dclrs/'
  - xfail: contraction followed by special characters is ignored

- - 'dclrs) dclrs] dclrs} dclrs'' dclrs" dclrs- dclrs, dclrs. dclrs; dclrs: dclrs? dclrs! dclrs@ dclrs# dclrs$ dclrs% dclrs^ dclrs& dclrs* dclrs( dclrs_ dclrs= dclrs+ dclrs[ dclrs{ dclrs\\ dclrs| dclrs< dclrs> dclrs` dclrs~ dclrs/'
  - ';dclrs"> ;dclrs.> ;dclrs_> ;dclrs,0;dclrs0 ;dclrs- ;dclrs1 ;dclrs4 ;dclrs; ;dclrs03 ;dclrs8 ;dclrs! ;dclrs`a ;dclrs_? ;dclrs`s ;dclrs.0 ;dclrs`5 ;dclrs`& ;dclrs"9 ;dclrs"< ;dclrs.- ;dclrs"7 ;dclrs"6 ;dclrs.< ;dclrs_< ;dclrs_* ;dclrs_| ;dclrs`< ;dclrs`> ;dclrs."9 ;dclrs`9 ;dclrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declarers-xl declarers-([{''"xl declarers-/xl declarers-$xl'
  - 'dclrs-xl dclrs-"<.<{''0xl dclrs-_/xl dclrs-`sxl'

- - 'declarers(xl declarers[xl declarers{xl declarers''xl declarers"xl declarers=([{''"-xl declarers([{''"-xl declarers/-xl declarers$-xl'
  - 'dclrs"<xl dclrs.<xl dclrs{xl dclrs''xl dclrs0xl dclrs"7"<.<{''0-xl dclrs"<.<{''0-xl dclrs/-xl dclrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(declares [declares {declares ''declares "declares -declares'
  - '"<dcls .<dcls _<dcls,8dcls 8dcls -dcls'

- - '!declares @declares #declares $declares %declares ^declares &declares *declares )declares _declares =declares +declares ]declares }declares \\declares |declares .declares ,declares ;declares :declares ?declares <declares >declares `declares ~declares /declares'
  - '!dcls `adcls _?dcls `sdcls .0dcls `5dcls `&dcls "9dcls ">dcls .-dcls "7dcls "6dcls .>dcls _>dcls _*dcls _|dcls 4dcls 1dcls ;dcls0 3dcls ;8dcls `<dcls `>dcls .*dcls `9dcls _/dcls'
  - xfail: contraction following special characters is ignored

- - 'dcls (dcls [dcls {dcls ''dcls "dcls -dcls !dcls @dcls #dcls $dcls %dcls ^dcls &dcls *dcls )dcls _dcls =dcls +dcls ]dcls }dcls \\dcls |dcls .dcls ,dcls ;dcls :dcls ?dcls <dcls >dcls `dcls ~dcls /dcls'
  - ';dcls "<;dcls .<;dcls _<;dcls,8;dcls 8;dcls -;dcls !;dcls `a;dcls _?;dcls `s;dcls .0;dcls `5;dcls `&;dcls "9;dcls ">;dcls .-;dcls "7;dcls "6;dcls .>;dcls _>;dcls _*;dcls _|;dcls 4;dcls 1;dcls ;2dcls0 3;dcls ;8;dcls `<;dcls `>;dcls .*;dcls `9;dcls _/;dcls'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-declares xl-([{''"declares xl/-declares xl$-declares'
  - 'xl-dcls xl-"<.<{''0dcls xl_/-dcls xl`s-dcls'

- - 'xl(declares xl[declares xl{declares xl''declares xl"declares xl-=([{''"declares'
  - 'xl"<dcls xl.<dcls xl{dcls xl''dcls xl0dcls xl-"7"<.<{''0dcls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'declares) declares] declares} declares'' declares" declares- declares, declares. declares; declares: declares? declares!'
  - 'dcls"> dcls.> dcls_> dcls,0dcls0 dcls- dcls1 dcls4 dcls; dcls03 dcls8 dcls!'

- - 'declares@ declares# declares$ declares% declares^ declares& declares* declares( declares_ declares= declares+ declares[ declares{ declares\\ declares| declares< declares> declares` declares~ declares/'
  - 'dcls`a dcls_? dcls`s dcls.0 dcls`5 dcls`& dcls"9 dcls"< dcls.- dcls"7 dcls"6 dcls.< dcls_< dcls_* dcls_| dcls`< dcls`> dcls."9 dcls`9 dcls/'
  - xfail: contraction followed by special characters is ignored

- - 'dcls) dcls] dcls} dcls'' dcls" dcls- dcls, dcls. dcls; dcls: dcls? dcls! dcls@ dcls# dcls$ dcls% dcls^ dcls& dcls* dcls( dcls_ dcls= dcls+ dcls[ dcls{ dcls\\ dcls| dcls< dcls> dcls` dcls~ dcls/'
  - ';dcls"> ;dcls.> ;dcls_> ;dcls,0;dcls0 ;dcls- ;dcls1 ;dcls4 ;dcls; ;dcls03 ;dcls8 ;dcls! ;dcls`a ;dcls_? ;dcls`s ;dcls.0 ;dcls`5 ;dcls`& ;dcls"9 ;dcls"< ;dcls.- ;dcls"7 ;dcls"6 ;dcls.< ;dcls_< ;dcls_* ;dcls_| ;dcls`< ;dcls`> ;dcls."9 ;dcls`9 ;dcls/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'declares-xl declares-([{''"xl declares-/xl declares-$xl'
  - 'dcls-xl dcls-"<.<{''0xl dcls-_/xl dcls-`sxl'

- - 'declares(xl declares[xl declares{xl declares''xl declares"xl declares=([{''"-xl declares([{''"-xl declares/-xl declares$-xl'
  - 'dcls"<xl dcls.<xl dcls{xl dcls''xl dcls0xl dcls"7"<.<{''0-xl dcls"<.<{''0-xl dcls/-xl dcls`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclare [undeclare {undeclare ''undeclare "undeclare -undeclare'
  - '"<undcl .<undcl _<undcl,8undcl 8undcl -undcl'

- - '!undeclare @undeclare #undeclare $undeclare %undeclare ^undeclare &undeclare *undeclare )undeclare _undeclare =undeclare +undeclare ]undeclare }undeclare \\undeclare |undeclare .undeclare ,undeclare ;undeclare :undeclare ?undeclare <undeclare >undeclare'
  - '!undcl `aundcl _?undcl `sundcl .0undcl `5undcl `&undcl "9undcl ">undcl .-undcl "7undcl "6undcl .>undcl _>undcl _*undcl _|undcl 4undcl 1undcl ;undcl0 3undcl ;8undcl `<undcl `>undcl'
  - xfail: contraction following special characters is ignored

- - '`undeclare ~undeclare /undeclare'
  - '.*undcl `9undcl _/undcl'
  - xfail: contraction following special characters is ignored

- - '(undcl [undcl {undcl ''undcl "undcl -undcl'
  - '"<;undcl .<;undcl _<;undcl,8;undcl 8;undcl -;undcl'

- - '!undcl @undcl #undcl $undcl %undcl ^undcl &undcl *undcl )undcl _undcl =undcl +undcl ]undcl }undcl \\undcl |undcl .undcl ,undcl ;undcl :undcl ?undcl <undcl >undcl `undcl ~undcl /undcl'
  - '!;undcl `a;undcl _?;undcl `s;undcl .0;undcl `5;undcl `&;undcl "9;undcl ">;undcl .-;undcl "7;undcl "6;undcl .>;undcl _>;undcl _*;undcl _|;undcl 4;undcl 1;undcl ;2undcl0 3;undcl ;8;undcl `<;undcl `>;undcl .*;undcl `9;undcl _/;undcl'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclare xl-([{''"undeclare xl/-undeclare xl$-undeclare'
  - 'xl-undcl xl-"<.<{''0undcl xl_/-undcl xl`s-undcl'

- - 'xl(undeclare xl[undeclare xl{undeclare xl''undeclare xl"undeclare xl-=([{''"undeclare'
  - 'xl"<undcl xl.<undcl xl{undcl xl''undcl xl0undcl xl-"7"<.<{''0undcl'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclare) undeclare] undeclare} undeclare'' undeclare" undeclare- undeclare, undeclare. undeclare; undeclare: undeclare? undeclare!'
  - 'undcl"> undcl.> undcl_> undcl,0undcl0 undcl- undcl1 undcl4 undcl; undcl03 undcl8 undcl!'

- - 'undeclare@ undeclare# undeclare$ undeclare% undeclare^ undeclare& undeclare* undeclare( undeclare_ undeclare= undeclare+ undeclare[ undeclare{ undeclare\\ undeclare| undeclare< undeclare> undeclare` undeclare~ undeclare/'
  - 'undcl`a undcl_? undcl`s undcl.0 undcl`5 undcl`& undcl"9 undcl"< undcl.- undcl"7 undcl"6 undcl.< undcl_< undcl_* undcl_| undcl`< undcl`> undcl."9 undcl`9 undcl/'
  - xfail: contraction followed by special characters is ignored

- - 'undcl) undcl] undcl} undcl'' undcl" undcl- undcl, undcl. undcl; undcl: undcl? undcl!'
  - ';undcl"> ;undcl.> ;undcl_> ;undcl,0;undcl0 ;undcl- ;undcl1 ;undcl4 ;undcl; ;undcl03 ;undcl8 ;undcl!'

- - 'undcl@ undcl# undcl$ undcl% undcl^ undcl& undcl* undcl( undcl_ undcl= undcl+ undcl[ undcl{ undcl\\ undcl| undcl< undcl> undcl` undcl~ undcl/'
  - ';undcl`a ;undcl_? ;undcl`s ;undcl.0 ;undcl`5 ;undcl`& ;undcl"9 ;undcl"< ;undcl.- ;undcl"7 ;undcl"6 ;undcl.< ;undcl_< ;undcl_* ;undcl_| ;undcl`< ;undcl`> ;undcl."9 ;undcl`9 ;undcl/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclare-xl undeclare-([{''"xl undeclare-/xl undeclare-$xl'
  - 'undcl-xl undcl-"<.<{''0xl undcl-_/xl undcl-`sxl'

- - 'undeclare(xl undeclare[xl undeclare{xl undeclare''xl undeclare"xl undeclare=([{''"-xl undeclare([{''"-xl undeclare/-xl undeclare$-xl'
  - 'undcl"<xl undcl.<xl undcl{xl undcl''xl undcl0xl undcl"7"<.<{''0-xl undcl"<.<{''0-xl undcl/-xl undcl`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclared [undeclared {undeclared ''undeclared "undeclared -undeclared'
  - '"<undcld .<undcld _<undcld,8undcld 8undcld -undcld'

- - '!undeclared @undeclared #undeclared $undeclared %undeclared ^undeclared &undeclared *undeclared )undeclared _undeclared =undeclared +undeclared ]undeclared }undeclared \\undeclared |undeclared .undeclared ,undeclared ;undeclared :undeclared ?undeclared'
  - '!undcld `aundcld _?undcld $undcld .0undcld `5undcld `&undcld "9undcld ">undcld .-undcld "7undcld "6undcld .>undcld _>undcld _*undcld _|undcld 4undcld 1undcld ;undcld0 3undcld ;8undcld'
  - xfail: contraction following special characters is ignored

- - '<undeclared >undeclared `undeclared ~undeclared /undeclared'
  - '`<undcld `>undcld .*undcld `9undcld _/undcld'
  - xfail: contraction following special characters is ignored

- - '(undcld [undcld {undcld ''undcld "undcld -undcld'
  - '"<;undcld .<;undcld _<;undcld,8;undcld 8;undcld -;undcld'

- - '!undcld @undcld #undcld $undcld %undcld ^undcld &undcld *undcld )undcld _undcld =undcld +undcld ]undcld }undcld \\undcld |undcld .undcld ,undcld ;undcld :undcld ?undcld <undcld >undcld `undcld ~undcld /undcld'
  - '!;undcld `a;undcld _?;undcld `s;undcld .0;undcld `5;undcld `&;undcld "9;undcld ">;undcld .-;undcld "7;undcld "6;undcld .>;undcld _>;undcld _*;undcld _|;undcld 4;undcld 1;undcld ;2undcld0 3;undcld ;8;undcld `<;undcld `>;undcld .*;undcld `9;undcld _/;undcld'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclared xl-([{''"undeclared xl/-undeclared xl$-undeclared'
  - 'xl-undcld xl-"<.<{''0undcld xl_/-undcld xl$-undcld'

- - 'xl(undeclared xl[undeclared xl{undeclared xl''undeclared xl"undeclared xl-=([{''"undeclared'
  - 'xl"<undcld xl.<undcld xl{undcld xl''undcld xl0undcld xl-"7"<.<{''0undcld'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclared) undeclared] undeclared} undeclared'' undeclared" undeclared- undeclared, undeclared. undeclared; undeclared: undeclared? undeclared!'
  - 'undcld"> undcld.> undcld_> undcld,0undcld0 undcld- undcld1 undcld4 undcld; undcld03 undcld8 undcld!'

- - 'undeclared@ undeclared# undeclared$ undeclared% undeclared^ undeclared& undeclared* undeclared( undeclared_ undeclared= undeclared+ undeclared[ undeclared{ undeclared\\ undeclared| undeclared< undeclared> undeclared` undeclared~ undeclared/'
  - 'undcld`a undcld_? undcld`s undcld.0 undcld`5 undcld`& undcld"9 undcld"< undcld.- undcld"7 undcld"6 undcld.< undcld_< undcld_* undcld_| undcld`< undcld`> undcld."9 undcld`9 undcld/'
  - xfail: contraction followed by special characters is ignored

- - 'undcld) undcld] undcld} undcld'' undcld" undcld- undcld, undcld. undcld; undcld: undcld? undcld!'
  - ';undcld"> ;undcld.> ;undcld_> ;undcld,0;undcld0 ;undcld- ;undcld1 ;undcld4 ;undcld; ;undcld03 ;undcld8 ;undcld!'

- - 'undcld@ undcld# undcld$ undcld% undcld^ undcld& undcld* undcld( undcld_ undcld= undcld+ undcld[ undcld{ undcld\\ undcld| undcld< undcld> undcld` undcld~ undcld/'
  - ';undcld`a ;undcld_? ;undcld`s ;undcld.0 ;undcld`5 ;undcld`& ;undcld"9 ;undcld"< ;undcld.- ;undcld"7 ;undcld"6 ;undcld.< ;undcld_< ;undcld_* ;undcld_| ;undcld`< ;undcld`> ;undcld."9 ;undcld`9 ;undcld/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclared-xl undeclared-([{''"xl undeclared-/xl undeclared-$xl'
  - 'undcld-xl undcld-"<.<{''0xl undcld-_/xl undcld-`sxl'

- - 'undeclared(xl undeclared[xl undeclared{xl undeclared''xl undeclared"xl undeclared=([{''"-xl undeclared([{''"-xl undeclared/-xl undeclared$-xl'
  - 'undcld"<xl undcld.<xl undcld{xl undcld''xl undcld0xl undcld"7"<.<{''0-xl undcld"<.<{''0-xl undcld/-xl undcld`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclaring [undeclaring {undeclaring ''undeclaring "undeclaring -undeclaring !undeclaring @undeclaring #undeclaring $undeclaring %undeclaring ^undeclaring &undeclaring *undeclaring )undeclaring _undeclaring =undeclaring +undeclaring ]undeclaring }undeclaring'
  - '"<undclg .<undclg _<undclg,8undclg 8undclg -undclg !undclg `aundclg _?undclg `sundclg .0undclg `5undclg `&undclg "9undclg ">undclg .-undclg "7undclg +undclg .>undclg _>undclg'
  - xfail: contraction following special characters is ignored

- - '\\undeclaring |undeclaring .undeclaring ,undeclaring ;undeclaring :undeclaring ?undeclaring <undeclaring >undeclaring `undeclaring ~undeclaring /undeclaring'
  - '_*undclg _|undclg 4undclg 1undclg ;undclg0 3undclg ;8undclg `<undclg `>undclg .*undclg `9undclg _/undclg'
  - xfail: contraction following special characters is ignored

- - 'undclg (undclg [undclg {undclg ''undclg "undclg -undclg !undclg @undclg #undclg $undclg %undclg ^undclg &undclg *undclg )undclg _undclg =undclg +undclg ]undclg }undclg \\undclg |undclg .undclg ,undclg ;undclg :undclg ?undclg <undclg'
  - ';undclg "<;undclg .<;undclg _<;undclg,8;undclg 8;undclg -;undclg !;undclg `a;undclg _?;undclg `s;undclg .0;undclg `5;undclg `&;undclg "9;undclg ">;undclg .-;undclg "7;undclg "6;undclg .>;undclg _>;undclg _*;undclg _|;undclg 4;undclg 1;undclg ;2undclg0 3;undclg ;8;undclg `<;undclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - '>undclg `undclg ~undclg /undclg'
  - '`>;undclg .*;undclg `9;undclg _/;undclg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclaring xl-([{''"undeclaring xl/-undeclaring xl$-undeclaring xl(undeclaring xl[undeclaring xl{undeclaring xl''undeclaring xl"undeclaring xl-=([{''"undeclaring'
  - 'xl-undclg xl-"<.<{''0undclg xl_/-undclg xl`s-undclg xl"<undclg xl.<undclg xl{undclg xl''undclg xl0undclg xl-"7"<.<{''0undclg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclaring) undeclaring] undeclaring} undeclaring'' undeclaring" undeclaring- undeclaring, undeclaring. undeclaring; undeclaring: undeclaring? undeclaring! undeclaring@ undeclaring# undeclaring$ undeclaring% undeclaring^ undeclaring& undeclaring* undeclaring('
  - 'undclg"> undclg.> undclg_> undclg,0undclg0 undclg- undclg1 undclg4 undclg; undclg03 undclg8 undclg! undclg`a undclg_? undclg`s undclg.0 undclg`5 undclg`& undclg"9 undclg"< undclg.- undclg"7 undclg+ undclg.< undclg_< undclg_* undclg_| undclg<'
  - xfail: contraction followed by special characters is ignored

- - 'undeclaring_ undeclaring= undeclaring+ undeclaring[ undeclaring{ undeclaring\\ undeclaring| undeclaring< undeclaring> undeclaring` undeclaring~ undeclaring/'
  - 'undclg`> undclg."9 undclg`9 undclg/'
  - xfail: contraction followed by special characters is ignored

- - 'undclg) undclg] undclg} undclg'' undclg" undclg- undclg, undclg. undclg; undclg: undclg? undclg! undclg@ undclg# undclg$ undclg% undclg^ undclg& undclg* undclg( undclg_ undclg= undclg+ undclg[ undclg{ undclg\\ undclg| undclg< undclg>'
  - ';undclg"> ;undclg.> ;undclg_> ;undclg,0;undclg0 ;undclg- ;undclg1 ;undclg4 ;undclg; ;undclg03 ;undclg8 ;undclg! ;undclg`a ;undclg_? ;undclg`s ;undclg.0 ;undclg`5 ;undclg`& ;undclg"9 ;undclg"< ;undclg.- ;undclg"7 ;undclg"6 ;undclg.< ;undclg_< ;undclg_* ;undclg_| ;undclg`< ;undclg>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undclg` undclg~ undclg/'
  - ';undclg."9 ;undclg`9 ;undclg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclaring-xl undeclaring-([{''"xl undeclaring-/xl undeclaring-$xl undeclaring(xl undeclaring[xl undeclaring{xl undeclaring''xl undeclaring"xl undeclaring=([{''"-xl undeclaring([{''"-xl undeclaring/-xl undeclaring$-xl'
  - 'undclg-xl undclg-"<.<{''0xl undclg-_/xl undclg-`sxl undclg"<xl undclg.<xl undclg{xl undclg''xl undclg0xl undclg"7"<.<{''0-xl undclg"<.<{''0-xl undclg/-xl undclg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(undeclares [undeclares {undeclares ''undeclares "undeclares -undeclares'
  - '"<undcls .<undcls _<undcls,8undcls 8undcls -undcls'

- - '!undeclares @undeclares #undeclares $undeclares %undeclares ^undeclares &undeclares *undeclares )undeclares _undeclares =undeclares +undeclares ]undeclares }undeclares \\undeclares |undeclares .undeclares ,undeclares ;undeclares :undeclares ?undeclares'
  - '!undcls `aundcls _?undcls `sundcls .0undcls `5undcls `&undcls "9undcls ">undcls .-undcls "7undcls "6undcls .>undcls _>undcls _*undcls _|undcls 4undcls 1undcls ;undcls0 3undcls ;8undcls'
  - xfail: contraction following special characters is ignored

- - '<undeclares >undeclares `undeclares ~undeclares /undeclares'
  - '`<undcls `>undcls .*undcls `9undcls _/undcls'
  - xfail: contraction following special characters is ignored

- - 'undcls (undcls [undcls {undcls ''undcls "undcls -undcls !undcls @undcls #undcls $undcls %undcls ^undcls &undcls *undcls )undcls _undcls =undcls +undcls ]undcls }undcls \\undcls |undcls .undcls ,undcls ;undcls :undcls ?undcls <undcls >undcls `undcls ~undcls /undcl'
  - ';undcls "<;undcls .<;undcls _<;undcls,8;undcls 8;undcls -;undcls !;undcls `a;undcls _?;undcls `s;undcls .0;undcls `5;undcls `&;undcls "9;undcls ">;undcls .-;undcls "7;undcls "6;undcls .>;undcls _>;undcls _*;undcls _|;undcls 4;undcls 1;undcls ;2undcls0 3;undcls ;8;undcls `<;undcls `>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-undeclares xl-([{''"undeclares xl/-undeclares xl$-undeclares'
  - 'xl-undcls xl-"<.<{''0undcls xl_/-undcls xl`s-undcls'

- - 'xl(undeclares xl[undeclares xl{undeclares xl''undeclares xl"undeclares xl-=([{''"undeclares'
  - 'xl"<undcls xl.<undcls xl{undcls xl''undcls xl0undcls xl-"7"<.<{''0undcls'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'undeclares) undeclares] undeclares} undeclares'' undeclares" undeclares- undeclares, undeclares. undeclares; undeclares: undeclares? undeclares!'
  - 'undcls"> undcls.> undcls_> undcls,0undcls0 undcls- undcls1 undcls4 undcls; undcls03 undcls8 undcls!'

- - 'undeclares@ undeclares# undeclares$ undeclares% undeclares^ undeclares& undeclares* undeclares( undeclares_ undeclares= undeclares+ undeclares[ undeclares{ undeclares\\ undeclares| undeclares< undeclares> undeclares` undeclares~ undeclares/'
  - 'undcls`a undcls_? undcls`s undcls.0 undcls`5 undcls`& undcls"9 undcls"< undcls.- undcls"7 undcls"6 undcls.< undcls_< undcls_* undcls_| undcls`< undcls`> undcls."9 undcls`9 undcls/'
  - xfail: contraction followed by special characters is ignored

- - 'undcls) undcls] undcls} undcls'' undcls" undcls- undcls, undcls. undcls; undcls: undcls? undcls! undcls@ undcls# undcls$ undcls% undcls^ undcls& undcls* undcls( undcls_ undcls= undcls+ undcls[ undcls{ undcls\\ undcls| undcls< undcls> undcls` undcls~ undcls/'
  - ';undcls"> ;undcls.> ;undcls_> ;undcls,0;undcls0 ;undcls- ;undcls1 ;undcls4 ;undcls; ;undcls03 ;undcls8 ;undcls! ;undcls`a ;undcls_? ;undcls`s ;undcls.0 ;undcls`5 ;undcls`& ;undcls"9 ;undcls"< ;undcls.- ;undcls"7 ;undcls"6 ;undcls.< ;undcls_< ;undcls_* ;undcls_| ;undcls`< ;undcls>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'undeclares-xl undeclares-([{''"xl undeclares-/xl undeclares-$xl'
  - 'undcls-xl undcls-"<.<{''0xl undcls-_/xl undcls-`sxl'

- - 'undeclares(xl undeclares[xl undeclares{xl undeclares''xl undeclares"xl undeclares=([{''"-xl undeclares([{''"-xl undeclares/-xl undeclares$-xl'
  - 'undcls"<xl undcls.<xl undcls{xl undcls''xl undcls0xl undcls"7"<.<{''0-xl undcls"<.<{''0-xl undcls/-xl undcls`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(diss [diss {diss ''diss "diss -diss !diss .diss ,diss ;diss :diss ?diss *diss =diss +diss @diss #diss $diss %diss ^diss &diss )diss _diss ]diss }diss \\diss |diss <diss >diss `diss ~diss /diss'
  - '"<4s .<4s _<4s,8diss 8diss -diss !diss 4diss 1diss ;diss0 3diss ;8diss "94s "74s "64s `a4s _?4s `s4s .04s `54s `&4s ">4s .-4s .>4s _>4s _*4s _|4s `<4s `>4s ;84s .*4s `94s _/4s'
  - xfail: contraction following special characters and followed by "s"  is ignored

- - 'xl(diss xl[diss xl{diss'
  - 'xl"<4s xl.<4s xl{4s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'diss@ diss# diss$ diss% diss^ diss& diss* diss( diss_ diss= diss+ diss[ diss{ diss\\ diss| diss< diss> diss` diss~ diss/'
  - '4s`a 4s_? 4s`s 4s.0 4s`5 4s`& 4s"9 4s"< 4s.- 4s"7 4s"6 4s.< 4s_< 4s_* 4s_| 4s`< 4s`> 4s."9 4s`9 4s/'

- - 'diss) diss] diss} diss'' diss" diss- diss, diss. diss? diss! diss; diss:'
  - '4s"> 4s.> 4s_> diss,0diss0 diss- diss1 diss4 diss8 diss! diss; diss:'
  - xfail: contraction followed by "s" followed by special characters is ignored

- - 'diss(xl diss[diss diss{xl'
  - '4s"<xl 4s.<xl'

- - '(dist [dist {dist ''dist "dist -dist'
  - '"<4t .<4t _<4t,8dist 8dist -dist'

- - '!dist .dist ,dist ;dist :dist ?dist *dist =dist +dist @dist #dist $dist %dist ^dist &dist )dist _dist ]dist }dist \\dist |dist <dist >dist `dist ~dist /dist'
  - '!dist 4dist 1dist ;dist0 3dist ;8dist "94t "74t "64t `a4t _?4t `s4t .04t `54t `&4t ">4t .-4t .>4t _>4t _*4t _|4t `<4t `>4t ;84t .*4t `94t /4t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'xl(dist xl[dist xl{dist'
  - 'xl"<4t xl.<4t xl{4t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'dist) dist] dist} dist'' dist" dist- dist, dist. dist? dist! dist; dist: dist@ dist# dist$ dist% dist^ dist& dist* dist( dist_ dist= dist+ dist[ dist{ dist\\ dist| dist< dist> dist` dist~ dist/'
  - '4t"> 4t.> 4t_> dist,0dist0 dist- dist1 dist4 dist8 dist! dist; dist03 4t`a 4t_? 4t`s 4t.0 4t`5 4t`& 4t"9 4t"< 4t.- 4t"7 4t"6 4t.< 4t_< 4t_* 4t_| 4t`< 4t`> 4t."9 4t`9 4t/'

- - 'dist(xl dist[dist dist{xl'
  - '4t"<xl 4t.<xl'

- - '(do [do {do ''do "do -do'
  - '"<d .<d _<d,8d 8d -d'

- - '!do @do #do $do %do ^do &do *do )do _do =do +do ]do }do \\do |do .do ,do ;do :do ?do <do >do `do ~do /do'
  - '!d `ad _?d `sd .0d `5d `&d "9d ">d .-d "7d "6d .>d _>d _*d _|d 4d 1d ;d0 3d ;8d `<d `>d .*d `9d _/d'
  - xfail: contraction following special characters is ignored

- - '(d [d {d ''d "d -d'
  - '"<;d .<;d _<;d,8;d 8;d -;d'

- - '!d @d #d $d %d ^d &d *d )d _d =d +d ]d }d \\d |d .d ,d ;d :d ?d <d >d `d ~d /d'
  - '!;d `a;d _?;d `s;d .0;d `5;d `&;d "9;d ">;d .-;d "7;d "6;d .>;d _>;d _*;d _|;d 4;d 1;d ;2d0 3;d ;8;d `<;d `>;d .*;d `9;d _/;d'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-do xl-([{''"do xl/-do xl$-do'
  - 'xl-d xl-"<.<{''0d xl_/-d xl`s-d'

- - 'xl(do xl[do xl{do xl''do xl"do xl-=([{''"do'
  - 'xl"<d xl.<d xl{d xl''d xl0d xl-"7"<.<{''0d'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'do) do] do} do'' do" do- do, do. do; do: do? do!'
  - 'd"> d.> d_> d,0d0 d- d1 d4 d; d03 d8 d!'

- - 'do@ do# do$ do% do^ do& do* do( do_ do= do+ do[ do{ do\\ do| do< do> do` do~ do/'
  - 'd`a d_? d`s d.0 d`5 d`& d"9 d"< d.- d"7 d"6 d.< d_< d_* d_| d`< d`> d."9 d`9 d/'
  - xfail: contraction followed by special characters is ignored

- - 'd) d] d} d'' d" d- d, d. d; d: d? d!'
  - ';d"> ;d.> ;d_> ;d,0;d0 ;d- ;d1 ;d4 ;d; ;d03 ;d8 ;d!'

- - 'd@ d# d$ d% d^ d& d* d( d_ d= d+ d[ d{ d\\ d| d< d> d` d~ d/'
  - ';d`a ;d_? ;d`s ;d.0 ;d`5 ;d`& ;d"9 ;d"< ;d.- ;d"7 ;d"6 ;d.< ;d_< ;d_* ;d_| ;d`< ;d`> ;d."9 ;d`9 ;d/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'do-xl do-([{''"xl do-/xl do-$xl'
  - 'd-xl d-"<.<{''0xl d-_/xl d-`sxl'

- - 'do(xl do[xl do{xl do''xl do"xl do=([{''"-xl do([{''"-xl do/-xl do$-xl'
  - 'd"<xl d.<xl d{xl d''xl d0xl d"7"<.<{''0-xl d"<.<{''0-xl d/-xl d`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(either [either {either ''either "either -either'
  - '"<ei .<ei _<ei,8ei 8ei -ei'

- - '!either @either #either $either %either ^either &either *either )either _either =either +either ]either }either \\either |either .either ,either ;either :either ?either <either >either `either ~either /either'
  - '!ei `aei _?ei `sei .0ei `5ei `&ei "9ei ">ei .-ei "7ei "6ei .>ei }ei _*ei _|ei 4ei 1ei ;ei0 3ei ;8ei `<ei `>ei ;8ei .*ei `9ei _/ei'
  - xfail: contraction following special characters is ignored

- - '(ei [ei {ei ''ei "ei -ei'
  - '"<;ei .<;ei _<;ei,8;ei 8;ei -;ei'

- - '!ei @ei #ei $ei %ei ^ei &ei *ei )ei _ei =ei +ei ]ei }ei \\ei |ei .ei ,ei ;ei :ei ?ei <ei >ei ?ei `ei ~ei /ei'
  - '!;ei `a;ei _?;ei `s;ei .0;ei `5;ei `&;ei "9;ei ">;ei .-;ei "7;ei "6;ei .>;ei _>;ei _*;ei _|;ei 4;ei 1;ei ;2ei0 3;ei ;8;ei `<;ei `>;ei .*;ei `9;ei _/;ei'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-either xl-([{''"either xl/-either xl$-either'
  - 'xl-ei xl-"<.<{''0ei xl_/-ei xl`s-ei'

- - 'xl(either xl[either xl{either xl''either xl"either xl-=([{''"either'
  - 'xl"<ei xl.<ei xl{ei xl''ei xl0ei xl-"7"<.<{''0ei'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'either) either] either} either'' either" either- either, either. either; either: either? either!'
  - 'ei"> ei.> ei_> ei,0ei0 ei- ei1 ei4 ei; ei03 ei8 ei!'

- - 'either@ either# either$ either% either^ either& either* either( either_ either= either+ either[ either{ either\\ either| either< either> either` either~ either/'
  - 'ei`a ei_? ei`s ei.0 ei`5 ei`& ei"9 ei"< ei.- ei"7 ei"6 ei.< ei_< ei_* ei_| ei`< ei`> ei."9 ei`9 ei/'
  - xfail: contraction followed by special characters is ignored

- - 'ei) ei] ei} ei'' ei" ei- ei, ei. ei; ei: ei? ei!'
  - ';ei"> ;ei.> ;ei_> ;ei,0;ei0 ;ei- ;ei1 ;ei4 ;ei; ;ei03 ;ei8 ;ei!'

- - 'ei@ ei# ei$ ei% ei^ ei& ei* ei( ei_ ei= ei+ ei[ ei{ ei\\ ei| ei< ei> ei` ei~ ei/'
  - ';ei`a ;ei_? ;ei`s ;ei.0 ;ei`5 ;ei`& ;ei"9 ;ei"< ;ei.- ;ei"7 ;ei"6 ;ei.< ;ei_< ;ei_* ;ei_| ;ei`< ;ei`> ;ei."9 ;ei`9 ;ei/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'either-xl either-([{''"xl either-/xl either-$xl'
  - 'ei-xl ei-"<.<{''0xl ei-_/xl ei-`sxl'

- - 'either(xl either[xl either{xl either''xl either"xl either=([{''"-xl either([{''"-xl either/-xl either$-xl'
  - 'ei"<xl ei.<xl ei{xl ei''xl ei0xl ei"7"<.<{''0-xl ei"<.<{''0-xl ei/-xl ei`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(eithers [eithers {eithers ''eithers "eithers -eithers'
  - '"<eis .<eis _<eis,8eis 8eis -eis'

- - '!eithers @eithers #eithers $eithers %eithers ^eithers &eithers *eithers )eithers _eithers =eithers +eithers ]eithers }eithers \\eithers |eithers .eithers ,eithers ;eithers :eithers ?eithers <eithers >eithers `eithers ~eithers /eithers'
  - '!eis `aeis _?eis `seis .0eis `5eis `&eis "9eis ">eis .-eis "7eis "6eis .>eis _>eis _*eis _|eis 4eis 1eis ;eis0 3eis ;8eis `<eis `>eis ;8eis .*eis `9eis _/eis'
  - xfail: contraction following special characters is ignored

- - 'eis  (eis [eis {eis ''eis "eis -eis !eis @eis #eis $eis %eis ^eis &eis *eis )eis _eis =eis +eis ]eis }eis \\eis |eis .eis ,eis ;eis :eis ?eis <eis >eis ?eis `eis ~eis /eis'
  - ';eis  "<;eis .<;eis _<;eis,8;eis 8;eis -;eis !;eis `a;eis _?;eis `s;eis .0;eis `5;eis `&;eis "9;eis ">;eis .-;eis "7;eis "6;eis .>;eis _>;eis _*;eis _|;eis 4;eis 1;eis ;2eis0 3;eis ;8;eis `<;eis `>;eis .*;eis `9;eis _/;eis'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-eithers xl-([{''"eithers xl/-eithers xl$-eithers'
  - 'xl-eis xl-"<.<{''0eis xl_/-eis xl`s-eis'

- - 'xl(eithers xl[eithers xl{eithers xl''eithers xl"eithers xl-=([{''"eithers'
  - 'xl"<eis xl.<eis xl{eis xl''eis xl0eis xl-"7"<.<{''0eis'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'eithers) eithers] eithers} eithers'' eithers" eithers- eithers, eithers. eithers; eithers: eithers? eithers!'
  - 'eis"> eis.> eis_> eis,0eis0 eis- eis1 eis4 eis; eis03 eis8 eis!'

- - 'eithers@ eithers# eithers$ eithers% eithers^ eithers& eithers* eithers( eithers_ eithers= eithers+ eithers[ eithers{ eithers\\ eithers| eithers< eithers> eithers` eithers~ eithers/'
  - 'eis`a eis_? eis`s eis.0 eis`5 eis`& eis"9 eis"< eis.- eis"7 eis"6 eis.< eis_< eis_* eis_| eis`< eis`> eis."9 eis`9 eis/'
  - xfail: contraction followed by special characters is ignored

- - 'eis) eis] eis} eis'' eis" eis- eis, eis. eis; eis: eis? eis! eis@ eis# eis$ eis% eis^ eis& eis* eis( eis_ eis= eis+ eis[ eis{ eis\\ eis| eis< eis> eis` eis~ eis/'
  - ';eis"> ;eis.> ;eis_> ;eis,0;eis0 ;eis- ;eis1 ;eis4 ;eis; ;eis03 ;eis8 ;eis! ;eis`a ;eis_? ;eis`s ;eis.0 ;eis`5 ;eis`& ;eis"9 ;eis"< ;eis.- ;eis"7 ;eis"6 ;eis.< ;eis_< ;eis_* ;eis_| ;eis`< ;eis`> ;eis."9 ;eis`9 ;eis/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'eithers-xl eithers-([{''"xl eithers-/xl eithers-$xl'
  - 'eis-xl eis-"<.<{''0xl eis-_/xl eis-`sxl'

- - 'eithers(xl eithers[xl eithers{xl eithers''xl eithers"xl eithers=([{''"-xl eithers([{''"-xl eithers/-xl eithers$-xl'
  - 'eis"<xl eis.<xl eis{xl eis''xl eis0xl eis"7"<.<{''0-xl eis"<.<{''0-xl eis/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(enough [enough {enough ''enough "enough -enough !enough .enough ,enough ;enough :enough ?enough'
  - '"<5 .<5 _<5,85|< 85|< -5|< !5|< 45|< 15|< ;5|<0 35|< ;85|<'

- - '*enough =enough +enough @enough #enough $enough %enough ^enough &enough )enough _enough ]enough }enough \\enough |enough <enough >enough `enough ~enough /enough'
  - '"95 "75 "65 `a5 _?5 `s5 .05 `55 `&5 ">5 .-5 .>5 _>5 _*5 _|5 <5 `>5 ;85 .*5 `95 _/5'
  - xfail: contraction following special characters is ignored

- - 'xl(enough xl[enough xl{enough'
  - 'xl"<5 xl.<5 xl{5'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'enough) enough] enough} enough'' enough" enough- enough, enough. enough? enough!'
  - '5"> 5.> 5_> 5|<,05|<0 5|<- 5|<1 5|<4 5|<8 5|<!'

- - 'enough; enough: enough@ enough# enough$ enough% enough^ enough& enough* enough( enough_ enough= enough+ enough[ enough{ enough\\ enough| enough< enough> enough` enough~ enough/'
  - '5|<; 5|<03 5`a 5_? 5`s 5.0 5`5 5`& 5"9 5"< 5.- 5"7 5"6 5.< 5_< 5_* 5_| 5`< 5`> 5."9 5`9 5/'
  - xfail: contraction followed by special characters is ignored

- - 'enough(xl enough[enough enough{xl'
  - '5"<xl 5.<xl'
  - xfail: contraction followed by special characters following any letter is ignored

- - '(every [every {every ''every "every -every'
  - '"<e .<e _<e,8e 8e -e'

- - '!every @every #every $every %every ^every &every *every )every _every =every +every ]every }every \\every |every .every ,every ;every :every ?every <every >every `every ~every /every'
  - '!e `ae _?e `se .0e `5e `&e "9e ">e .-e "7e "6e .>e _>e _*e _|e 4e 1e ;e0 3e ;8e `<e `>e .*e `9e _/e'
  - xfail: contraction following special characters is ignored

- - '(e [e {e ''e "e -e'
  - '"<;e .<;e _<;e,8;e 8;e -;e'

- - '!e @e #e $e %e ^e &e *e )e _e =e +e ]e }e \\e |e .e ,e ;e :e ?e <e >e `e ~e /e'
  - '!;e `a;e _?;e `s;e .0;e `5;e `&;e "9;e ">;e .-;e "7;e "6;e .>;e _>;e _*;e _|;e 4;e 1;e ;2e0 3;e ;8;e `<;e `>;e .*;e `9;e _/;e'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-every xl-([{''"every xl/-every xl$-every'
  - 'xl-e xl-"<.<{''0e xl_/-e xl`s-e'

- - 'xl(every xl[every xl{every xl''every xl"every xl-=([{''"every'
  - 'xl"<e xl.<e xl{e xl''e xl0e xl-"7"<.<{''0e'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'every) every] every} every'' every" every- every, every. every; every: every? every!'
  - 'e"> e.> e_> e,0e0 e- e1 e4 e; e03 e8 e!'

- - 'every@ every# every$ every% every^ every& every* every( every_ every= every+ every[ every{ every\\ every| every< every> every` every~ every/'
  - 'e`a e_? e`s e.0 e`5 e`& e"9 e"< e.- e"7 e"6 e.< e_< e_* e_| e`< e`> e."9 e`9 e/'
  - xfail: contraction followed by special characters is ignored

- - 'e) e] e} e'' e" e- e, e. e; e: e? e!'
  - ';e"> ;e.> ;e_> ;e,0;e0 ;e- ;e1 ;e4 ;e; ;e03 ;e8 ;e!'

- - 'e@ e# e$ e% e^ e& e* e( e_ e= e+ e[ e{ e\\ e| e< e> e` e~ e/'
  - ';e`a ;e_? ;e`s ;e.0 ;e`5 ;e`& ;e"9 ;e"< ;e.- ;e"7 ;e"6 ;e.< ;e_< ;e_* ;e_| ;e`< ;e`> ;e."9 ;e`9 ;e/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'every-xl every-([{''"xl every-/xl every-$xl'
  - 'e-xl e-"<.<{''0xl e-_/xl e-`sxl'

- - 'every(xl every[xl every{xl every''xl every"xl every=([{''"-xl every([{''"-xl every/-xl every$-xl'
  - 'e"<xl e.<xl e{xl e''xl e0xl e"7"<.<{''0-xl e"<.<{''0-xl e/-xl e`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(first [first {first ''first "first -first'
  - '"<f/ .<f/ _<f/,8f/ 8f/ -f/'

- - '!first @first #first $first %first ^first &first *first )first _first =first +first ]first }first \\first |first .first ,first ;first :first ?first <first >first `first ~first /first'
  - '!f/ `af/ _?f/ `sf/ .0f/ `5f/ `&f/ "9f/ ">f/ .-f/ "7f/ "6f/ .>f/ _>f/ _*f/ _|f/ 4f/ 1f/ ;f/0 3f/ ;8f/ `<f/ `>f/ ;8f/ .*f/ `9f/ /f/'
  - xfail: contraction following special characters is ignored

- - '(fst [fst {fst ''fst "fst -fst !fsts @fsts #fsts $fsts %fsts ^fsts &fsts *fsts )fsts _fsts =fsts +fsts ]fsts }fsts \\fsts |fsts .fsts ,fsts ;fsts :fsts ?fsts <fsts >fsts `fsts ~fsts /fsts'
  - '"<fst .<fst _<fst,8fst 8fst -fst !fsts `afsts _?fsts `sfsts .0fsts `5fsts `&fsts "9fsts ">fsts .-fsts "7fsts "6fsts .>fsts _>fsts _*fsts _|fsts 4fsts 1fsts ;fsts0 3fsts ;8fsts `<fsts `>fsts .*fsts `9fsts _/fsts'

- - '!fst @fst #fst $fst %fst ^fst &fst *fst )fst _fst =fst +fst ]fst }fst \\fst |fst .fst ,fst ;fst :fst ?fst <fst >fst `fst ~fst /fst'
  - '!fst `afst _?fst `sfst .0fst `5fst `&fst "9fst ">fst .-fst "7fst "6fst .>fst _>fst _*fst _|fst 4fst 1fst ;fst0 3fst ;8fst `<fst `>fst .*fst `9fst /fst'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-first xl-([{''"first xl/-first xl$-first'
  - 'xl-f/ xl-"<.<{''0f/ xl/-f/ xl`s-f/'

- - 'xl(first xl[first xl{first xl''first xl"first xl-=([{''"first'
  - 'xl"<f/ xl.<f/ xl{f/ xl''f/ xl0f/ xl-"7"<.<{''0f/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'first) first] first} first'' first" first- first, first. first; first: first? first!'
  - 'f/"> f/.> f/_> f/,0f/0 f/- f/1 f/4 f/; f/03 f/8 f/!'

- - 'first@ first# first$ first% first^ first& first* first( first_ first= first+ first[ first{ first\\ first| first< first> first` first~ first/'
  - 'f/`a f/_? f/`s f/.0 f/`5 f/`& f/"9 f/"< f/.- f/"7 f/"6 f/.< f/_< f/_* f/_| f/`< f/`> f/."9 f/`9 f//'
  - xfail: contraction followed by special characters is ignored

- - 'fst) fst] fst} fst'' fst" fst- fst, fst. fst; fst: fst? fst!'
  - 'fst"> fst.> fst_> fst,0fst0 fst- fst1 fst4 fst; fst03 fst8 fst!'

- - 'fst@ fst# fst$ fst% fst^ fst& fst* fst( fst_ fst= fst+ fst[ fst{ fst\\ fst| fst< fst> fst` fst~ fst/'
  - 'fst`a fst_? fst`s fst.0 fst`5 fst`& fst"9 fst"< fst.- fst"7 fst"6 fst.< fst_< fst_* fst_| fst`< fst`> fst."9 fst`9 fst/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'first-xl first-([{''"xl first-/xl first-$xl'
  - 'f/-xl f/-"<.<{''0xl f/-_/xl f/-`sxl'

- - 'first(xl first[xl first{xl first''xl first"xl first=([{''"-xl first([{''"-xl first/-xl first$-xl'
  - 'f/"<xl f/.<xl f/{xl f/''xl f/0xl f/"7"<.<{''0-xl f/"<.<{''0-xl f//-xl f/`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(firsts [firsts {firsts ''firsts "firsts -firsts'
  - '"<f/s .<f/s _<f/s,8f/s 8f/s -f/s'

- - '!firsts @firsts #firsts $firsts %firsts ^firsts &firsts *firsts )firsts _firsts =firsts +firsts ]firsts }firsts \\firsts |firsts .firsts ,firsts ;firsts :firsts ?firsts <firsts >firsts `firsts ~firsts /firsts'
  - '!f/s `af/s _?f/s `sf/s .0f/s `5f/s `&f/s "9f/s ">f/s .-f/s "7f/s "6f/s .>f/s _>f/s _*f/s _|f/s 4f/s 1f/s ;f/s0 3f/s ;8f/s `<f/s `>f/s ;8f/s .*f/s `9f/s _/f/s'
  - xfail: contraction following special characters is ignored

- - 'fsts (fsts [fsts {fsts ''fsts "fsts -fsts'
  - 'fsts "<fsts .<fsts _<fsts,8fsts 8fsts -fsts'
  - xfail: non-contraction of "fsts" conflicts witcv contraction of "firsts"

- - 'xl-firsts xl-([{''"firsts xl/-firsts xl$-firsts'
  - 'xl-f/s xl-"<.<{''0f/s xl_/-f/s xl`s-f/s'

- - 'xl(firsts xl[firsts xl{firsts xl''firsts xl"firsts xl-=([{''"firsts'
  - 'xl"<f/s xl.<f/s xl{f/s xl''f/s xl0f/s xl-"7"<.<{''0f/s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'firsts) firsts] firsts} firsts'' firsts" firsts- firsts, firsts. firsts; firsts: firsts? firsts!'
  - 'f/s"> f/s.> f/s_> f/s,0f/s0 f/s- f/s1 f/s4 f/s; f/s03 f/s8 f/s!'

- - 'firsts@ firsts# firsts$ firsts% firsts^ firsts& firsts* firsts( firsts_ firsts= firsts+ firsts[ firsts{ firsts\\ firsts| firsts< firsts> firsts` firsts~ firsts/'
  - 'f/s`a f/s_? f/s`s f/s.0 f/s`5 f/s`& f/s"9 f/s"< f/s.- f/s"7 f/s"6 f/s.< f/s_< f/s_* f/s_| f/s`< f/s`> f/s."9 f/s`9 f/s/'
  - xfail: contraction followed by special characters is ignored

- - 'fsts) fsts] fsts} fsts'' fsts" fsts- fsts, fsts. fsts; fsts: fsts? fsts! fsts@ fsts# fsts$ fsts% fsts^ fsts& fsts* fsts( fsts_ fsts= fsts+ fsts[ fsts{ fsts\\ fsts| fsts< fsts> fsts` fsts~ fsts/'
  - 'fsts"> fsts.> fsts_> fsts,0fsts0 fsts- fsts1 fsts4 fsts; fsts03 fsts8 fsts! fsts`a fsts_? fsts`s fsts.0 fsts`5 fsts`& fsts"9 fsts"< fsts.- fsts"7 fsts"6 fsts.< fsts_< fsts_* fsts_| fsts`< fsts`> fsts."9 fsts`9 fsts/'
  - xfail: non-contraction of "fsts" conflicts with contraction of "firsts"

- - 'firsts-xl firsts-([{''"xl firsts-/xl firsts-$xl'
  - 'f/s-xl f/s-"<.<{''0xl f/s-_/xl f/s-`sxl'

- - 'firsts(xl firsts[xl firsts{xl firsts''xl firsts"xl firsts=([{''"-xl firsts([{''"-xl firsts/-xl firsts$-xl'
  - 'f/s"<xl f/s.<xl f/s{xl f/s''xl f/s0xl f/s"7"<.<{''0-xl f/s"<.<{''0-xl f/s/-xl f/s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'firstb firstc firstd firstf firstg firsth firstj firstk firstl firstm firstn firstp firstq firstr firsts firstt firstv firstw firstx firstz'
  - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz'

- - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz fstful fstment fstness fstsion fsttion fstless fstance fstence fstity fstong'
  - 'fstb fstc fstd fstf fstg fsth fstj fstk fstl fstm fstn fstp fstq fstr fsts fstt fstv fstw fstx fstz fstful fstment fstness fstsion fsttion fstless fstance fstence fstity fstong'
  - xfail: non-contraction of "fst" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "fst"

- - '(friend [friend {friend ''friend "friend -friend'
  - '"<fr .<fr _<fr,8fr 8fr -fr'

- - '!friend @friend #friend $friend %friend ^friend &friend *friend )friend _friend =friend +friend ]friend }friend \\friend |friend .friend ,friend ;friend :friend ?friend <friend >friend `friend ~friend /friend'
  - '!fr `afr _?fr `sfr .0fr `5fr `&fr "9fr ">fr .-fr "7fr "6fr .>fr _>fr _*fr _|fr 4fr 1fr ;fr0 3fr ;8fr `<fr `>fr ;8fr .*fr `9fr _/fr'
  - xfail: contraction following special characters is ignored

- - '(fr [fr {fr ''fr "fr -fr'
  - '"<;fr .<;fr _<;fr,8;fr 8;fr -;fr'

- - '!fr @fr #fr $fr %fr ^fr &fr *fr )fr _fr =fr +fr ]fr }fr \\fr |fr .fr ,fr ;fr :fr ?fr <fr >fr ?fr `fr ~fr /fr'
  - '!;fr `a;fr _?;fr `s;fr .0;fr `5;fr `&;fr "9;fr ">;fr .-;fr "7;fr "6;fr .>;fr _>;fr _*;fr _|;fr 4;fr 1;fr ;2fr0 3;fr ;8;fr `<;fr `>;fr .*;fr `9;fr _/;fr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-friend xl-([{''"friend xl/-friend xl$-friend'
  - 'xl-fr xl-"<.<{''0fr xl_/-fr xl`s-fr'

- - 'xl(friend xl[friend xl{friend xl''friend xl"friend xl-=([{''"friend'
  - 'xl"<fr xl.<fr xl{fr xl''fr xl0fr xl-"7"<.<{''0fr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'friend) friend] friend} friend'' friend" friend- friend, friend. friend; friend: friend? friend!'
  - 'fr"> fr.> fr_> fr,0fr0 fr- fr1 fr4 fr; fr03 fr8 fr!'

- - 'friend@ friend# friend$ friend% friend^ friend& friend* friend( friend_ friend= friend+ friend[ friend{ friend\\ friend| friend< friend> friend` friend~ friend/'
  - 'fr`a fr_? fr`s fr.0 fr`5 fr`& fr"9 fr"< fr.- fr"7 fr"6 fr.< fr_< fr_* fr_| fr`< fr`> fr."9 fr`9 fr/'
  - xfail: contraction followed by special characters is ignored

- - 'fr) fr] fr} fr'' fr" fr- fr, fr. fr; fr: fr? fr!'
  - ';fr"> ;fr.> ;fr_> ;fr,0;fr0 ;fr- ;fr1 ;fr4 ;fr; ;fr03 ;fr8 ;fr!'

- - 'fr@ fr# fr$ fr% fr^ fr& fr* fr( fr_ fr= fr+ fr[ fr{ fr\\ fr| fr< fr> fr` fr~ fr/'
  - ';fr`a ;fr_? ;fr`s ;fr.0 ;fr`5 ;fr`& ;fr"9 ;fr"< ;fr.- ;fr"7 ;fr"6 ;fr.< ;fr_< ;fr_* ;fr_| ;fr`< ;fr`> ;fr."9 ;fr`9 ;fr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'friend-xl friend-([{''"xl friend-/xl friend-$xl'
  - 'fr-xl fr-"<.<{''0xl fr-_/xl fr-`sxl'

- - 'friend(xl friend[xl friend{xl friend''xl friend"xl friend=([{''"-xl friend([{''"-xl friend/-xl friend$-xl'
  - 'fr"<xl fr.<xl fr{xl fr''xl fr0xl fr"7"<.<{''0-xl fr"<.<{''0-xl fr/-xl fr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'friendb friendc friendd friendf friendg friendh friendj friendk friendl friendm friendn friendp friendq friendr friends friendt friendv friendw friendx friendz'
  - 'frb frc frd frf frg frh frj frk frl frm frn frp frq frr frs frt frv frw frx frz'

- - 'frb frc frd frf frg frh frj frk frl frm frn frp frq frr frs frt frv frw frx frz frful frment frness frsion frtion frless france frence frity frong'
  - ';frb ;frc ;frd ;frf ;frg ;frh ;frj ;frk ;frl ;frm ;frn ;frp ;frq ;frr ;frs ;frt ;frv ;frw ;frx ;frz ;fr;l ;fr;t ;fr;s ;fr4n ;fr;n ;fr4s ;fr4e ;fr;e ;fr;y ;fr;g'
  - xfail: non-contraction of "fr" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "fr"

- - 'afriend afriendaid'
  - ';afr a;fraid'
  - xfail: contraction of "fr" following "a" has a missing grade 1 indicator before "a" due to conflict with contraction of "af" followed by "r"

- - 'bfriend cfriend dfriend efriend  ffriend gfriend hfriend ifriend jfriend kfriend lfriend  mfriend nfriend pfriend qfriend rfriend sfriend tfriend ufriend  vfriend wfriend xfriend yfriend zfriend'
  - 'bfr cfr dfr efr  ffr gfr hfr ifr jfr kfr lfr  mfr nfr pfr qfr rfr sfr tfr ufr  vfr wfr xfr yfr zfr'

- - 'afr bfr cfr dfr efr  ffr gfr hfr ifr jfr kfr lfr  mfr nfr fr pfr qfr rfr sfr tfr ufr  vfr wfr xfr yfr zfr'
  - 'a;fr b;fr c;fr d;fr e;fr  f;fr g;fr h;fr i;fr j;fr k;fr l;fr  m;fr n;fr p;fr q;fr r;fr s;fr t;fr u;fr  v;fr w;fr x;fr y;fr z;fr'
  - xfail: non-contraction of "fr" following letter except "o" has a missing grade 1 indicator due to conflict with contraction of "fr"

- - '(from [from {from ''from "from -from'
  - '"<f .<f _<f,8f 8f -f'

- - '!from @from #from $from %from ^from &from *from )from _from =from +from ]from }from \\from |from .from ,from ;from :from ?from <from >from `from ~from /from'
  - '!f `af _?f `sf .0f `5f `&f "9f ">f .-f "7f "6f .>f _>f _*f _|f 4f 1f ;f0 3f ;8f `<f `>f .*f `9f _/f'
  - xfail: contraction following special characters is ignored

- - '(f [f {f ''f "f -f'
  - '"<;f .<;f _<;f,8;f 8;f -;f'

- - '!f @f #f $f %f ^f &f *f )f _f =f +f ]f }f \\f |f .f ,f ;f :f ?f <f >f `f ~f /f'
  - '!;f `a;f _?;f `s;f .0;f `5;f `&;f "9;f ">;f .-;f "7;f "6;f .>;f _>;f _*;f _|;f 4;f 1;f ;2f0 3;f ;8;f `<;f `>;f .*;f `9;f _/;f'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-from xl-([{''"from xl/-from xl$-from'
  - 'xl-f xl-"<.<{''0f xl_/-f xl`s-f'

- - 'xl(from xl[from xl{from xl''from xl"from xl-=([{''"from'
  - 'xl"<f xl.<f xl{f xl''f xl0f xl-"7"<.<{''0f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'from) from] from} from'' from" from- from, from. from; from: from? from!'
  - 'f"> f.> f_> f,0f0 f- f1 f4 f; f03 f8 f!'

- - 'from@ from# from$ from% from^ from& from* from( from_ from= from+ from[ from{ from\\ from| from< from> from` from~ from/'
  - 'f`a f_? f`s f.0 f`5 f`& f"9 f"< f.- f"7 f"6 f.< f_< f_* f_| f`< f`> f."9 f`9 f/'
  - xfail: contraction followed by special characters is ignored

- - 'f) f] f} f'' f" f- f, f. f; f: f? f!'
  - ';f"> ;f.> ;f_> ;f,0;f0 ;f- ;f1 ;f4 ;f; ;f03 ;f8 ;f!'

- - 'f@ f# f$ f% f^ f& f* f( f_ f= f+ f[ f{ f\\ f| f< f> f` f~ f/'
  - ';f`a ;f_? ;f`s ;f.0 ;f`5 ;f`& ;f"9 ;f"< ;f.- ;f"7 ;f"6 ;f.< ;f_< ;f_* ;f_| ;f`< ;f`> ;f."9 ;f`9 ;f/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'from-xl from-([{''"xl from-/xl from-$xl'
  - 'f-xl f-"<.<{''0xl f-_/xl f-`sxl'

- - 'from(xl from[xl from{xl from''xl from"xl from=([{''"-xl from([{''"-xl from/-xl from$-xl'
  - 'f"<xl f.<xl f{xl f''xl f0xl f"7"<.<{''0-xl f"<.<{''0-xl f/-xl f`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '!gh @gh #gh $gh %gh ^gh &gh *gh )gh _gh =gh +gh ]gh }gh \\gh |gh .gh ,gh ;gh :gh ?gh <gh >gh `gh ~gh /gh'
  - '!< `a< _?< `s< .0< `5< `&< "9< ">< .-< "7< "6< .>< _>< _*< _|< 4< 1< ;<0 3< ;8< `<< `>< .*< `9< _/<'

- - 'gh (gh [gh {gh ''gh "gh -gh'
  - '< "<< .<< _<<,8< 8< -<'
  - xfail: contraction following special characters is ignored

- - 'xl(gh xl[gh xl{gh xl''gh xl"gh xl-=([{''"gh'
  - 'xl"<< xl.<< xl{< xl''< xl0< xl-"7"<.<{''0<'

- - 'xl-gh xl-([{''"gh xl/-gh xl$-gh'
  - 'xl-< xl-"<.<{''0< xl_/-< xl`s-<'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'gh@ gh# gh$ gh% gh^ gh& gh* gh( gh_ gh= gh+ gh[ gh{ gh\\ gh| gh< gh> gh` gh~ gh/'
  - '<`a <_? <`s <.0 <`5 <`& <"9 <"< <.- <"7 <"6 <.< <_< <_* <_| <`< <`> <."9 <`9 </'

- - 'gh) gh] gh} gh'' gh" gh- gh, gh. gh; gh: gh? gh!'
  - '<"> <.> <_> <,0<0 <- <1 <4 <; <03 <8 <!'
  - xfail: contraction followed by special characters is ignored

- - 'gh(xl gh[xl gh{xl gh''xl gh"xl gh=([{''"-xl gh([{''"-xl gh/-xl gh$-xl'
  - '<"<xl <.<xl <{xl <''xl <0xl <"7"<.<{''0-xl <"<.<{''0-xl </-xl <`s-xl'

- - 'gh-xl gh-([{''"xl gh-/xl gh-$xl'
  - '<-xl <-"<.<{''0xl <-_/xl <-`sxl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(go [go {go ''go "go -go'
  - '"<g .<g _<g,8g 8g -g'

- - '!go @go #go $go %go ^go &go *go )go _go =go +go ]go }go \\go |go .go ,go ;go :go ?go <go >go `go ~go /go'
  - '!g `ag _?g `sg .0g `5g `&g "9g ">g .-g "7g "6g .>g _>g _*g _|g 4g 1g ;g0 3g ;8g `<g `>g .*g `9g _/g'
  - xfail: contraction following special characters is ignored

- - '(g [g {g ''g "g -g'
  - '"<;g .<;g _<;g,8;g 8;g -;g'

- - '!g @g #g $g %g ^g &g *g )g _g =g +g ]g }g \\g |g .g ,g ;g :g ?g <g >g `g ~g /g'
  - '!;g `a;g _?;g `s;g .0;g `5;g `&;g "9;g ">;g .-;g "7;g "6;g .>;g _>;g _*;g _|;g 4;g 1;g ;2g0 3;g ;8;g `<;g `>;g .*;g `9;g _/;g'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-go xl-([{''"go xl/-go xl$-go'
  - 'xl-g xl-"<.<{''0g xl_/-g xl`s-g'

- - 'xl(go xl[go xl{go xl''go xl"go xl-=([{''"go'
  - 'xl"<g xl.<g xl{g xl''g xl0g xl-"7"<.<{''0g'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'go) go] go} go'' go" go- go, go. go; go: go? go!'
  - 'g"> g.> g_> g,0g0 g- g1 g4 g; g03 g8 g!'

- - 'go@ go# go$ go% go^ go& go* go( go_ go= go+ go[ go{ go\\ go| go< go> go` go~ go/'
  - 'g`a g_? g`s g.0 g`5 g`& g"9 g"< g.- g"7 g"6 g.< g_< g_* g_| g`< g`> g."9 g`9 g/'
  - xfail: contraction followed by special characters is ignored

- - 'g) g] g} g'' g" g- g, g. g; g: g? g!'
  - ';g"> ;g.> ;g_> ;g,0;g0 ;g- ;g1 ;g4 ;g; ;g03 ;g8 ;g!'

- - 'g@ g# g$ g% g^ g& g* g( g_ g= g+ g[ g{ g\\ g| g< g> g` g~ g/'
  - ';g`a ;g_? ;g`s ;g.0 ;g`5 ;g`& ;g"9 ;g"< ;g.- ;g"7 ;g"6 ;g.< ;g_< ;g_* ;g_| ;g`< ;g`> ;g."9 ;g`9 ;g/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'go-xl go-([{''"xl go-/xl go-$xl'
  - 'g-xl g-"<.<{''0xl g-_/xl g-`sxl'

- - 'go(xl go[xl go{xl go''xl go"xl go=([{''"-xl go([{''"-xl go/-xl go$-xl'
  - 'g"<xl g.<xl g{xl g''xl g0xl g"7"<.<{''0-xl g"<.<{''0-xl g/-xl g`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(good [good {good ''good "good -good'
  - '"<gd .<gd _<gd,8gd 8gd -gd'

- - '!good @good #good $good %good ^good &good *good )good _good =good +good ]good }good \\good |good .good ,good ;good :good ?good <good >good `good ~good /good'
  - '!gd `agd _?gd `sgd .0gd `5gd `&gd "9gd ">gd .-gd "7gd "6gd .>gd _>gd _*gd _|gd 4gd 1gd ;gd0 3gd ;8gd `<gd `>gd ;8gd .*gd `9gd _/gd'
  - xfail: contraction following special characters is ignored

- - '(gd [gd {gd ''gd "gd -gd'
  - '"<;gd .<;gd _<;gd,8;gd 8;gd -;gd'

- - '!gd @gd #gd $gd %gd ^gd &gd *gd )gd _gd =gd +gd ]gd }gd \\gd |gd .gd ,gd ;gd :gd ?gd <gd >gd ?gd `gd ~gd /gd'
  - '!;gd `a;gd _?;gd `s;gd .0;gd `5;gd `&;gd "9;gd ">;gd .-;gd "7;gd "6;gd .>;gd _>;gd _*;gd _|;gd 4;gd 1;gd ;2gd0 3;gd ;8;gd `<;gd `>;gd .*;gd `9;gd _/;gd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-good xl-([{''"good xl/-good xl$-good'
  - 'xl-gd xl-"<.<{''0gd xl_/-gd xl`s-gd'

- - 'xl(good xl[good xl{good xl''good xl"good xl-=([{''"good'
  - 'xl"<gd xl.<gd xl{gd xl''gd xl0gd xl-"7"<.<{''0gd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'good) good] good} good'' good" good- good, good. good; good: good? good!'
  - 'gd"> gd.> gd_> gd,0gd0 gd- gd1 gd4 gd; gd03 gd8 gd!'

- - 'good@ good# good$ good% good^ good& good* good( good_ good= good+ good[ good{ good\\ good| good< good> good` good~ good/'
  - 'gd`a gd_? gd`s gd.0 gd`5 gd`& gd"9 gd"< gd.- gd"7 gd"6 gd.< gd_< gd_* gd_| gd`< gd`> gd."9 gd`9 gd/'
  - xfail: contraction followed by special characters is ignored

- - 'gd) gd] gd} gd'' gd" gd- gd, gd. gd; gd: gd? gd!'
  - ';gd"> ;gd.> ;gd_> ;gd,0;gd0 ;gd- ;gd1 ;gd4 ;gd; ;gd03 ;gd8 ;gd!'

- - 'gd@ gd# gd$ gd% gd^ gd& gd* gd( gd_ gd= gd+ gd[ gd{ gd\\ gd| gd< gd> gd` gd~ gd/'
  - ';gd`a ;gd_? ;gd`s ;gd.0 ;gd`5 ;gd`& ;gd"9 ;gd"< ;gd.- ;gd"7 ;gd"6 ;gd.< ;gd_< ;gd_* ;gd_| ;gd`< ;gd`> ;gd."9 ;gd`9 ;gd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'good-xl good-([{''"xl good-/xl good-$xl'
  - 'gd-xl gd-"<.<{''0xl gd-_/xl gd-`sxl'

- - 'good(xl good[xl good{xl good''xl good"xl good=([{''"-xl good([{''"-xl good/-xl good$-xl'
  - 'gd"<xl gd.<xl gd{xl gd''xl gd0xl gd"7"<.<{''0-xl gd"<.<{''0-xl gd/-xl gd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'goodb goodc goodd goodf goodg goodh goodj goodk goodl goodm goodn goodp goodq goodr goods goodt goodv goodw goodx goodz'
  - 'gdb gdc gdd gdf gdg gdh gdj gdk gdl gdm gdn gdp gdq gdr gds gdt gdv gdw gdx gdz'

- - 'gdb gdc gdd gdf gdg gdh gdj gdk gdl gdm gdn gdp gdq gdr gds gdt gdv gdw gdx gdz gdful gdment gdness gdsion gdtion gdless gdance gdence gdity gdong'
  - ';gdb ;gdc ;gdd ;gdf ;gdg ;gdh ;gdj ;gdk ;gdl ;gdm ;gdn ;gdp ;gdq ;gdr ;gds ;gdt ;gdv ;gdw ;gdx ;gdz ;gd;l ;gd;t ;gd;s ;gd4n ;gd;n ;gd4s ;gd4e ;gd;e ;gd;y ;gd;g'
  - xfail: non-contraction of "gd" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "gd"

- - '(great [great {great ''great "great -great'
  - '"<grt .<grt _<grt,8grt 8grt -grt'

- - '!great @great #great $great %great ^great &great *great )great _great =great +great ]great }great \\great |great .great ,great ;great :great ?great <great >great `great ~great /great'
  - '!grt `agrt _?grt `sgrt .0grt `5grt `&grt "9grt ">grt .-grt "7grt "6grt .>grt _>grt _*grt _|grt 4grt 1grt grt0 3grt ;8grt `<grt `>grt .*grt `9grt _/grt'
  - xfail: contraction following special characters is ignored

- - '(grt [grt {grt ''grt "grt -grt'
  - '"<;grt .<;grt _<;grt,8;grt 8;grt -;grt'

- - '!grt @grt #grt $grt %grt ^grt &grt *grt )grt _grt =grt +grt ]grt }grt \\grt |grt .grt ,grt ;grt :grt ?grt <grt >grt `grt ~grt /grt'
  - '!;grt `a;grt _?;grt `s;grt .0;grt `5;grt `&;grt "9;grt ">;grt .-;grt "7;grt "6;grt .>;grt _>;grt _*;grt _|;grt 4;grt 1;grt ;2grt0 3;grt ;8;grt `<;grt `>;grt .*;grt `9;grt _/;grt'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-great xl-([{''"great xl/-great xl$-great'
  - 'xl-grt xl-"<.<{''0grt xl_/-grt xl`s-grt'

- - 'xl(great xl[great xl{great xl''great xl"great xl-=([{''"great'
  - 'xl"<grt xl.<grt xl{grt xl''grt xl0grt xl-"7"<.<{''0grt'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'great) great] great} great'' great" great- great, great. great; great: great? great!'
  - 'grt"> grt.> grt_> grt,0grt0 grt- grt1 grt4 grt; grt03 grt8 grt!'

- - 'great@ great# great$ great% great^ great& great* great( great_ great= great+ great[ great{ great\\ great| great< great> great` great~ great/'
  - 'grt`a grt_? grt`s grt.0 grt`5 grt`& grt"9 grt"< grt.- grt"7 grt"6 grt.< grt_< grt_* grt_| grt`< grt`> grt."9 grt`9 grt/'
  - xfail: contraction followed by special characters is ignored

- - 'grt) grt] grt} grt'' grt" grt- grt, grt. grt; grt: grt? grt!'
  - ';grt"> ;grt.> ;grt_> ;grt,0;grt0 ;grt- ;grt1 ;grt4 ;grt; ;grt03 ;grt8 ;grt!'

- - 'grt@ grt# grt$ grt% grt^ grt& grt* grt( grt_ grt= grt+ grt[ grt{ grt\\ grt| grt< grt> grt` grt~ grt/'
  - ';grt`a ;grt_? ;grt`s ;grt.0 ;grt`5 ;grt`& ;grt"9 ;grt"< ;grt.- ;grt"7 ;grt"6 ;grt.< ;grt_< ;grt_* ;grt_| ;grt`< ;grt`> ;grt."9 ;grt`9 ;grt/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'great-xl great-([{''"xl great-/xl great-$xl'
  - 'grt-xl grt-"<.<{''0xl grt-_/xl grt-`sxl'

- - 'great(xl great[xl great{xl great''xl great"xl great=([{''"-xl great([{''"-xl great/-xl great$-xl'
  - 'grt"<xl grt.<xl grt{xl grt''xl grt0xl grt"7"<.<{''0-xl grt"<.<{''0-xl grt/-xl grt`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'greata greatb greatc greatd greate greatf greatg greath greati greatj greatk greatl greatm greatn greato greatp greatq greatr greats greatt greatu greatv greatw greatx greaty greatz'
  - 'grta grtb grtc grtd grte grtf grtg grth grti grtj grtk grtl grtm grtn grto grtp grtq grtr grts grtt grtu grtv grtw grtx grty grtz'

- - 'grta grtb grtc grtd grte grtf grtg grth grti grtj grtk grtl grtm grtn grto grtp grtq grtr grts grtt grtu grtv grtw grtx grty grtz'
  - ';grta ;grtb ;grtc ;grtd ;grte ;grtf ;grtg ;grth ;grti ;grtj ;grtk ;grtl ;grtm ;grtn ;grto ;grtp ;grtq ;grtr ;grts ;grtt ;grtu ;grtv ;grtw ;grtx ;grty ;grtz'
  - xfail: non-contraction of "grt" followed by letter has a missing grade 1 indicator due to conflict with contraction of "great"

- - 'agreat bgreat cgreat dgreat egreat  fgreat ggreat hgreat igreat jgreat kgreat lgreat  mgreat ngreat ogreat pgrt qgreat rgreat sgreat tgreat ugreat  vgreat wgreat xgreat ygreat zgreat'
  - 'agrt bgrt cgrt dgrt egrt  fgrt ggrt hgrt igrt jgrt kgrt lgrt  mgrt ngrt ogrt pgrt qgrt rgrt sgrt tgrt ugrt  vgrt wgrt xgrt ygrt zgrt'

- - 'agrt bgrt cgrt dgrt egrt  fgrt ggrt hgrt igrt jgrt kgrt lgrt  mgrt ngrt ogrt pgrt qgrt rgrt sgrt tgrt ugrt  vgrt wgrt xgrt ygrt zgrt'
  - 'a;grt b;grt c;grt d;grt e;grt  f;grt g;grt h;grt i;grt j;grt k;grt l;grt  m;grt n;grt o;grt p;grt q;grt r;grt s;grt t;grt u;grt  v;grt w;grt x;grt y;grt z;grt'
  - xfail: non-contraction of grt" following letter has a missing grade 1 indicator due to conflict with contraction of "great"

- - '(have [have {have ''have "have -have'
  - '"<h .<h _<h,8h 8h -h'

- - '!have @have #have $have %have ^have &have *have )have _have =have +have ]have }have \\have |have .have ,have ;have :have ?have <have >have `have ~have /have'
  - '!h `ah _?h `sh .0h `5h `&h "9h ">h .-h "7h "6h .>h _>h _*h _|h 4h 1h ;h0 3h ;8h `<h `>h .*h `9h _/h'
  - xfail: contraction following special characters is ignored

- - '(h [h {h ''h "h -h'
  - '"<;h .<;h _<;h,8;h 8;h -;h'

- - '!h @h #h $h %h ^h &h *h )h _h =h +h ]h }h \\h |h .h ,h ;h :h ?h <h >h `h ~h /h'
  - '!;h `a;h _?;h `s;h .0;h `5;h `&;h "9;h ">;h .-;h "7;h "6;h .>;h _>;h _*;h _|;h 4;h 1;h ;2h0 3;h ;8;h `<;h `>;h .*;h `9;h _/;h'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-have xl-([{''"have xl/-have xl$-have'
  - 'xl-h xl-"<.<{''0h xl_/-h xl`s-h'

- - 'xl(have xl[have xl{have xl''have xl"have xl-=([{''"have'
  - 'xl"<h xl.<h xl{h xl''h xl0h xl-"7"<.<{''0h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'have) have] have} have'' have" have- have, have. have; have: have? have!'
  - 'h"> h.> h_> h,0h0 h- h1 h4 h; h03 h8 h!'

- - 'have@ have# have$ have% have^ have& have* have( have_ have= have+ have[ have{ have\\ have| have< have> have` have~ have/'
  - 'h`a h_? h`s h.0 h`5 h`& h"9 h"< h.- h"7 h"6 h.< h_< h_* h_| h`< h`> h."9 h`9 h/'
  - xfail: contraction followed by special characters is ignored

- - 'h) h] h} h'' h" h- h, h. h; h: h? h!'
  - ';h"> ;h.> ;h_> ;h,0;h0 ;h- ;h1 ;h4 ;h; ;h03 ;h8 ;h!'

- - 'h@ h# h$ h% h^ h& h* h( h_ h= h+ h[ h{ h\\ h| h< h> h` h~ h/'
  - ';h`a ;h_? ;h`s ;h.0 ;h`5 ;h`& ;h"9 ;h"< ;h.- ;h"7 ;h"6 ;h.< ;h_< ;h_* ;h_| ;h`< ;h`> ;h."9 ;h`9 ;h/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'have-xl have-([{''"xl have-/xl have-$xl'
  - 'h-xl h-"<.<{''0xl h-_/xl h-`sxl'

- - 'have(xl have[xl have{xl have''xl have"xl have=([{''"-xl have([{''"-xl have/-xl have$-xl'
  - 'h"<xl h.<xl h{xl h''xl h0xl h"7"<.<{''0-xl h"<.<{''0-xl h/-xl h`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(herself [herself {herself ''herself "herself -herself'
  - '"<h}f .<h}f _<h}f,8h}f 8h}f -h}f'

- - '!herself @herself #herself $herself %herself ^herself &herself *herself )herself _herself =herself +herself ]herself }herself \\herself |herself .herself ,herself ;herself :herself ?herself <themselv'
  - '!h}f `ah}f _?h}f `sh}f .0h}f `5h}f `&h}f "9h}f ">h}f .-h}f "7h}f "6h}f .>h}f _>h}f _*h}f _|h}f 4h}f 1h}f ;h}f0 3h}f ;8h}f `<h}f `>h}f .*h}f `9h}f _/h}f'
  - xfail: contraction following special characters is ignored

- - '(herf [herf {herf ''herf "herf -herf'
  - '"<herf .<herf _<herf,8herf 8herf -herf'

- - '!herf @herf #herf $herf %herf ^herf &herf *herf )herf _herf =herf +herf ]herf }herf \\herf |herf .herf ,herf ;herf :herf ?herf <herf >herf `herf ~herf /herf'
  - '!herf `aherf _?herf `sherf .0herf `5herf `&herf "9herf ">herf .-herf "7herf "6herf .>herf _>herf _*herf _|herf 4herf 1herf ;herf0 3herf ;8herf `<herf `>herf .*herf `9herf _/herf'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-herself xl-([{''"herself xl/-herself xl$-herself'
  - 'xl-h}f xl-"<.<{''0h}f xl_/-h}f xl`s-h}f'

- - 'xl(herself xl[herself xl{herself xl''herself xl"herself xl-=([{''"herself'
  - 'xl"<h}f xl.<h}f xl{h}f xl''h}f xl0h}f xl-"7"<.<{''0h}f'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'herself) herself] herself} herself'' herself" herself- herself, herself. herself; herself: herself? herself!'
  - 'h}f"> h}f.> h}f_> h}f,0h}f0 h}f- h}f1 h}f4 h}f; h}f03 h}f8 h}f!'

- - 'herself@ herself# herself$ herself% herself^ herself& herself* herself( herself_ herself= herself+ herself[ herself{ herself\\ herself| herself< herself> herself` herself~ herself/'
  - 'h}f`a h}f_? h}f`s h}f.0 h}f`5 h}f`& h}f"9 h}f"< h}f.- h}f"7 h}f"6 h}f.< h}f_< h}f_* h}f_| h}f`< h}f`> h}f."9 h}f`9 h}f/'
  - xfail: contraction followed by special characters is ignored

- - 'herf) herf] herf} herf'' herf" herf- herf, herf. herf; herf: herf? herf!'
  - 'herf"> herf.> herf_> herf,0herf0 herf- herf1 herf4 herf; herf03 herf8 herf!'

- - 'herf@ herf# herf$ herf% herf^ herf& herf* herf( herf_ herf= herf+ herf[ herf{ herf\\ herf| herf< herf> herf` herf~ herf/'
  - 'herf`a herf_? herf`s herf.0 herf`5 herf`& herf"9 herf"< herf.- herf"7 herf"6 herf.< herf_< herf_* herf_| herf`< herf`> herf."9 herf`9 herf/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'herself-xl herself-([{''"xl herself-/xl herself-$xl'
  - 'h}f-xl h}f-"<.<{''0xl h}f-_/xl h}f-`sxl'

- - 'herself(xl herself[xl herself{xl herself''xl herself"xl herself=([{''"-xl herself([{''"-xl herself/-xl herself$-xl'
  - 'h}f"<xl h}f.<xl h}f{xl h}f''xl h}f0xl h}f"7"<.<{''0-xl h}f"<.<{''0-xl h}f/-xl h}f`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(herselfs [herselfs {herselfs ''herselfs "herselfs -herselfs'
  - '"<h}fs .<h}fs _<h}fs,8h}fs 8h}fs -h}fs'

- - '!herselfs @herselfs #herselfs $herselfs %herselfs ^herselfs &herselfs *herselfs )herselfs _herselfs =herselfs +herselfs ]herselfs }herselfs \\herselfs |herselfs .herselfs ,herselfs ;herselfs :herselfs ?'
  - '!h}fs `ah}fs _?h}fs `sh}fs .0h}fs `5h}fs `&h}fs "9h}fs ">h}fs .-h}fs "7h}fs "6h}fs .>h}fs _>h}fs _*h}fs _|h}fs 4h}fs 1h}fs ;h}fs0 3h}fs ;8h}fs `<h}fs `>h}fs .*h}fs `9h}fs _/h}fs'
  - xfail: contraction following special characters is ignored

- - 'herfs (herfs [herfs {herfs ''herfs "herfs -herfs !herfs @herfs #herfs $herfs %herfs ^herfs &herfs *herfs )herfs _herfs =herfs +herfs ]herfs }herfs \\herfs |herfs .herfs ,herfs ;herfs :herfs ?herfs <herfs >'
  - 'herfs "<herfs .<herfs _<herfs,8herfs 8herfs -herfs !herfs `aherfs _?herfs `sherfs .0herfs `5herfs `&herfs "9herfs ">herfs .-herfs "7herfs "6herfs .>herfs _>herfs _*herfs _|herfs 4herfs 1herfs ;herfs0 3herfs ;8herfs `<herfs `>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-herselfs xl-([{''"herselfs xl/-herselfs xl$-herselfs'
  - 'xl-h}fs xl-"<.<{''0h}fs xl_/-h}fs xl`s-h}fs'

- - 'xl(herselfs xl[herselfs xl{herselfs xl''herselfs xl"herselfs xl-=([{''"herselfs'
  - 'xl"<h}fs xl.<h}fs xl{h}fs xl''h}fs xl0h}fs xl-"7"<.<{''0h}fs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'herselfs) herselfs] herselfs} herselfs'' herselfs" herselfs- herselfs, herselfs. herselfs; herselfs: herselfs? herselfs!'
  - 'h}fs"> h}fs.> h}fs_> h}fs,0h}fs0 h}fs- h}fs1 h}fs4 h}fs; h}fs03 h}fs8 h}fs!'

- - 'herselfs@ herselfs# herselfs$ herselfs% herselfs^ herselfs& herselfs* herselfs( herselfs_ herselfs= herselfs+ herselfs[ herselfs{ herselfs\\ herselfs| herselfs< herselfs> herselfs` herselfs~ herselfs/'
  - 'h}fs`a h}fs_? h}fs`s h}fs.0 h}fs`5 h}fs`& h}fs"9 h}fs"< h}fs.- h}fs"7 h}fs"6 h}fs.< h}fs_< h}fs_* h}fs_| h}fs`< h}fs`> h}fs."9 h}fs`9 h}fs/'
  - xfail: contraction followed by special characters is ignored

- - 'herfs) herfs] herfs} herfs'' herfs" herfs- herfs, herfs. herfs; herfs: herfs? herfs! herfs@ herfs# herfs$ herfs% herfs^ herfs& herfs* herfs( herfs_ herfs= herfs+ herfs[ herfs{ herfs\\ herfs| herfs< herfs>'
  - 'herfs"> herfs.> herfs_> herfs,0herfs0 herfs- herfs1 herfs4 herfs; herfs03 herfs8 herfs! herfs`a herfs_? herfs`s herfs.0 herfs`5 herfs`& herfs"9 herfs"< herfs.- herfs"7 herfs"6 herfs.< herfs_< herfs_* herfs_| herfs`< herfs>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'herselfs-xl herselfs-([{''"xl herselfs-/xl herselfs-$xl'
  - 'h}fs-xl h}fs-"<.<{''0xl h}fs-_/xl h}fs-`sxl'

- - 'herselfs(xl herselfs[xl herselfs{xl herselfs''xl herselfs"xl herselfs=([{''"-xl herselfs([{''"-xl herselfs/-xl herselfs$-xl'
  - 'h}fs"<xl h}fs.<xl h}fs{xl h}fs''xl h}fs0xl h}fs"7"<.<{''0-xl h}fs"<.<{''0-xl h}fs/-xl h}fs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(him [him {him ''him "him -him'
  - '"<hm .<hm _<hm,8hm 8hm -hm'

- - '!him @him #him $him %him ^him &him *him )him _him =him +him ]him }him \\him |him .him ,him ;him :him ?him <him >him `him ~him /him'
  - '!hm `ahm _?hm `shm .0hm `5hm `&hm "9hm ">hm .-hm "7hm "6hm .>hm _>hm _*hm _|hm 4hm 1hm ;hm0 3hm ;8hm `<hm `>hm .*hm `9hm _/hm'
  - xfail: contraction following special characters is ignored

- - '(hm [hm {hm ''hm "hm -hm'
  - '"<;hm .<;hm _<;hm,8;hm 8;hm -;hm'

- - '!hm @hm #hm $hm %hm ^hm &hm *hm )hm _hm =hm +hm ]hm }hm \\hm |hm .hm ,hm ;hm :hm ?hm <hm >hm `hm ~hm /hm'
  - '!;hm `a;hm _?;hm `s;hm .0;hm `5;hm `&;hm "9;hm ">;hm .-;hm "7;hm "6;hm .>;hm _>;hm _*;hm _|;hm 4;hm 1;hm ;2hm0 3;hm ;8;hm `<;hm `>;hm .*;hm `9;hm _/;hm'
  - xfail: non-contraction following special characters hhim a missing grade 1 indicator

- - 'xl-him xl-([{''"him xl/-him xl$-him'
  - 'xl-hm xl-"<.<{''0hm xl_/-hm xl`s-hm'

- - 'xl(him xl[him xl{him xl''him xl"him xl-=([{''"him'
  - 'xl"<hm xl.<hm xl{hm xl''hm xl0hm xl-"7"<.<{''0hm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'him) him] him} him'' him" him- him, him. him; him: him? him!'
  - 'hm"> hm.> hm_> hm,0hm0 hm- hm1 hm4 hm; hm03 hm8 hm!'

- - 'him@ him# him$ him% him^ him& him* him( him_ him= him+ him[ him{ him\\ him| him< him> him` him~ him/'
  - 'hm`a hm_? hm`s hm.0 hm`5 hm`& hm"9 hm"< hm.- hm"7 hm"6 hm.< hm_< hm_* hm_| hm`< hm`> hm."9 hm`9 hm/'
  - xfail: contraction followed by special characters is ignored

- - 'hm) hm] hm} hm'' hm" hm- hm, hm. hm; hm: hm? hm!'
  - ';hm"> ;hm.> ;hm_> ;hm,0;hm0 ;hm- ;hm1 ;hm4 ;hm; ;hm03 ;hm8 ;hm!'

- - 'hm@ hm# hm$ hm% hm^ hm& hm* hm( hm_ hm= hm+ hm[ hm{ hm\\ hm| hm< hm> hm` hm~ hm/'
  - ';hm`a ;hm_? ;hm`s ;hm.0 ;hm`5 ;hm`& ;hm"9 ;hm"< ;hm.- ;hm"7 ;hm"6 ;hm.< ;hm_< ;hm_* ;hm_| ;hm`< ;hm`> ;hm."9 ;hm`9 ;hm/'
  - xfail: non-contraction following special characters hhim a missing grade 1 indicator

- - 'him-xl him-([{''"xl him-/xl him-$xl'
  - 'hm-xl hm-"<.<{''0xl hm-_/xl hm-`sxl'

- - 'him(xl him[xl him{xl him''xl him"xl him=([{''"-xl him([{''"-xl him/-xl him$-xl'
  - 'hm"<xl hm.<xl hm{xl hm''xl hm0xl hm"7"<.<{''0-xl hm"<.<{''0-xl hm/-xl hm`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(himself [himself {himself ''himself "himself -himself'
  - '"<hmf .<hmf _<hmf,8hmf 8hmf -hmf'

- - '!himself @himself #himself $himself %himself ^himself &himself *himself )himself _himself =himself +himself ]himself }himself \\himself |himself .himself ,himself ;himself :himself ?himself <himself >himself `himself ~himself /himself'
  - '!hmf `ahmf _?hmf `shmf .0hmf `5hmf `&hmf "9hmf ">hmf .-hmf "7hmf "6hmf .>hmf _>hmf _*hmf _|hmf 4hmf 1hmf ;hmf0 3hmf ;8hmf `<hmf `>hmf .*hmf `9hmf _/hmf'
  - xfail: contraction following special characters is ignored

- - '(hmf [hmf {hmf ''hmf "hmf -hmf'
  - '"<;hmf .<;hmf _<;hmf,8;hmf 8;hmf -;hmf'

- - '!hmf @hmf #hmf $hmf %hmf ^hmf &hmf *hmf )hmf _hmf =hmf +hmf ]hmf }hmf \\hmf |hmf .hmf ,hmf ;hmf :hmf ?hmf <hmf >hmf `hmf ~hmf /hmf'
  - '!;hmf `a;hmf _?;hmf `s;hmf .0;hmf `5;hmf `&;hmf "9;hmf ">;hmf .-;hmf "7;hmf "6;hmf .>;hmf _>;hmf _*;hmf _|;hmf 4;hmf 1;hmf ;2hmf0 3;hmf ;8;hmf `<;hmf `>;hmf .*;hmf `9;hmf _/;hmf'
  - xfail: non-contraction following special characters hhimself a missing grade 1 indicator

- - 'xl-himself xl-([{''"himself xl/-himself xl$-himself'
  - 'xl-hmf xl-"<.<{''0hmf xl_/-hmf xl`s-hmf'

- - 'xl(himself xl[himself xl{himself xl''himself xl"himself xl-=([{''"himself'
  - 'xl"<hmf xl.<hmf xl{hmf xl''hmf xl0hmf xl-"7"<.<{''0hmf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'himself) himself] himself} himself'' himself" himself- himself, himself. himself; himself: himself? himself!'
  - 'hmf"> hmf.> hmf_> hmf,0hmf0 hmf- hmf1 hmf4 hmf; hmf03 hmf8 hmf!'

- - 'himself@ himself# himself$ himself% himself^ himself& himself* himself( himself_ himself= himself+ himself[ himself{ himself\\ himself| himself< himself> himself` himself~ himself/'
  - 'hmf`a hmf_? hmf`s hmf.0 hmf`5 hmf`& hmf"9 hmf"< hmf.- hmf"7 hmf"6 hmf.< hmf_< hmf_* hmf_| hmf`< hmf`> hmf."9 hmf`9 hmf/'
  - xfail: contraction followed by special characters is ignored

- - 'hmf) hmf] hmf} hmf'' hmf" hmf- hmf, hmf. hmf; hmf: hmf? hmf!'
  - ';hmf"> ;hmf.> ;hmf_> ;hmf,0;hmf0 ;hmf- ;hmf1 ;hmf4 ;hmf; ;hmf03 ;hmf8 ;hmf!'

- - 'hmf@ hmf# hmf$ hmf% hmf^ hmf& hmf* hmf( hmf_ hmf= hmf+ hmf[ hmf{ hmf\\ hmf| hmf< hmf> hmf` hmf~ hmf/'
  - ';hmf`a ;hmf_? ;hmf`s ;hmf.0 ;hmf`5 ;hmf`& ;hmf"9 ;hmf"< ;hmf.- ;hmf"7 ;hmf"6 ;hmf.< ;hmf_< ;hmf_* ;hmf_| ;hmf`< ;hmf`> ;hmf."9 ;hmf`9 ;hmf/'
  - xfail: non-contraction following special characters hhimself a missing grade 1 indicator

- - 'himself-xl himself-([{''"xl himself-/xl himself-$xl'
  - 'hmf-xl hmf-"<.<{''0xl hmf-_/xl hmf-`sxl'

- - 'himself(xl himself[xl himself{xl himself''xl himself"xl himself=([{''"-xl himself([{''"-xl himself/-xl himself$-xl'
  - 'hmf"<xl hmf.<xl hmf{xl hmf''xl hmf0xl hmf"7"<.<{''0-xl hmf"<.<{''0-xl hmf/-xl hmf`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(himselfs [himselfs {himselfs ''himselfs "himselfs -himselfs'
  - '"<hmfs .<hmfs _<hmfs,8hmfs 8hmfs -hmfs'

- - '!himselfs @himselfs #himselfs $himselfs %himselfs ^himselfs &himselfs *himselfs )himselfs _himselfs =himselfs +himselfs ]himselfs }himselfs \\himselfs |himselfs .himselfs ,himselfs ;himselfs :himselfs ?himselfs <himselfs >himselfs `himselfs ~himselfs /himselfs'
  - '!hmfs `ahmfs _?hmfs `shmfs .0hmfs `5hmfs `&hmfs "9hmfs ">hmfs .-hmfs "7hmfs "6hmfs .>hmfs _>hmfs _*hmfs _|hmfs 4hmfs 1hmfs ;hmfs0 3hmfs ;8hmfs `<hmfs `>hmfs .*hmfs `9hmfs _/hmfs'
  - xfail: contraction following special characters is ignored

- - 'hmfs (hmfs [hmfs {hmfs ''hmfs "hmfs -hmfs !hmfs @hmfs #hmfs $hmfs %hmfs ^hmfs &hmfs *hmfs )hmfs _hmfs =hmfs +hmfs ]hmfs }hmfs \\hmfs |hmfs .hmfs ,hmfs ;hmfs :hmfs ?hmfs <hmfs >hmfs `hmfs ~hmfs /hmfs'
  - ';hmfs "<;hmfs .<;hmfs _<;hmfs,8;hmfs 8;hmfs -;hmfs !;hmfs `a;hmfs _?;hmfs `s;hmfs .0;hmfs `5;hmfs `&;hmfs "9;hmfs ">;hmfs .-;hmfs "7;hmfs "6;hmfs .>;hmfs _>;hmfs _*;hmfs _|;hmfs 4;hmfs 1;hmfs ;2hmfs0 3;hmfs ;8;hmfs `<;hmfs `>;hmfs .*;hmfs `9;hmfs _/;hmfs'
  - xfail: non-contraction following special characters hhimselfs a missing grade 1 indicator

- - 'xl-himselfs xl-([{''"himselfs xl/-himselfs xl$-himselfs'
  - 'xl-hmfs xl-"<.<{''0hmfs xl_/-hmfs xl`s-hmfs'

- - 'xl(himselfs xl[himselfs xl{himselfs xl''himselfs xl"himselfs xl-=([{''"himselfs'
  - 'xl"<hmfs xl.<hmfs xl{hmfs xl''hmfs xl0hmfs xl-"7"<.<{''0hmfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'himselfs) himselfs] himselfs} himselfs'' himselfs" himselfs- himselfs, himselfs. himselfs; himselfs: himselfs? himselfs!'
  - 'hmfs"> hmfs.> hmfs_> hmfs,0hmfs0 hmfs- hmfs1 hmfs4 hmfs; hmfs03 hmfs8 hmfs!'

- - 'himselfs@ himselfs# himselfs$ himselfs% himselfs^ himselfs& himselfs* himselfs( himselfs_ himselfs= himselfs+ himselfs[ himselfs{ himselfs\\ himselfs| himselfs< himselfs> himselfs` himselfs~ himselfs/'
  - 'hmfs`a hmfs_? hmfs`s hmfs.0 hmfs`5 hmfs`& hmfs"9 hmfs"< hmfs.- hmfs"7 hmfs"6 hmfs.< hmfs_< hmfs_* hmfs_| hmfs`< hmfs`> hmfs."9 hmfs`9 hmfs/'
  - xfail: contraction followed by special characters is ignored

- - 'hmfs) hmfs] hmfs} hmfs'' hmfs" hmfs- hmfs, hmfs. hmfs; hmfs: hmfs? hmfs! hmfs@ hmfs# hmfs$ hmfs% hmfs^ hmfs& hmfs* hmfs( hmfs_ hmfs= hmfs+ hmfs[ hmfs{ hmfs\\ hmfs| hmfs< hmfs> hmfs` hmfs~ hmfs/'
  - ';hmfs"> ;hmfs.> ;hmfs_> ;hmfs,0;hmfs0 ;hmfs- ;hmfs1 ;hmfs4 ;hmfs; ;hmfs03 ;hmfs8 ;hmfs! ;hmfs`a ;hmfs_? ;hmfs`s ;hmfs.0 ;hmfs`5 ;hmfs`& ;hmfs"9 ;hmfs"< ;hmfs.- ;hmfs"7 ;hmfs"6 ;hmfs.< ;hmfs_< ;hmfs_* ;hmfs_| ;hmfs`< ;hmfs`> ;hmfs."9 ;hmfs`9 ;hmfs/'
  - xfail: non-contraction following special characters hhimselfs a missing grade 1 indicator

- - 'himselfs-xl himselfs-([{''"xl himselfs-/xl himselfs-$xl'
  - 'hmfs-xl hmfs-"<.<{''0xl hmfs-_/xl hmfs-`sxl'

- - 'himselfs(xl himselfs[xl himselfs{xl himselfs''xl himselfs"xl himselfs=([{''"-xl himselfs([{''"-xl himselfs/-xl himselfs$-xl'
  - 'hmfs"<xl hmfs.<xl hmfs{xl hmfs''xl hmfs0xl hmfs"7"<.<{''0-xl hmfs"<.<{''0-xl hmfs/-xl hmfs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(his [his {his ''his "his -his !his .his ,his ;his :his ?his'
  - '"<8 .<8 _<8,8his 8his -his !his 4his 1his ;his0 3his ;8his'

- - '*his =his +his @his #his $his %his ^his &his )his _his ]his }his \\his |his <his >his `his ~his /his'
  - '"98 "78 "68 `a8 _?8 `s8 .08 `58 `&8 ">8 .-8 .>8 _>8 _*8 _|8 `<8 `>8 ;88 .*8 `98 _/8'
  - xfail: contraction following special characters is ignored

- - 'xl(his xl[his xl{his'
  - 'xl"<8 xl.<8 xl{8'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'his) his] his} his'' his" his- his, his. his? his!'
  - '8"> 8.> 8_> his,0his0 his- his1 his4 his8 his!'

- - 'his; his: his@ his# his$ his% his^ his& his* his( his_ his= his+ his[ his{ his\\ his| his< his> his` his~ his/'
  - 'his; his03 8`a 8_? 8`s 8.0 8`5 8`& 8"9 8"< 8.- 8"7 8"6 8.< 8_< 8_* 8_| 8`< 8`> 8."9 8`9 8/'
  - xfail: contraction followed by special characters is ignored

- - 'his(xl his[his his{xl'
  - '8"<xl 8.<xl'
  - xfail: contraction followed by special characters following any letter is ignored

- - '(immediate [immediate {immediate ''immediate "immediate -immediate'
  - '"<imm .<imm _<imm,8imm 8imm -imm'

- - '!immediate @immediate #immediate $immediate %immediate ^immediate &immediate *immediate )immediate _immediate =immediate +immediate ]immediate }immediate \\immediate |immediate .immediate ,immediate ;immediate :immediate ?immediate <immediate >immediate'
  - '!imm `aimm _?imm `simm .0imm `5imm `&imm "9imm ">imm .-imm "7imm "6imm .>imm _>imm _*imm _|imm 4imm 1imm ;imm0 3imm ;8imm `<imm `>imm'
  - xfail: contraction following special characters is ignored

- - '`immediate, ~immediate /immediate'
  - '.*imm `9imm _/imm'
  - xfail: contraction following special characters is ignored

- - '(imm [imm {imm ''imm "imm -imm'
  - '"<;imm .<;imm _<;imm,8;imm 8;imm -;imm'

- - '!imm @imm #imm $imm %imm ^imm &imm *imm )imm _imm =imm +imm ]imm }imm \\imm |imm .imm ,imm ;imm :imm ?imm <imm >imm `imm ~imm /imm'
  - '!;imm `a;imm _?;imm `s;imm .0;imm `5;imm `&;imm "9;imm ">;imm .-;imm "7;imm "6;imm .>;imm _>;imm _*;imm _|;imm 4;imm 1;imm ;2imm0 3;imm ;8;imm `<;imm `>;imm .*;imm `9;imm _/;imm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-immediate xl-([{''"immediate xl/-immediate xl$-immediate'
  - 'xl-imm xl-"<.<{''0imm xl_/-imm xl`s-imm'

- - 'xl(immediate xl[immediate xl{immediate xl''immediate xl"immediate xl-=([{''"immediate'
  - 'xl"<imm xl.<imm xl{imm xl''imm xl0imm xl-"7"<.<{''0imm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'immediate) immediate] immediate} immediate'' immediate" immediate- immediate, immediate. immediate; immediate: immediate? immediate!'
  - 'imm"> imm.> imm_> imm,0imm0 imm- imm1 imm4 imm; imm03 imm8 imm!'

- - 'immediate@ immediate# immediate$ immediate% immediate^ immediate& immediate* immediate( immediate_ immediate= immediate+ immediate[ immediate{ immediate\\ immediate| immediate< immediate> immediate` immediate~ immediate/'
  - 'imm`a imm_? imm`s imm.0 imm`5 imm`& imm"9 imm"< imm.- imm"7 imm"6 imm.< imm_< imm_* imm_| imm`< imm`> imm."9 imm`9 imm/'
  - xfail: contraction followed by special characters is ignored

- - 'imm) imm] imm} imm'' imm" imm- imm, imm. imm; imm: imm? imm!'
  - ';imm"> ;imm.> ;imm_> ;imm,0;imm0 ;imm- ;imm1 ;imm4 ;imm; ;imm03 ;imm8 ;imm!'

- - 'imm@ imm# imm$ imm% imm^ imm& imm* imm( imm_ imm= imm+ imm[ imm{ imm\\ imm| imm< imm> imm` imm~ imm/'
  - ';imm`a ;imm_? ;imm`s ;imm.0 ;imm`5 ;imm`& ;imm"9 ;imm"< ;imm.- ;imm"7 ;imm"6 ;imm.< ;imm_< ;imm_* ;imm_| ;imm`< ;imm`> ;imm."9 ;imm`9 ;imm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'immediate-xl immediate-([{''"xl immediate-/xl immediate-$xl'
  - 'imm-xl imm-"<.<{''0xl imm-_/xl imm-`sxl'

- - 'immediate(xl immediate[xl immediate{xl immediate''xl immediate"xl immediate=([{''"-xl immediate([{''"-xl immediate/-xl immediate$-xl'
  - 'imm"<xl imm.<xl imm{xl imm''xl imm0xl imm"7"<.<{''0-xl imm"<.<{''0-xl imm/-xl imm`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediately [immediately {immediately ''immediately "immediately -immediately'
  - '"<immly .<immly _<immly,8immly 8immly -immly'

- - '!immediately @immediately #immediately $immediately %immediately ^immediately &immediately *immediately )immediately _immediately =immediately +immediately ]immediately }immediately \\immediately |immediately .immediately ,immediately ;immediately :immediately'
  - '!immly `aimmly _?immly `simmly .0immly `5immly `&immly "9immly ">immly .-immly "7immly "6immly .>immly _>immly _*immly _|immly 4immly 1immly ;immly0 3immly'
  - xfail: contraction followingly special characters is ignored

- - '?immediately <immediately >immediately `immediately, ~immediately /immediately'
  - ';8immly `<immly `>immly .*immly `9immly _/immly'
  - xfail: contraction followingly special characters is ignored

- - '(immly [immly {immly ''immly "immly -immly'
  - '"<;immly .<;immly _<;immly,8;immly 8;immly -;immly'

- - '!immly @immly #immly $immly %immly ^immly &immly *immly )immly _immly =immly +immly ]immly }immly \\immly |immly .immly ,immly ;immly :immly ?immly <immly >immly `immly ~immly /immly'
  - '!;immly `a;immly _?;immly `s;immly .0;immly `5;immly `&;immly "9;immly ">;immly .-;immly "7;immly "6;immly .>;immly _>;immly _*;immly _|;immly 4;immly 1;immly ;2immly0 3;immly ;8;immly `<;immly `>;immly .*;immly `9;immly _/;immly'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-immediately xl-([{''"immediately xl/-immediately xl$-immediately'
  - 'xl-immly xl-"<.<{''0immly xl_/-immly xl`s-immly'

- - 'xl(immediately xl[immediately xl{immediately xl''immediately xl"immediately xl-=([{''"immediately'
  - 'xl"<immly xl.<immly xl{immly xl''immly xl0immly xl-"7"<.<{''0immly'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'immediately) immediately] immediately} immediately'' immediately" immediately- immediately, immediately. immediately; immediately: immediately? immediately!'
  - 'immly"> immly.> immly_> immly,0immly0 immly- immly1 immly4 immly; immly03 immly8 immly!'

- - 'immediately@ immediately# immediately$ immediately% immediately^ immediately& immediately* immediately( immediately_ immediately= immediately+ immediately[ immediately{ immediately\\ immediately| immediately< immediately> immediately` immediately~ immediately/'
  - 'immly`a immly_? immly`s immly.0 immly`5 immly`& immly"9 immly"< immly.- immly"7 immly"6 immly.< immly_< immly_* immly_| immly`< immly`> immly."9 immly`9 immly/'
  - xfail: contraction followed by special characters is ignored

- - 'immly) immly] immly} immly'' immly" immly- immly, immly. immly; immly: immly? immly!'
  - ';immly"> ;immly.> ;immly_> ;immly,0;immly0 ;immly- ;immly1 ;immly4 ;immly; ;immly03 ;immly8 ;immly!'

- - 'immly@ immly# immly$ immly% immly^ immly& immly* immly( immly_ immly= immly+ immly[ immly{ immly\\ immly| immly< immly> immly` immly~ immly/'
  - ';immly`a ;immly_? ;immly`s ;immly.0 ;immly`5 ;immly`& ;immly"9 ;immly"< ;immly.- ;immly"7 ;immly"6 ;immly.< ;immly_< ;immly_* ;immly_| ;immly`< ;immly`> ;immly."9 ;immly`9 ;immly/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'immediately-xl immediately-([{''"xl immediately-/xl immediately-$xl'
  - 'immly-xl immly-"<.<{''0xl immly-_/xl immly-`sxl'

- - 'immediately(xl immediately[xl immediately{xl immediately''xl immediately"xl immediately=([{''"-xl immediately([{''"-xl immediately/-xl immediately$-xl'
  - 'immly"<xl immly.<xl immly{xl immly''xl immly0xl immly"7"<.<{''0-xl immly"<.<{''0-xl immly/-xl immly`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediatelys [immediatelys {immediatelys ''immediatelys "immediatelys -immediatelys'
  - '"<immlys .<immlys _<immlys,8immlys 8immlys -immlys'

- - '!immediatelys @immediatelys #immediatelys $immediatelys %immediatelys ^immediatelys &immediatelys *immediatelys )immediatelys _immediatelys =immediatelys +immediatelys ]immediatelys }immediatelys \\immediatelys |immediatelys .immediatelys ,immediatelys'
  - '!immlys `aimmlys _?immlys `simmlys .0immlys `5immlys `&immlys "9immlys ">immlys .-immlys "7immlys "6immlys .>immlys _>immlys _*immlys _|immlys 4immlys 1immlys'
  - xfail: contraction followingly special characters is ignored

- - ';immediatelys :immediatelys ?immediatelys <immediatelys >immediatelys `immediatelys, ~immediatelys /immediatelys'
  - 'bimmlys0 3immlys ;8immlys `<immlys `>immlys .*immlys `9immlys _/immlys'
  - xfail: contraction followingly special characters is ignored

- - 'immlys (immlys [immlys {immlys ''immlys "immlys -immlys !immlys @immlys #immlys $immlys %immlys ^immlys &immlys *immlys )immlys _immlys =immlys +immlys ]immlys }immlys \\immlys |immlys .immlys ,immlys ;immlys :immlys ?immlys <immlys >immlys `immlys ~immlys /immly'
  - ';immlys "<;immlys .<;immlys _<;immlys,8;immlys 8;immlys -;immlys !;immlys `a;immlys _?;immlys `s;immlys .0;immlys `5;immlys `&;immlys "9;immlys ">;immlys .-;immlys "7;immlys "6;immlys .>;immlys _>;immlys _*;immlys _|;immlys 4;immlys 1;immlys ;2immlys0 3;immlys ;8;immlys `<;immlys `>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-immediatelys xl-([{''"immediatelys xl/-immediatelys xl$-immediatelys'
  - 'xl-immlys xl-"<.<{''0immlys xl_/-immlys xl`s-immlys'

- - 'xl(immediatelys xl[immediatelys xl{immediatelys xl''immediatelys xl"immediatelys xl-=([{''"immediatelys'
  - 'xl"<immlys xl.<immlys xl{immlys xl''immlys xl0immlys xl-"7"<.<{''0immlys'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'immediatelys) immediatelys] immediatelys} immediatelys'' immediatelys" immediatelys- immediatelys, immediatelys. immediatelys; immediatelys: immediatelys? immediatelys!'
  - 'immlys"> immlys.> immlys_> immlys,0immlys0 immlys- immlys1 immlys4 immlys; immlys03 immlys8 immlys!'

- - 'immediatelys@ immediatelys# immediatelys$ immediatelys% immediatelys^ immediatelys& immediatelys* immediatelys( immediatelys_ immediatelys= immediatelys+ immediatelys[ immediatelys{ immediatelys\\ immediatelys| immediatelys< immediatelys> immediatelys`'
  - 'immlys`a immlys_? immlys`s immlys.0 immlys`5 immlys`& immlys"9 immlys"< immlys.- immlys"7 immlys"6 immlys.< immlys_< immlys_* immlys_| immlys`< immlys`> immlys.*'
  - xfail: contraction followed by special characters is ignored

- - 'immediatelys~ immediatelys/'
  - 'immlys`9 immlys/'
  - xfail: contraction followed by special characters is ignored

- - 'immlys) immlys] immlys} immlys'' immlys" immlys- immlys, immlys. immlys; immlys: immlys? immlys! immlys@ immlys# immlys$ immlys% immlys^ immlys& immlys* immlys( immlys_ immlys= immlys+ immlys[ immlys{ immlys\\ immlys| immlys< immlys> immlys` immlys~ immlys/'
  - ';immlys"> ;immlys.> ;immlys_> ;immlys,0;immlys0 ;immlys- ;immlys1 ;immlys4 ;immlys; ;immlys03 ;immlys8 ;immlys! ;immlys`a ;immlys_? ;immlys`s ;immlys.0 ;immlys`5 ;immlys`& ;immlys"9 ;immlys"< ;immlys.- ;immlys"7 ;immlys"6 ;immlys.< ;immlys_< ;immlys_* ;immlys_| ;immlys`< ;immlys>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'immediatelys-xl immediatelys-([{''"xl immediatelys-/xl immediatelys-$xl'
  - 'immlys-xl immlys-"<.<{''0xl immlys-_/xl immlys-`sxl'

- - 'immediatelys(xl immediatelys[xl immediatelys{xl immediatelys''xl immediatelys"xl immediatelys=([{''"-xl immediatelys([{''"-xl immediatelys/-xl immediatelys$-xl'
  - 'immlys"<xl immlys.<xl immlys{xl immlys''xl immlys0xl immlys"7"<.<{''0-xl immlys"<.<{''0-xl immlys/-xl immlys`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(immediates [immediates {immediates ''immediates "immediates -immediates'
  - '"<imms .<imms _<imms,8imms 8imms -imms'

- - '!immediates @immediates #immediates $immediates %immediates ^immediates &immediates *immediates )immediates _immediates =immediates +immediates ]immediates }immediates \\immediates |immediates .immediates ,immediates ;immediates :immediates ?immediates'
  - '!imms `aimms _?imms `simms .0imms `5imms `&imms "9imms ">imms .-imms "7imms "6imms .>imms _>imms _*imms _|imms 4imms 1imms ;imms0 3imms ;8imms'
  - xfail: contraction following special characters is ignored

- - '<immediates >immediates `immediates, ~immediates /immediates'
  - '`<imms `>imms .*imms `9imms _/imms'
  - xfail: contraction following special characters is ignored

- - 'imms (imms [imms {imms ''imms "imms -imms !imms @imms #imms $imms %imms ^imms &imms *imms )imms _imms =imms +imms ]imms }imms \\imms |imms .imms ,imms ;imms :imms ?imms <imms >imms `imms ~imms /imms'
  - ';imms "<;imms .<;imms _<;imms,8;imms 8;imms -;imms !;imms `a;imms _?;imms `s;imms .0;imms `5;imms `&;imms "9;imms ">;imms .-;imms "7;imms "6;imms .>;imms _>;imms _*;imms _|;imms 4;imms 1;imms ;2imms0 3;imms ;8;imms `<;imms `>;imms .*;imms `9;imms _/;imms'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-immediates xl-([{''"immediates xl/-immediates xl$-immediates'
  - 'xl-imms xl-"<.<{''0imms xl_/-imms xl`s-imms'

- - 'xl(immediates xl[immediates xl{immediates xl''immediates xl"immediates xl-=([{''"immediates'
  - 'xl"<imms xl.<imms xl{imms xl''imms xl0imms xl-"7"<.<{''0imms'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'immediates) immediates] immediates} immediates'' immediates" immediates- immediates, immediates. immediates; immediates: immediates? immediates!'
  - 'imms"> imms.> imms_> imms,0imms0 imms- imms1 imms4 imms; imms03 imms8 imms!'

- - 'immediates@ immediates# immediates$ immediates% immediates^ immediates& immediates* immediates( immediates_ immediates= immediates+ immediates[ immediates{ immediates\\ immediates| immediates< immediates> immediates` immediates~ immediates/'
  - 'imms`a imms_? imms`s imms.0 imms`5 imms`& imms"9 imms"< imms.- imms"7 imms"6 imms.< imms_< imms_* imms_| imms`< imms`> imms."9 imms`9 imms/'
  - xfail: contraction followed by special characters is ignored

- - 'imms) imms] imms} imms'' imms" imms- imms, imms. imms; imms: imms? imms! imms@ imms# imms$ imms% imms^ imms& imms* imms( imms_ imms= imms+ imms[ imms{ imms\\ imms| imms< imms> imms` imms~ imms/'
  - ';imms"> ;imms.> ;imms_> ;imms,0;imms0 ;imms- ;imms1 ;imms4 ;imms; ;imms03 ;imms8 ;imms! ;imms`a ;imms_? ;imms`s ;imms.0 ;imms`5 ;imms`& ;imms"9 ;imms"< ;imms.- ;imms"7 ;imms"6 ;imms.< ;imms_< ;imms_* ;imms_| ;imms`< ;imms`> ;imms."9 ;imms`9 ;imms/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'immediates-xl immediates-([{''"xl immediates-/xl immediates-$xl'
  - 'imms-xl imms-"<.<{''0xl imms-_/xl imms-`sxl'

- - 'immediates(xl immediates[xl immediates{xl immediates''xl immediates"xl immediates=([{''"-xl immediates([{''"-xl immediates/-xl immediates$-xl'
  - 'imms"<xl imms.<xl imms{xl imms''xl imms0xl imms"7"<.<{''0-xl imms"<.<{''0-xl imms/-xl imms`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(in [in {in ''in "in -in !in .in ,in ;in :in ?in @in #in $in %in ^in &in )in _in ]in }in \\in |in <in >in `in ~in /in'
  - '"<9 .<9 _<9,8in 8in -in !in 4in 1in ;in0 3in ;8in `a9 _?9 `s9 .09 `59 `&9 ">9 .-9 .>9 _>9 _*9 _|9 `<9 `>9 ;89 .*9 `99 _/9'

- - '*in =in +in'
  - '"99 "79 "69'
  - xfail: contraction following special characters is ignored

- - 'xl(in xl[in xl{in'
  - 'xl"<9 xl.<9 xl{9'

- - 'in) in] in} in'' in" in- in, in. in? in! in@ in# in$ in% in^ in& in* in( in_ in= in+ in[ in{ in\\ in| in< in> in` in~ in/'
  - '9"> 9.> 9_> in,0in0 in- in1 in4 in8 in! 9`a 9_? 9`s 9.0 9`5 9`& 9"9 9"< 9.- 9"7 9"6 9.< 9_< 9_* 9_| 9`< 9`> 9."9 9`9 9/'

- - 'in; in:'
  - 'in; in:'
  - xfail: contraction followed by special characters is ignored

- - 'in(xl in[in in{xl'
  - '9"<xl 9.<xl'

- - '(ing [ing {ing ''ing "ing !ing @ing #ing $ing %ing ^ing &ing *ing _ing =ing +ing ]ing }ing \\ing |ing ;ing :ing <ing >ing ,ing .ing /ing ?ing `ing ~ing'
  - '"<+ .<+ _<+,8+ 8+ !+ `a+ _?+ `s+ .0+ `5+ `&+ "9+ .-+ "7+ "6+ .>+ _>+ _*+ _|+ ;+0 3+ `<+ `>+ 1+ 4+ _/+ ;8+ .*+ `9+'

- - 'ing -ing'
  - '+ -+'
  - xfail: contraction following special characters is ignored

- - 'xl(ing xl[ing xl{ing xl''ing xl"ing xl-=([{''"ing xl-([{''"ing'
  - 'xl"<+ xl.<+ xl{+ xl''+ xl0+ xl-"7"<.<{''0+ xl-"<.<{''0+'

- - 'xl-ing xl/-ing xl$-ing'
  - 'xl-+ xl_/-+ xl`s-+'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ing@ ing# ing$ ing% ing^ ing& ing* ing( ing_ ing= ing+ ing[ ing{ ing\\ ing| ing< ing> ing` ing~ ing/ ing) ing] ing} ing'' ing" ing- ing, ing. ing; ing: ing? ing!'
  - '+`a +_? +`s +.0 +`5 +`& +"9 +"< +.- +"7 ++ +.< +_< +_* +_| +`< +`> +."9 +`9 +_/ +"> +.> +_> +,0+0 +- +1 +4 +; +03 +8 +!'
  - xfail: contraction followed by special characters is ignored

- - 'ing(xl ing[xl ing{xl ing''xl ing"xl ing=([{''"-xl ing([{''"-xl ing/-xl ing$-xl ing-xl ing-([{''"xl ing-/xl ing-$xl'
  - '+"<xl +.<xl +{xl +''xl +0xl +"7"<.<{''0-xl +"<.<{''0-xl +/-xl +`s-xl +-xl +-"<.<{''0xl +-_/xl +-`sxl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(it [it {it ''it "it -it'
  - '"<x .<x _<x,8x 8x -x'

- - '!it @it #it $it %it ^it &it *it )it _it =it +it ]it }it \\it |it .it ,it ;it :it ?it <it >it `it ~it /it'
  - '!x `ax _?x `sx .0x `5x `&x "9x ">x .-x "7x "6x .>x _>x _*x _|x 4x 1x ;x0 3x ;8x `<x `>x .*x `9x _/x'
  - xfail: contraction following special characters is ignored

- - '(x [x {x ''x "x -x'
  - '"<;x .<;x _<;x,8;x 8;x -;x'

- - '!x @x #x $x %x ^x &x *x )x _x =x +x ]x }x \\x |x .x ,x ;x :x ?x <x >x `x ~x /x'
  - '!;x `a;x _?;x `s;x .0;x `5;x `&;x "9;x ">;x .-;x "7;x "6;x .>;x _>;x _*;x _|;x 4;x 1;x ;2x0 3;x ;8;x `<;x `>;x .*;x `9;x _/;x'
  - xfail: non-contraction following special characters hit a missing grade 1 indicator

- - 'xl-it xl-([{''"it xl/-it xl$-it'
  - 'xl-x xl-"<.<{''0x xl_/-x xl`s-x'

- - 'xl(it xl[it xl{it xl''it xl"it xl-=([{''"it'
  - 'xl"<x xl.<x xl{x xl''x xl0x xl-"7"<.<{''0x'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'it) it] it} it'' it" it- it, it. it; it: it? it!'
  - 'x"> x.> x_> x,0x0 x- x1 x4 x; x03 x8 x!'

- - 'it@ it# it$ it% it^ it& it* it( it_ it= it+ it[ it{ it\\ it| it< it> it` it~ it/'
  - 'x`a x_? x`s x.0 x`5 x`& x"9 x"< x.- x"7 x"6 x.< x_< x_* x_| x`< x`> x."9 x`9 x/'
  - xfail: contraction followed by special characters is ignored

- - 'x) x] x} x'' x" x- x, x. x; x: x? x!'
  - ';x"> ;x.> ;x_> ;x,0;x0 ;x- ;x1 ;x4 ;x; ;x03 ;x8 ;x!'

- - 'x@ x# x$ x% x^ x& x* x( x_ x= x+ x[ x{ x\\ x| x< x> x` x~ x/'
  - ';x`a ;x_? ;x`s ;x.0 ;x`5 ;x`& ;x"9 ;x"< ;x.- ;x"7 ;x"6 ;x.< ;x_< ;x_* ;x_| ;x`< ;x`> ;x."9 ;x`9 ;x/'
  - xfail: non-contraction following special characters hit a missing grade 1 indicator

- - 'it-xl it-([{''"xl it-/xl it-$xl'
  - 'x-xl x-"<.<{''0xl x-_/xl x-`sxl'

- - 'it(xl it[xl it{xl it''xl it"xl it=([{''"-xl it([{''"-xl it/-xl it$-xl'
  - 'x"<xl x.<xl x{xl x''xl x0xl x"7"<.<{''0-xl x"<.<{''0-xl x/-xl x`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(its [its {its ''its "its -its'
  - '"<xs .<xs _<xs,8xs 8xs -xs'

- - '!its @its #its $its %its ^its &its *its )its _its =its +its ]its }its \\its |its .its ,its ;its :its ?its <its >its `its ~its /its'
  - '!xs `axs _?xs `sxs .0xs `5xs `&xs "9xs ">xs .-xs "7xs "6xs .>xs _>xs _*xs _|xs 4xs 1xs ;xs0 3xs ;8xs `<xs `>xs .*xs `9xs _/xs'
  - xfail: contraction following special characters is ignored

- - '(xs [xs {xs ''xs "xs -xs'
  - '"<;xs .<;xs _<;xs,8;xs 8;xs -;xs'

- - '!xs @xs #xs $xs %xs ^xs &xs *xs )xs _xs =xs +xs ]xs }xs \\xs |xs .xs ,xs ;xs :xs ?xs <xs >xs `xs ~xs /xs'
  - '!;xs `a;xs _?;xs `s;xs .0;xs `5;xs `&;xs "9;xs ">;xs .-;xs "7;xs "6;xs .>;xs _>;xs _*;xs _|;xs 4;xs 1;xs ;2xs0 3;xs ;8;xs `<;xs `>;xs .*;xs `9;xs _/;xs'
  - xfail: non-contraction following special characters hits a missing grade 1 indicator

- - 'xl-its xl-([{''"its xl/-its xl$-its'
  - 'xl-xs xl-"<.<{''0xs xl_/-xs xl`s-xs'

- - 'xl(its xl[its xl{its xl''its xl"its xl-=([{''"its'
  - 'xl"<xs xl.<xs xl{xs xl''xs xl0xs xl-"7"<.<{''0xs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'its) its] its} its'' its" its- its, its. its; its: its? its!'
  - 'xs"> xs.> xs_> xs,0xs0 xs- xs1 xs4 xs; xs03 xs8 xs!'

- - 'its@ its# its$ its% its^ its& its* its( its_ its= its+ its[ its{ its\\ its| its< its> its` its~ its/'
  - 'xs`a xs_? xs`s xs.0 xs`5 xs`& xs"9 xs"< xs.- xs"7 xs"6 xs.< xs_< xs_* xs_| xs`< xs`> xs."9 xs`9 xs/'
  - xfail: contraction followed by special characters is ignored

- - 'xs) xs] xs} xs'' xs" xs- xs, xs. xs; xs: xs? xs!'
  - ';xs"> ;xs.> ;xs_> ;xs,0;xs0 ;xs- ;xs1 ;xs4 ;xs; ;xs03 ;xs8 ;xs!'

- - 'xs@ xs# xs$ xs% xs^ xs& xs* xs( xs_ xs= xs+ xs[ xs{ xs\\ xs| xs< xs> xs` xs~ xs/'
  - ';xs`a ;xs_? ;xs`s ;xs.0 ;xs`5 ;xs`& ;xs"9 ;xs"< ;xs.- ;xs"7 ;xs"6 ;xs.< ;xs_< ;xs_* ;xs_| ;xs`< ;xs`> ;xs."9 ;xs`9 ;xs/'
  - xfail: non-contraction following special characters hits a missing grade 1 indicator

- - 'its-xl its-([{''"xl its-/xl its-$xl'
  - 'xs-xl xs-"<.<{''0xl xs-_/xl xs-`sxl'

- - 'its(xl its[xl its{xl its''xl its"xl its=([{''"-xl its([{''"-xl its/-xl its$-xl'
  - 'xs"<xl xs.<xl xs{xl xs''xl xs0xl xs"7"<.<{''0-xl xs"<.<{''0-xl xs/-xl xs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(itself [itself {itself ''itself "itself -itself'
  - '"<xf .<xf _<xf,8xf 8xf -xf'

- - '!itself @itself #itself $itself %itself ^itself &itself *itself )itself _itself =itself +itself ]itself }itself \\itself |itself .itself ,itself ;itself :itself ?itself <itself >itself `itself ~itself /itself'
  - '!xf `axf _?xf `sxf .0xf `5xf `&xf "9xf ">xf .-xf "7xf "6xf .>xf _>xf _*xf _|xf 4xf 1xf ;xf0 3xf ;8xf `<xf `>xf .*xf `9xf _/xf'
  - xfail: contraction following special characters is ignored

- - '(xf [xf {xf ''xf "xf -xf'
  - '"<;xf .<;xf _<;xf,8;xf 8;xf -;xf'

- - '!xf @xf #xf $xf %xf ^xf &xf *xf )xf _xf =xf +xf ]xf }xf \\xf |xf .xf ,xf ;xf :xf ?xf <xf >xf `xf ~xf /xf'
  - '!;xf `a;xf _?;xf `s;xf .0;xf `5;xf `&;xf "9;xf ">;xf .-;xf "7;xf "6;xf .>;xf _>;xf _*;xf _|;xf 4;xf 1;xf ;2xf0 3;xf ;8;xf `<;xf `>;xf .*;xf `9;xf _/;xf'
  - xfail: non-contraction following special characters hitself a missing grade 1 indicator

- - 'xl-itself xl-([{''"itself xl/-itself xl$-itself'
  - 'xl-xf xl-"<.<{''0xf xl_/-xf xl`s-xf'

- - 'xl(itself xl[itself xl{itself xl''itself xl"itself xl-=([{''"itself'
  - 'xl"<xf xl.<xf xl{xf xl''xf xl0xf xl-"7"<.<{''0xf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'itself) itself] itself} itself'' itself" itself- itself, itself. itself; itself: itself? itself!'
  - 'xf"> xf.> xf_> xf,0xf0 xf- xf1 xf4 xf; xf03 xf8 xf!'

- - 'itself@ itself# itself$ itself% itself^ itself& itself* itself( itself_ itself= itself+ itself[ itself{ itself\\ itself| itself< itself> itself` itself~ itself/'
  - 'xf`a xf_? xf`s xf.0 xf`5 xf`& xf"9 xf"< xf.- xf"7 xf"6 xf.< xf_< xf_* xf_| xf`< xf`> xf."9 xf`9 xf/'
  - xfail: contraction followed by special characters is ignored

- - 'xf) xf] xf} xf'' xf" xf- xf, xf. xf; xf: xf? xf!'
  - ';xf"> ;xf.> ;xf_> ;xf,0;xf0 ;xf- ;xf1 ;xf4 ;xf; ;xf03 ;xf8 ;xf!'

- - 'xf@ xf# xf$ xf% xf^ xf& xf* xf( xf_ xf= xf+ xf[ xf{ xf\\ xf| xf< xf> xf` xf~ xf/'
  - ';xf`a ;xf_? ;xf`s ;xf.0 ;xf`5 ;xf`& ;xf"9 ;xf"< ;xf.- ;xf"7 ;xf"6 ;xf.< ;xf_< ;xf_* ;xf_| ;xf`< ;xf`> ;xf."9 ;xf`9 ;xf/'
  - xfail: non-contraction following special characters hitself a missing grade 1 indicator

- - 'itself-xl itself-([{''"xl itself-/xl itself-$xl'
  - 'xf-xl xf-"<.<{''0xl xf-_/xl xf-`sxl'

- - 'itself(xl itself[xl itself{xl itself''xl itself"xl itself=([{''"-xl itself([{''"-xl itself/-xl itself$-xl'
  - 'xf"<xl xf.<xl xf{xl xf''xl xf0xl xf"7"<.<{''0-xl xf"<.<{''0-xl xf/-xl xf`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(itselfs [itselfs {itselfs ''itselfs "itselfs -itselfs'
  - '"<xfs .<xfs _<xfs,8xfs 8xfs -xfs'

- - '!itselfs @itselfs #itselfs $itselfs %itselfs ^itselfs &itselfs *itselfs )itselfs _itselfs =itselfs +itselfs ]itselfs }itselfs \\itselfs |itselfs .itselfs ,itselfs ;itselfs :itselfs ?itselfs <itselfs >itselfs `itselfs ~itselfs /itselfs'
  - '!xfs `axfs _?xfs `sxfs .0xfs `5xfs `&xfs "9xfs ">xfs .-xfs "7xfs "6xfs .>xfs _>xfs _*xfs _|xfs 4xfs 1xfs ;xfs0 3xfs ;8xfs `<xfs `>xfs .*xfs `9xfs _/xfs'
  - xfail: contraction following special characters is ignored

- - 'xfs "<xfs .<xfs _<xfs,8xfs 8xfs -xfs !xfs `axfs _?xfs `sxfs .0xfs `5xfs `&xfs "9xfs ">xfs .-xfs "7xfs +xfs .>xfs _>xfs _*xfs _|xfs 4xfs 1xfs ;xfs0 3xfs ;8xfs `<xfs `>xfs .*xfs `9xfs _/xfs'
  - ';xfs (;xfs [;xfs {;xfs '';xfs ";xfs -;xfs !;xfs @;xfs #;xfs $;xfs %;xfs ^;xfs &;xfs *;xfs );xfs _;xfs =;xfs +;xfs ];xfs };xfs \\;xfs |;xfs .;xfs ,;xfs ;;xfs :;xfs ?;xfs <;xfs >;xfs `;xfs ~;xfs /;xfs'
  - xfail: non-contraction following special characters hitselfs a missing grade 1 indicator0

- - 'xl-itselfs xl-([{''"itselfs xl/-itselfs xl$-itselfs'
  - 'xl-xfs xl-"<.<{''0xfs xl_/-xfs xl`s-xfs'

- - 'xl(itselfs xl[itselfs xl{itselfs xl''itselfs xl"itselfs xl-=([{''"itselfs'
  - 'xl"<xfs xl.<xfs xl{xfs xl''xfs xl0xfs xl-"7"<.<{''0xfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'itselfs"> itselfs.> itselfs_> itselfs,0itselfs0 itselfs- itselfs1 itselfs4 itselfs; itselfs03 itselfs8 itselfs!'
  - 'xfs) xfs] xfs} xfs'' xfs" xfs- xfs, xfs. xfs; xfs: xfs? xfs!'

- - 'itselfs`a itselfs_? itselfs`s itselfs.0 itselfs`5 itselfs`& itselfs"9 itselfs"< itselfs.- itselfs"7 itselfs"6 itselfs.< itselfs_< itselfs_* itselfs_| itselfs`< itselfs`> itselfs."9 itselfs`9 itselfs/'
  - 'xfs@ xfs# xfs$ xfs% xfs^ xfs& xfs* xfs( xfs_ xfs= xfs+ xfs[ xfs{ xfs\\ xfs| xfs< xfs> xfs` xfs~ xfs/'
  - xfail: contraction followed by special characters is ignored

- - 'xfs) xfs] xfs} xfs'' xfs" xfs- xfs, xfs. xfs; xfs: xfs? xfs! xfs@ xfs# xfs$ xfs% xfs^ xfs& xfs* xfs( xfs_ xfs= xfs+ xfs[ xfs{ xfs\\ xfs| xfs< xfs> xfs` xfs~ xfs/'
  - ';xfs"> ;xfs.> ;xfs_> ;xfs,0;xfs0 ;xfs- ;xfs1 ;xfs4 ;xfs; ;xfs03 ;xfs8 ;xfs! ;xfs`a ;xfs_? ;xfs`s ;xfs.0 ;xfs`5 ;xfs`& ;xfs"9 ;xfs"< ;xfs.- ;xfs"7 ;xfs"6 ;xfs.< ;xfs_< ;xfs_* ;xfs_| ;xfs`< ;xfs`> ;xfs."9 ;xfs`9 ;xfs/'
  - xfail: non-contraction following special characters hitselfs a missing grade 1 indicator

- - 'itselfs-xl itselfs-"<.<{''0xl itselfs-_/xl itselfs-`sxl'
  - 'xfs-xl xfs-([{''"xl xfs-/xl xfs-$xl'

- - 'itselfs"<xl itselfs.<xl itselfs{xl itselfs''xl itselfs0xl itselfs"7"<.<{''0-xl itselfs"<.<{''0-xl itselfs/-xl itselfs`s-xl'
  - 'xfs(xl xfs[xl xfs{xl xfs''xl xfs"xl xfs=([{''"-xl xfs([{''"-xl xfs/-xl xfs$-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(just [just {just ''just "just -just'
  - '"<j .<j _<j,8j 8j -j'

- - '!just @just #just $just %just ^just &just *just )just _just =just +just ]just }just \\just |just .just ,just ;just :just ?just <just >just `just ~just /just'
  - '!j `aj _?j `sj .0j `5j `&j "9j ">j .-j "7j "6j .>j _>j _*j _|j 4j 1j ;j0 3j ;8j `<j `>j .*j `9j /j'
  - xfail: contraction following special characters is ignored

- - '(j [j {j ''j "j -j'
  - '"<;j .<;j _<;j,8;j 8;j -;j'

- - '!j @j #j $j %j ^j &j *j )j _j =j +j ]j }j \\j |j .j ,j ;j :j ?j <j >j `j ~j /j'
  - '!;j `a;j _?;j `s;j .0;j `5;j `&;j "9;j ">;j .-;j "7;j "6;j .>;j _>;j _*;j _|;j 4;j 1;j ;2j0 3;j ;8;j `<;j `>;j .*;j `9;j _/;j'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-just xl-([{''"just xl/-just xl$-just'
  - 'xl-j xl-"<.<{''0j xl/-j xl`s-j'

- - 'xl(just xl[just xl{just xl''just xl"just xl-=([{''"just'
  - 'xl"<j xl.<j xl{j xl''j xl0j xl-"7"<.<{''0j'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'just) just] just} just'' just" just- just, just. just; just: just? just!'
  - 'j"> j.> j_> j,0j0 j- j1 j4 j; j03 j8 j!'

- - 'just@ just# just$ just% just^ just& just* just( just_ just= just+ just[ just{ just\\ just| just< just> just` just~ just/'
  - 'j`a j_? j`s j.0 j`5 j`& j"9 j"< j.- j"7 j"6 j.< j_< j_* j_| j`< j`> j."9 j`9 j/'
  - xfail: contraction followed by special characters is ignored

- - 'j) j] j} j'' j" j- j, j. j; j: j? j!'
  - ';j"> ;j.> ;j_> ;j,0;j0 ;j- ;j1 ;j4 ;j; ;j03 ;j8 ;j!'

- - 'j@ j# j$ j% j^ j& j* j( j_ j= j+ j[ j{ j\\ j| j< j> j` j~ j/'
  - ';j`a ;j_? ;j`s ;j.0 ;j`5 ;j`& ;j"9 ;j"< ;j.- ;j"7 ;j"6 ;j.< ;j_< ;j_* ;j_| ;j`< ;j`> ;j."9 ;j`9 ;j/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'just-xl just-([{''"xl just-/xl just-$xl'
  - 'j-xl j-"<.<{''0xl j-_/xl j-`sxl'

- - 'just(xl just[xl just{xl just''xl just"xl just=([{''"-xl just([{''"-xl just/-xl just$-xl'
  - 'j"<xl j.<xl j{xl j''xl j0xl j"7"<.<{''0-xl j"<.<{''0-xl j/-xl j`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(knowledge [knowledge {knowledge ''knowledge "knowledge -knowledge'
  - '"<k .<k _<k,8k 8k -k'

- - '!knowledge @knowledge #knowledge $knowledge %knowledge ^knowledge &knowledge *knowledge )knowledge _knowledge =knowledge +knowledge ]knowledge }knowledge \\knowledge |knowledge .knowledge ,knowledge ;knowledge :knowledge ?knowledge <knowledge >knowledge'
  - '!k `ak _?k `sk .0k `5k `&k "9k ">k .-k "7k "6k .>k _>k _*k _|k 4k 1k ;k0 3k ;8k `<k `>k'
  - xfail: contraction following special characters is ignored

- - '`knowlede ~knowlede /knowlede'
  - '.*k `9k _/k'
  - xfail: contraction following special characters is ignored

- - '(k [k {k ''k "k -k'
  - '"<;k .<;k _<;k,8;k 8;k -;k'

- - '!k @k #k $k %k ^k &k *k )k _k =k +k ]k }k \\k |k .k ,k ;k :k ?k <k >k `k ~k /k'
  - '!;k `a;k _?;k `s;k .0;k `5;k `&;k "9;k ">;k .-;k "7;k "6;k .>;k _>;k _*;k _|;k 4;k 1;k ;2k0 3;k ;8;k `<;k `>;k .*;k `9;k _/;k'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-knowledge xl-([{''"knowledge xl/-knowledge xl$-knowledge'
  - 'xl-k xl-"<.<{''0k xl_/-k xl`s-k'

- - 'xl(knowledge xl[knowledge xl{knowledge xl''knowledge xl"knowledge xl-=([{''"knowledge'
  - 'xl"<k xl.<k xl{k xl''k xl0k xl-"7"<.<{''0k'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'knowledge) knowledge] knowledge} knowledge'' knowledge" knowledge- knowledge, knowledge. knowledge; knowledge: knowledge? knowledge!'
  - 'k"> k.> k_> k,0k0 k- k1 k4 k; k03 k8 k!'

- - 'knowledge@ knowledge# knowledge$ knowledge% knowledge^ knowledge& knowledge* knowledge( knowledge_ knowledge= knowledge+ knowledge[ knowledge{ knowledge\\ knowledge| knowledge< knowledge> knowledge` knowledge~ knowledge/'
  - 'k`a k_? k`s k.0 k`5 k`& k"9 k"< k.- k"7 k"6 k.< k_< k_* k_| k`< k`> k."9 k`9 k/'
  - xfail: contraction followed by special characters is ignored

- - 'k) k] k} k'' k" k- k, k. k; k: k? k!'
  - ';k"> ;k.> ;k_> ;k,0;k0 ;k- ;k1 ;k4 ;k; ;k03 ;k8 ;k!'

- - 'k@ k# k$ k% k^ k& k* k( k_ k= k+ k[ k{ k\\ k| k< k> k` k~ k/'
  - ';k`a ;k_? ;k`s ;k.0 ;k`5 ;k`& ;k"9 ;k"< ;k.- ;k"7 ;k"6 ;k.< ;k_< ;k_* ;k_| ;k`< ;k`> ;k."9 ;k`9 ;k/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'knowledge-xl knowledge-([{''"xl knowledge-/xl knowledge-$xl'
  - 'k-xl k-"<.<{''0xl k-_/xl k-`sxl'

- - 'knowledge(xl knowledge[xl knowledge{xl knowledge''xl knowledge"xl knowledge=([{''"-xl knowledge([{''"-xl knowledge/-xl knowledge$-xl'
  - 'k"<xl k.<xl k{xl k''xl k0xl k"7"<.<{''0-xl k"<.<{''0-xl k/-xl k`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(letter [letter {letter ''letter "letter -letter'
  - '"<lr .<lr _<lr,8lr 8lr -lr'

- - '!letter @letter #letter $letter %letter ^letter &letter *letter )letter _letter =letter +letter ]letter }letter \\letter |letter .letter ,letter ;letter :letter ?letter <letter >letter `letter ~letter /letter'
  - '!lr `alr _?lr `slr .0lr `5lr `&lr "9lr ">lr .-lr "7lr "6lr .>lr }lr _*lr _|lr 4lr 1lr ;lr0 3lr ;8lr `<lr `>lr ;8lr .*lr `9lr _/lr'
  - xfail: contraction following special characters is ignored

- - '(lr [lr {lr ''lr "lr -lr'
  - '"<;lr .<;lr _<;lr,8;lr 8;lr -;lr'

- - '!lr @lr #lr $lr %lr ^lr &lr *lr )lr _lr =lr +lr ]lr }lr \\lr |lr .lr ,lr ;lr :lr ?lr <lr >lr ?lr `lr ~lr /lr'
  - '!;lr `a;lr _?;lr `s;lr .0;lr `5;lr `&;lr "9;lr ">;lr .-;lr "7;lr "6;lr .>;lr _>;lr _*;lr _|;lr 4;lr 1;lr ;2lr0 3;lr ;8;lr `<;lr `>;lr .*;lr `9;lr _/;lr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-letter xl-([{''"letter xl/-letter xl$-letter'
  - 'xl-lr xl-"<.<{''0lr xl_/-lr xl`s-lr'

- - 'xl(letter xl[letter xl{letter xl''letter xl"letter xl-=([{''"letter'
  - 'xl"<lr xl.<lr xl{lr xl''lr xl0lr xl-"7"<.<{''0lr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'letter) letter] letter} letter'' letter" letter- letter, letter. letter; letter: letter? letter!'
  - 'lr"> lr.> lr_> lr,0lr0 lr- lr1 lr4 lr; lr03 lr8 lr!'

- - 'letter@ letter# letter$ letter% letter^ letter& letter* letter( letter_ letter= letter+ letter[ letter{ letter\\ letter| letter< letter> letter` letter~ letter/'
  - 'lr`a lr_? lr`s lr.0 lr`5 lr`& lr"9 lr"< lr.- lr"7 lr"6 lr.< lr_< lr_* lr_| lr`< lr`> lr."9 lr`9 lr/'
  - xfail: contraction followed by special characters is ignored

- - 'lr) lr] lr} lr'' lr" lr- lr, lr. lr; lr: lr? lr!'
  - ';lr"> ;lr.> ;lr_> ;lr,0;lr0 ;lr- ;lr1 ;lr4 ;lr; ;lr03 ;lr8 ;lr!'

- - 'lr@ lr# lr$ lr% lr^ lr& lr* lr( lr_ lr= lr+ lr[ lr{ lr\\ lr| lr< lr> lr` lr~ lr/'
  - ';lr`a ;lr_? ;lr`s ;lr.0 ;lr`5 ;lr`& ;lr"9 ;lr"< ;lr.- ;lr"7 ;lr"6 ;lr.< ;lr_< ;lr_* ;lr_| ;lr`< ;lr`> ;lr."9 ;lr`9 ;lr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'letter-xl letter-([{''"xl letter-/xl letter-$xl'
  - 'lr-xl lr-"<.<{''0xl lr-_/xl lr-`sxl'

- - 'letter(xl letter[xl letter{xl letter''xl letter"xl letter=([{''"-xl letter([{''"-xl letter/-xl letter$-xl'
  - 'lr"<xl lr.<xl lr{xl lr''xl lr0xl lr"7"<.<{''0-xl lr"<.<{''0-xl lr/-xl lr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'letterb letterc letterd letterf letterg letterh letterj letterk letterl letterm lettern letterp letterq letterr letters lettert letterv letterw letterx letterz'
  - 'lrb lrc lrd lrf lrg lrh lrj lrk lrl lrm lrn lrp lrq lrr lrs lrt lrv lrw lrx lrz'

- - 'lrb lrc lrd lrf lrg lrh lrj lrk lrl lrm lrn lrp lrq lrr lrs lrt lrv lrw lrx lrz lrful lrment lrness lrsion lrtion lrless lrance lrence lrity lrong'
  - ';lrb ;lrc ;lrd ;lrf ;lrg ;lrh ;lrj ;lrk ;lrl ;lrm ;lrn ;lrp ;lrq ;lrr ;lrs ;lrt ;lrv ;lrw ;lrx ;lrz ;lr;l ;lr;t ;lr;s ;lr4n ;lr;n ;lr4s ;lr4e ;lr;e ;lr;y ;lr;g'
  - xfail: non-contraction of "lr" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "lr"

- - '(like [like {like ''like "like -like'
  - '"<l .<l _<l,8l 8l -l'

- - '!like @like #like $like %like ^like &like *like )like _like =like +like ]like }like \\like |like .like ,like ;like :like ?like <like >like `knowlede ~knowlede /knowlede'
  - '!l `al _?l `sl .0l `5l `&l "9l ">l .-l "7l "6l .>l _>l _*l _|l 4l 1l ;l0 3l ;8l `<l `>l .*l `9l _/l'
  - xfail: contraction following special characters is ignored

- - '(l [l {l ''l "l -l'
  - '"<;l .<;l _<;l,8;l 8;l -;l'

- - '!l @l #l $l %l ^l &l *l )l _l =l +l ]l }l \\l |l .l ,l ;l :l ?l <l >l `l ~l /l'
  - '!;l `a;l _?;l `s;l .0;l `5;l `&;l "9;l ">;l .-;l "7;l "6;l .>;l _>;l _*;l _|;l 4;l 1;l ;2l0 3;l ;8;l `<;l `>;l .*;l `9;l _/;l'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-like xl-([{''"like xl/-like xl$-like'
  - 'xl-l xl-"<.<{''0l xl_/-l xl`s-l'

- - 'xl(like xl[like xl{like xl''like xl"like xl-=([{''"like'
  - 'xl"<l xl.<l xl{l xl''l xl0l xl-"7"<.<{''0l'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'like) like] like} like'' like" like- like, like. like; like: like? like!'
  - 'l"> l.> l_> l,0l0 l- l1 l4 l; l03 l8 l!'

- - 'like@ like# like$ like% like^ like& like* like( like_ like= like+ like[ like{ like\\ like| like< like> like` like~ like/'
  - 'l`a l_? l`s l.0 l`5 l`& l"9 l"< l.- l"7 l"6 l.< l_< l_* l_| l`< l`> l."9 l`9 l/'
  - xfail: contraction followed by special characters is ignored

- - 'l) l] l} l'' l" l- l, l. l; l: l? l!'
  - ';k"> ;k.> ;k_> ;k,0;k0 ;k- ;k1 ;k4 ;k; ;k03 ;k8 ;k!'

- - 'l@ l# l$ l% l^ l& l* l( l_ l= l+ l[ l{ l\\ l| l< l> l` l~ l/'
  - ';k`a ;k_? ;k`s ;k.0 ;k`5 ;k`& ;k"9 ;k"< ;k.- ;k"7 ;k"6 ;k.< ;k_< ;k_* ;k_| ;k`< ;k`> ;k."9 ;k`9 ;k/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'like-xl like-([{''"xl like-/xl like-$xl'
  - 'l-xl l-"<.<{''0xl l-_/xl l-`sxl'

- - 'like(xl like[xl like{xl like''xl like"xl like=([{''"-xl like([{''"-xl like/-xl like$-xl'
  - 'l"<xl l.<xl l{xl l''xl l0xl l"7"<.<{''0-xl l"<.<{''0-xl l/-xl l`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(little [little {little ''little "little -little'
  - '"<ll .<ll _<ll,8ll 8ll -ll'

- - '!little @little #little $little %little ^little &little *little )little _little =little +little ]little }little \\little |little .little ,little ;little :little ?little <little >little `little ~little /little'
  - '!ll `all _?ll `sll .0ll `5ll `&ll "9ll ">ll .-ll "7ll "6ll .>ll _>ll _*ll _|ll 4ll 1ll ;ll0 3ll ;8ll `<ll `>ll ;8ll .*ll `9ll _/ll'
  - xfail: contraction following special characters is ignored

- - '(ll [ll {ll ''ll "ll -ll'
  - '"<;ll .<;ll _<;ll,8;ll 8;ll -;ll'

- - '!ll @ll #ll $ll %ll ^ll &ll *ll )ll _ll =ll +ll ]ll }ll \\ll |ll .ll ,ll ;ll :ll ?ll <ll >ll ?ll `ll ~ll /ll'
  - '!;ll `a;ll _?;ll `s;ll .0;ll `5;ll `&;ll "9;ll ">;ll .-;ll "7;ll "6;ll .>;ll _>;ll _*;ll _|;ll 4;ll 1;ll ;2ll0 3;ll ;8;ll `<;ll `>;ll .*;ll `9;ll _/;ll'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-little xl-([{''"little xl/-little xl$-little'
  - 'xl-ll xl-"<.<{''0ll xl_/-ll xl`s-ll'

- - 'xl(little xl[little xl{little xl''little xl"little xl-=([{''"little'
  - 'xl"<ll xl.<ll xl{ll xl''ll xl0ll xl-"7"<.<{''0ll'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'little) little] little} little'' little" little- little, little. little; little: little? little!'
  - 'll"> ll.> ll_> ll,0ll0 ll- ll1 ll4 ll; ll03 ll8 ll!'

- - 'little@ little# little$ little% little^ little& little* little( little_ little= little+ little[ little{ little\\ little| little< little> little` little~ little/'
  - 'll`a ll_? ll`s ll.0 ll`5 ll`& ll"9 ll"< ll.- ll"7 ll"6 ll.< ll_< ll_* ll_| ll`< ll`> ll."9 ll`9 ll/'
  - xfail: contraction followed by special characters is ignored

- - 'll) ll] ll} ll'' ll" ll- ll, ll. ll; ll: ll? ll!'
  - ';ll"> ;ll.> ;ll_> ;ll,0;ll0 ;ll- ;ll1 ;ll4 ;ll; ;ll03 ;ll8 ;ll!'

- - 'll@ ll# ll$ ll% ll^ ll& ll* ll( ll_ ll= ll+ ll[ ll{ ll\\ ll| ll< ll> ll` ll~ ll/'
  - ';ll`a ;ll_? ;ll`s ;ll.0 ;ll`5 ;ll`& ;ll"9 ;ll"< ;ll.- ;ll"7 ;ll"6 ;ll.< ;ll_< ;ll_* ;ll_| ;ll`< ;ll`> ;ll."9 ;ll`9 ;ll/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'little-xl little-([{''"xl little-/xl little-$xl'
  - 'll-xl ll-"<.<{''0xl ll-_/xl ll-`sxl'

- - 'little(xl little[xl little{xl little''xl little"xl little=([{''"-xl little([{''"-xl little/-xl little$-xl'
  - 'll"<xl ll.<xl ll{xl ll''xl ll0xl ll"7"<.<{''0-xl ll"<.<{''0-xl ll/-xl ll`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'littleb littlec littled littlef littleg littleh littlej littlek littlel littlem littlen littlep littleq littler littles littlet littlev littlew littlex littlez'
  - 'llb llc lld llf llg llh llj llk lll llm lln llp llq llr lls llt llv llw llx llz'

- - 'llc lld llr'
  - ';llc ;lld ;llr'

- - 'llb llf llg llh llj llk lll llm lln llp llq lls llt llv llw llx llz llful llment llness llsion lltion llless llance llence llity llong'
  - ';llb ;llf ;llg ;llh ;llj ;llk ;lll ;llm ;lln ;llp ;llq ;lls ;llt ;llv ;llw ;llx ;llz ;ll;l ;ll;t ;ll;s ;ll4n ;ll;n ;ll4s ;ll4e ;ll;e ;ll;y ;ll;g'
  - xfail: non-contraction of "ll" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "ll"

- - '(more [more {more ''more "more -more'
  - '"<m .<m _<m ,8m 8m -m'

- - '!more @more #more $more %more ^more &more *more )more _more =more +more ]more }more \\more |more .more ,more ;more :more ?more <more >more `more ~more /more'
  - '6m `am _?m `sm .0m `5m `&m "9m ">m .-m "7m "6m .>m _>m _*m _|m 4m 1m ;m0 3m ;8m `<m `>m .*m `9m _/m'
  - xfail: contraction following special characters is ignored

- - '(m [m {m ''m "m -m'
  - '"<;m .<;m _<;m ,8;m 8;m -;m'

- - '!m @m #m $m %m ^m &m *m )m _m =m +m ]m }m \\m |m .m ,m ;m :m ?m <m >m `m ~m /m'
  - '6;m `a;m _?;m `s;m .0;m `5;m `&;m "9;m ">;m .-;m "7;m "6;m .>;m _>;m _*;m _|;m 4;m 1;m ;2m0 3;m ;8;m `<;m `>;m .*;m `9;m _/;m'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-more xl-([{''"more xl/-more xl$-more'
  - 'xl-m xl-"<.<{''0m xl_/-m xl`s-m'

- - 'xl(more xl[more xl{more xl''more xl"more xl-=([{''"more'
  - 'xl"<m xl.<m xl{m xl''m xl0m xl-"7"<.<{''0m'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'more) more] more} more'' more" more- more, more. more; more: more? more!'
  - 'm"> m.> m_> m,0 m0 m- m1 m4 m; m03 m8 m!'

- - 'more@ more# more$ more% more^ more& more* more( more_ more= more+ more[ more{ more\\ more| more< more> more` more~ more/'
  - 'm`a m_? m`s m.0 m`5 m`& m"9 m"< m.- m"7 m"6 m.< m_< m_* m_| m`< m`> m."9 m`9 m/'
  - xfail: contraction followed by special characters is ignored

- - 'm) m] m} m'' m" m- m, m. m; m: m? m!'
  - ';m"> ;m.> ;m_> ;m,0 ;m0 ;m- ;m1 ;m4 ;m; ;m03 ;m8 ;m!'

- - 'm@ m# m$ m% m^ m& m* m( m_ m= m+ m[ m{ m\\ m| m< m> m` m~ m/'
  - ';m`a ;m_? ;m`s ;m.0 ;m`5 ;m`& ;m"9 ;m"< ;m.- ;m"7 ;m"6 ;m.< ;m_< ;m_* ;m_| ;m`< ;m`> ;m."9 ;m`9 ;m/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'more-xl more-([{''"xl more-/xl more-$xl'
  - 'm-xl m-"<.<{''0xl m-_/xl m-`sxl'

- - 'more(xl more[xl more{xl more''xl more"xl more=([{''"-xl more([{''"-xl more/-xl more$-xl'
  - 'm"<xl m.<xl m{xl m''xl m0xl m"7"<.<{''0-xl m"<.<{''0-xl m/-xl m`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(much [much {much ''much "much -much'
  - '"<m* .<m* _<m* ,8m* 8m* -m*'

- - '!much @much #much $much %much ^much &much *much )much _much =much +much ]much }much \\much |much .much ,much ;much :much ?much <much >much `much ~much /much'
  - '6m* `am* _?m* `sm* .0m* `5m* `&m* *m* ">m* .-m* "7m* "6m* .>m* _>m* _*m* _|m* 4m* 1m* ;m*0 3m* ;8m* `<m* `>m* ;8m* .*m* `9m* _/m*'
  - xfail: contraction following special characters is ignored

- - '(mch [mch {mch ''mch "mch -mch'
  - '"<mch .<mch _<mch ,8mch 8mch -mch'

- - '!mch @mch #mch $mch %mch ^mch &mch *mch )mch _mch =mch +mch ]mch }mch \\mch |mch .mch ,mch ;mch :mch ?mch <mch >mch `mch ~mch /mch'
  - '6mch `amch _?mch `smch .0mch `5mch `&mch *mch ">mch .-mch "7mch "6mch .>mch _>mch _*mch _|mch 4mch 1mch ;mch0 3mch ;8mch `<mch `>mch .*mch `9mch _/mch'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-much xl-([{''"much l/-much l$-much'
  - 'xl-m* xl-"<.<{''0m* l/-m* l$-m*'

- - 'xl(much xl[much xl{much xl''much xl"much xl-=([{''"much'
  - 'xl"<m* xl.<m* xl{m* xl''m* xl0m* xl-"7"<.<{''0m*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'much) much] much} much'' much" much- much, much. much; much: much? much!'
  - 'm*"> m*.> m*_> m*,0 m*0 m*- m*1 m*4 m*; m*03 m*8 m*!'

- - 'much@ much# much$ much% much^ much& much* much( much_ much= much+ much[ much{ much\\ much| much< much> much` much~ much/'
  - 'm*`a m*_? m*`s m*.0 m*`5 m*`& m*"9 m*"< m*.- m*"7 m*"6 m*.< m*_< m*_* m*_| m*`< m*`> m*."9 m*`9 m*/'
  - xfail: contraction followed by special characters is ignored

- - 'mch) mch] mch} mch'' mch" mch- mch, mch. mch; mch: mch? mch!'
  - 'mch"> mch.> mch_> mch,0 mch0 mch- mch1 mch4 mch; mch03 mch8 mch!'

- - 'mch@ mch# mch$ mch% mch^ mch& mch* mch( mch_ mch= mch+ mch[ mch{ mch\\ mch| mch< mch> mch` mch~ mch/'
  - 'mch`a mch_? mch`s mch.0 mch`5 mch`& mch"9 mch"< mch.- mch"7 mch"6 mch.< mch_< mch_* mch_| mch`< mch`> mch."9 mch`9 mch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'much-xl much-([{''"xl much-/xl much-$xl'
  - 'm*-xl m*-"<.<{''0xl m*-_/xl m*-`sxl'

- - 'much(xl much[xl much{xl much''xl much"xl much=([{''"-xl much([{''"-xl much/-xl much$-xl'
  - 'm*"<xl m*.<xl m*{xl m*''xl m*0xl m*"7"<.<{''0-xl m*"<.<{''0-xl m*/-xl m*`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(muchs [muchs {muchs ''muchs "muchs -muchs'
  - '"<m*s .<m*s _<m*s ,8m*s 8m*s -m*s'

- - '!muchs @muchs #muchs $muchs %muchs ^muchs &muchs *muchs )muchs _muchs =muchs +muchs ]muchs }muchs \\muchs |muchs .muchs ,muchs ;muchs :muchs ?muchs <muchs >muchs `muchs ~muchs /muchs'
  - '6m*s `am*s _?m*s `sm*s .0m*s `5m*s `&m*s "9m*s ">m*s .-m*s "7m*s "6m*s .>m*s _>m*s _*m*s _|m*s 4m*s 1m*s ;m*s0 3m*s ;8m*s `<m*s `>m*s ;8m*s .*m*s `9m*s _/m*s'
  - xfail: contraction following special characters is ignored

- - 'mchs (mchs [mchs {mchs ''mchs "mchs -mchs !mchs @mchs #mchs $mchs %mchs ^mchs &mchs *mchs )mchs _mchs =mchs +mchs ]mchs }mchs \\mchs |mchs .mchs ,mchs ;mchs :mchs ?mchs <mchs >mchs `mchs ~mchs /mchs'
  - 'mchs "<mchs .<mchs _<mchs ,8mchs 8mchs -mchs 6mchs `amchs _?mchs `smchs .0mchs `5mchs `&mchs "9mchs ">mchs .-mchs "7mchs "6mchs .>mchs _>mchs _*mchs _|mchs 4mchs 1mchs ;mchs0 3mchs ;8mchs `<mchs `>mchs .*mchs `9mchs _/mchs'
  - xfail: non-contraction of "mchs" conflicts witcv contraction of "muchs"

- - 'xl-muchs xl-([{''"muchs l/-muchs l$-muchs'
  - 'xl-m*s xl-"<.<{''0m*s l/-m*s l$-m*s'

- - 'xl(muchs xl[muchs xl{muchs xl''muchs xl"muchs xl-=([{''"muchs'
  - 'xl"<m*s xl.<m*s xl{m*s xl''m*s xl0m*s xl-"7"<.<{''0m*s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'muchs) muchs] muchs} muchs'' muchs" muchs- muchs, muchs. muchs; muchs: muchs? muchs!'
  - 'm*s"> m*s.> m*s_> m*s,0 m*s0 m*s- m*s1 m*s4 m*s; m*s03 m*s8 m*s!'

- - 'muchs@ muchs# muchs$ muchs% muchs^ muchs& muchm* muchs( muchs_ muchs= muchs+ muchs[ muchs{ muchs\\ muchs| muchs< muchs> muchs` muchs~ muchs/'
  - 'm*s`a m*s_? m*s`s m*s.0 m*s`5 m*s`& m*m"9 m*s"< m*s.- m*s"7 m*s"6 m*s.< m*s_< m*s_* m*s_| m*s`< m*s`> m*s."9 m*s`9 m*s/'
  - xfail: contraction followed by special characters is ignored

- - 'mchs) mchs] mchs} mchs'' mchs" mchs- mchs, mchs. mchs; mchs: mchs? mchs! mchs@ mchs# mchs$ mchs% mchs^ mchs& mchm* mchs( mchs_ mchs= mchs+ mchs[ mchs{ mchs\\ mchs| mchs< mchs> mchs` mchs~ mchs/'
  - 'mchs"> mchs.> mchs_> mchs,0 mchs0 mchs- mchs1 mchs4 mchs; mchs03 mchs8 mchs6 mchs`a mchs_? mchs`s mchs.0 mchs`5 mchs`& mchm"9 mchs"< mchs.- mchs"7 mchs"6 mchs.< mchs_< mchs_* mchs_| mchs`< mchs`> mchs."9 mchs`9 mchs/'
  - xfail: non-contraction of "mchs" conflicts with contraction of "muchs"

- - 'muchs-xl muchs-([{''"xl muchs-/xl muchs-$xl'
  - 'm*s-xl m*s-"<.<{''0xl m*s-_/xl m*s-`sxl'

- - 'muchs(xl muchs[xl muchs{xl muchs''xl muchs"xl muchs=([{''"-xl muchs([{''"-xl muchs/-xl muchs$-xl'
  - 'm*s"<xl m*s.<xl m*s{xl m*s''xl m*s0xl m*s"7"<.<{''0-xl m*s"<.<{''0-xl m*s/-xl m*s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(must [must {must ''must "must -must'
  - '"<m/ .<m/ _<m/ ,8m/ 8m/ -m/'

- - '!must @must #must $must %must ^must &must *must )must _must =must +must ]must }must \\must |must .must ,must ;must :must ?must <must >must `must ~must /must'
  - '6m/ `am/ _?m/ `sm/ .0m/ `5m/ `&m/ "9m/ ">m/ .-m/ "7m/ "6m/ .>m/ _>m/ _*m/ _|m/ 4m/ 1m/ ;m/0 3m/ ;8m/ `<m/ `>m/ ;8m/ .*m/ `9m/ /m/'
  - xfail: contraction following special characters is ignored

- - '(mst [mst {mst ''mst "mst -mst'
  - '"<mst .<mst _<mst ,8mst 8mst -mst'

- - '!mst @mst #mst $mst %mst ^mst &mst *mst )mst _mst =mst +mst ]mst }mst \\mst |mst .mst ,mst ;mst :mst ?mst <mst >mst `mst ~mst /mst'
  - '6mst `amst _?mst `smst .0mst `5mst `&mst "9mst ">mst .-mst "7mst "6mst .>mst _>mst _*mst _|mst 4mst 1mst ;mst0 3mst ;8mst `<mst `>mst .*mst `9mst /mst'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-must xl-([{''"must l/-must l$-must'
  - 'xl-m/ xl-"<.<{''0m/ l/-m/ l$-m/'

- - 'xl(must xl[must xl{must xl''must xl"must xl-=([{''"must'
  - 'xl"<m/ xl.<m/ xl{m/ xl''m/ xl0m/ xl-"7"<.<{''0m/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'must) must] must} must'' must" must- must, must. must; must: must? must!'
  - 'm/"> m/.> m/_> m/,0 m/0 m/- m/1 m/4 m/; m/03 m/8 m/!'

- - 'must@ must# must$ must% must^ must& must* must( must_ must= must+ must[ must{ must\\ must| must< must> must` must~ must/'
  - 'm/`a m/_? m/`s m/.0 m/`5 m/`& m/"9 m/"< m/.- m/"7 m/"6 m/.< m/_< m/_* m/_| m/`< m/`> m/."9 m/`9 m//'
  - xfail: contraction followed by special characters is ignored

- - 'mst) mst] mst} mst'' mst" mst- mst, mst. mst; mst: mst? mst!'
  - 'mst"> mst.> mst_> mst,0 mst0 mst- mst1 mst4 mst; mst03 mst8 mst!'

- - 'mst@ mst# mst$ mst% mst^ mst& mst* mst( mst_ mst= mst+ mst[ mst{ mst\\ mst| mst< mst> mst` mst~ mst/'
  - 'mst`a mst_? mst`s mst.0 mst`5 mst`& mst"9 mst"< mst.- mst"7 mst"6 mst.< mst_< mst_* mst_| mst`< mst`> mst."9 mst`9 mst/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'must-xl must-([{''"xl must-/xl must-$xl'
  - 'm/-xl m/-"<.<{''0xl m/-_/xl m/-`sxl'

- - 'must(xl must[xl must{xl must''xl must"xl must=([{''"-xl must([{''"-xl must/-xl must$-xl'
  - 'm/"<xl m/.<xl m/{xl m/''xl m/0xl m/"7"<.<{''0-xl m/"<.<{''0-xl m//-xl m/`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musta [musta {musta ''musta "musta -musta'
  - '"<m/a .<m/a _<m/a ,8m/a 8m/a -m/a'

- - '!musta @musta #musta $musta %musta ^musta &musta *musta )musta _musta =musta +musta ]musta }musta \\musta |musta .musta ,musta ;musta :musta ?musta <musta >musta `musta ~musta /musta'
  - '6m/a `am/a _?m/a `sm/a .0m/a `5m/a `&m/a "9m/a ">m/a .-m/a "7m/a "6m/a .>m/a _>m/a _*m/a _|m/a 4m/a 1m/a ;m/a0 3m/a ;8m/a `<m/a `>m/a ;8m/a .*m/a `9m/a _/m/a'
  - xfail: contraction following special characters is ignored

- - 'msta (msta [msta {msta ''msta "msta -msta !msta @msta #msta $msta %msta ^msta &msta *msta )msta _msta =msta +msta ]msta }msta \\msta |msta .msta ,msta ;msta :msta ?msta <msta >msta `msta ~msta /msta'
  - 'msta "<msta .<msta _<msta ,8msta 8msta -msta 6msta `amsta _?msta `smsta .0msta `5msta `&msta "9msta ">msta .-msta "7msta "6msta .>msta _>msta _*msta _|msta 4msta 1msta ;msta0 3msta ;8msta `<msta `>msta .*msta `9msta _/msta'
  - xfail: non-contraction of "msta" conflicta witcv contraction of "musta"

- - 'xl-musta xl-([{''"musta l/-musta l$-musta'
  - 'xl-m/a xl-"<.<{''0m/a l/-m/a l$-m/a'

- - 'xl(musta xl[musta xl{musta xl''musta xl"musta xl-=([{''"musta'
  - 'xl"<m/a xl.<m/a xl{m/a xl''m/a xl0m/a xl-"7"<.<{''0m/a'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musta) musta] musta} musta'' musta" musta- musta, musta. musta; musta: musta? musta!'
  - 'm/a"> m/a.> m/a_> m/a,0 m/a0 m/a- m/a1 m/a4 m/a; m/a03 m/a8 m/a!'

- - 'musta@ musta# musta$ musta% musta^ musta& mustm/ musta( musta_ musta= musta+ musta[ musta{ musta\\ musta| musta< musta> musta` musta~ musta/'
  - 'm/a`a m/a_? m/a`s m/a.0 m/a`5 m/a`& m/m_/ m/a"< m/a.- m/a"7 m/a"6 m/a.< m/a_< m/a_* m/a_| m/a`< m/a`> m/a."9 m/a`9 m/a/'
  - xfail: contraction followed by special characters is ignored

- - 'msta) msta] msta} msta'' msta" msta- msta, msta. msta; msta: msta? msta! msta@ msta# msta$ msta% msta^ msta& mstm/ msta( msta_ msta= msta+ msta[ msta{ msta\\ msta| msta< msta> msta` msta~ msta/'
  - 'msta"> msta.> msta_> msta,0 msta0 msta- msta1 msta4 msta; msta03 msta8 msta6 msta`a msta_? msta`s msta.0 msta`5 msta`& mstm_/ msta"< msta.- msta"7 msta"6 msta.< msta_< msta_* msta_| msta`< msta`> msta."9 msta`9 msta/'
  - xfail: non-contraction of "msta" conflicta with contraction of "musta"

- - 'musta-xl musta-([{''"xl musta-/xl musta-$xl'
  - 'm/a-xl m/a-"<.<{''0xl m/a-_/xl m/a-`sxl'

- - 'musta(xl musta[xl musta{xl musta''xl musta"xl musta=([{''"-xl musta([{''"-xl musta/-xl musta$-xl'
  - 'm/a"<xl m/a.<xl m/a{xl m/a''xl m/a0xl m/a"7"<.<{''0-xl m/a"<.<{''0-xl m/a/-xl m/a`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musts [musts {musts ''musts "musts -musts'
  - '"<m/s .<m/s _<m/s ,8m/s 8m/s -m/s'

- - '!musts @musts #musts $musts %musts ^musts &musts *musts )musts _musts =musts +musts ]musts }musts \\musts |musts .musts ,musts ;musts :musts ?musts <musts >musts `musts ~musts /musts'
  - '6m/s `am/s _?m/s `sm/s .0m/s `5m/s `&m/s "9m/s ">m/s .-m/s "7m/s "6m/s .>m/s _>m/s _*m/s _|m/s 4m/s 1m/s ;m/s0 3m/s ;8m/s `<m/s `>m/s ;8m/s .*m/s `9m/s _/m/s'
  - xfail: contraction following special characters is ignored

- - 'msts (msts [msts {msts ''msts "msts -msts !msts @msts #msts $msts %msts ^msts &msts *msts )msts _msts =msts +msts ]msts }msts \\msts |msts .msts ,msts ;msts :msts ?msts <msts >msts `msts ~msts /msts'
  - 'msts "<msts .<msts _<msts ,8msts 8msts -msts 6msts `amsts _?msts `smsts .0msts `5msts `&msts "9msts ">msts .-msts "7msts "6msts .>msts _>msts _*msts _|msts 4msts 1msts ;msts0 3msts ;8msts `<msts `>msts .*msts `9msts _/msts'
  - xfail: non-contraction of "msts" conflicts witcv contraction of "musts"

- - 'xl-musts xl-([{''"musts l/-musts l$-musts'
  - 'xl-m/s xl-"<.<{''0m/s l/-m/s l$-m/s'

- - 'xl(musts xl[musts xl{musts xl''musts xl"musts xl-=([{''"musts'
  - 'xl"<m/s xl.<m/s xl{m/s xl''m/s xl0m/s xl-"7"<.<{''0m/s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musts) musts] musts} musts'' musts" musts- musts, musts. musts; musts: musts? musts!'
  - 'm/s"> m/s.> m/s_> m/s,0 m/s0 m/s- m/s1 m/s4 m/s; m/s03 m/s8 m/s!'

- - 'musts@ musts# musts$ musts% musts^ musts& mustm/ musts( musts_ musts= musts+ musts[ musts{ musts\\ musts| musts< musts> musts` musts~ musts/'
  - 'm/s`a m/s_? m/s`s m/s.0 m/s`5 m/s`& m/m_/ m/s"< m/s.- m/s"7 m/s"6 m/s.< m/s_< m/s_* m/s_| m/s`< m/s`> m/s."9 m/s`9 m/s/'
  - xfail: contraction followed by special characters is ignored

- - 'msts) msts] msts} msts'' msts" msts- msts, msts. msts; msts: msts? msts! msts@ msts# msts$ msts% msts^ msts& mstm/ msts( msts_ msts= msts+ msts[ msts{ msts\\ msts| msts< msts> msts` msts~ msts/'
  - 'msts"> msts.> msts_> msts,0 msts0 msts- msts1 msts4 msts; msts03 msts8 msts6 msts`a msts_? msts`s msts.0 msts`5 msts`& mstm_/ msts"< msts.- msts"7 msts"6 msts.< msts_< msts_* msts_| msts`< msts`> msts."9 msts`9 msts/'
  - xfail: non-contraction of "msts" conflicts with contraction of "musts"

- - 'musts-xl musts-([{''"xl musts-/xl musts-$xl'
  - 'm/s-xl m/s-"<.<{''0xl m/s-_/xl m/s-`sxl'

- - 'musts(xl musts[xl musts{xl musts''xl musts"xl musts=([{''"-xl musts([{''"-xl musts/-xl musts$-xl'
  - 'm/s"<xl m/s.<xl m/s{xl m/s''xl m/s0xl m/s"7"<.<{''0-xl m/s"<.<{''0-xl m/s/-xl m/s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(musty [musty {musty ''musty "musty -musty'
  - '"<m/y .<m/y _<m/y ,8m/y 8m/y -m/y'

- - '!musty @musty #musty $musty %musty ^musty &musty *musty )musty _musty =musty +musty ]musty }musty \\musty |musty .musty ,musty ;musty :musty ?musty <musty >musty `musty ~musty /musty'
  - '6m/y `am/y _?m/y `sm/y .0m/y `5m/y `&m/y "9m/y ">m/y .-m/y "7m/y "6m/y .>m/y _>m/y _*m/y _|m/y 4m/y 1m/y ;m/y0 3m/y ;8m/y `<m/y `>m/y ;8m/y .*m/y `9m/y _/m/y'
  - xfail: contraction following special characters is ignored

- - 'msty (msty [msty {msty ''msty "msty -msty !msty @msty #msty $msty %msty ^msty &msty *msty )msty _msty =msty +msty ]msty }msty \\msty |msty .msty ,msty ;msty :msty ?msty <msty >msty `msty ~msty /msty'
  - 'msty "<msty .<msty _<msty ,8msty 8msty -msty 6msty `amsty _?msty `smsty .0msty `5msty `&msty "9msty ">msty .-msty "7msty "6msty .>msty _>msty _*msty _|msty 4msty 1msty ;msty0 3msty ;8msty `<msty `>msty .*msty `9msty _/msty'
  - xfail: non-contraction of "msty" conflicty witcv contraction of "musty"

- - 'xl-musty xl-([{''"musty l/-musty l$-musty'
  - 'xl-m/y xl-"<.<{''0m/y l/-m/y l$-m/y'

- - 'xl(musty xl[musty xl{musty xl''musty xl"musty xl-=([{''"musty'
  - 'xl"<m/y xl.<m/y xl{m/y xl''m/y xl0m/y xl-"7"<.<{''0m/y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'musty) musty] musty} musty'' musty" musty- musty, musty. musty; musty: musty? musty!'
  - 'm/y"> m/y.> m/y_> m/y,0 m/y0 m/y- m/y1 m/y4 m/y; m/y03 m/y8 m/y!'

- - 'musty@ musty# musty$ musty% musty^ musty& mustm/ musty( musty_ musty= musty+ musty[ musty{ musty\\ musty| musty< musty> musty` musty~ musty/'
  - 'm/y`a m/y_? m/y`s m/y.0 m/y`5 m/y`& m/m_/ m/y"< m/y.- m/y"7 m/y"6 m/y.< m/y_< m/y_* m/y_| m/y`< m/y`> m/y."9 m/y`9 m/y/'
  - xfail: contraction followed by special characters is ignored

- - 'msty) msty] msty} msty'' msty" msty- msty, msty. msty; msty: msty? msty! msty@ msty# msty$ msty% msty^ msty& mstm/ msty( msty_ msty= msty+ msty[ msty{ msty\\ msty| msty< msty> msty` msty~ msty/'
  - 'msty"> msty.> msty_> msty,0 msty0 msty- msty1 msty4 msty; msty03 msty8 msty6 msty`a msty_? msty`s msty.0 msty`5 msty`& mstm_/ msty"< msty.- msty"7 msty"6 msty.< msty_< msty_* msty_| msty`< msty`> msty."9 msty`9 msty/'
  - xfail: non-contraction of "msty" conflicty with contraction of "musty"

- - 'musty-xl musty-([{''"xl musty-/xl musty-$xl'
  - 'm/y-xl m/y-"<.<{''0xl m/y-_/xl m/y-`sxl'

- - 'musty(xl musty[xl musty{xl musty''xl musty"xl musty=([{''"-xl musty([{''"-xl musty/-xl musty$-xl'
  - 'm/y"<xl m/y.<xl m/y{xl m/y''xl m/y0xl m/y"7"<.<{''0-xl m/y"<.<{''0-xl m/y/-xl m/y`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(myself [myself {myself ''myself "myself -myself'
  - '"<myf .<myf _<myf ,8myf 8myf -myf'

- - '!myself @myself #myself $myself %myself ^myself &myself *myself )myself _myself =myself +myself ]myself }myself \\myself |myself .myself ,myself ;myself :myself ?myself <myself >myself `myself ~myself /myself'
  - '6myf `amyf _?myf `smyf .0myf `5myf `&myf "9myf ">myf .-myf "7myf "6myf .>myf _>myf _*myf _|myf 4myf 1myf ;myf0 3myf ;8myf `<myf `>myf .*myf `9myf _/myf'
  - xfail: contraction following special characters is ignored

- - '(myf [myf {myf ''myf "myf -myf'
  - '"<;myf .<;myf _<;myf ,8;myf 8;myf -;myf'

- - '!myf @myf #myf $myf %myf ^myf &myf *myf )myf _myf =myf +myf ]myf }myf \\myf |myf .myf ,myf ;myf :myf ?myf <myf >myf `myf ~myf /myf'
  - '6;myf `a;myf _?;myf `s;myf .0;myf `5;myf `&;myf "9;myf ">;myf .-;myf "7;myf "6;myf .>;myf _>;myf _*;myf _|;myf 4;myf 1;myf ;2myf0 3;myf ;8;myf `<;myf `>;myf .*;myf `9;myf _/;myf'
  - xfail: non-contraction following special characters myyself a missing grade 1 indicator

- - 'xl-myself xl-([{''"myself l/-myself l$-myself'
  - 'xl-myf xl-"<.<{''0myf l/-myf l$-myf'

- - 'xl(myself xl[myself xl{myself xl''myself xl"myself xl-=([{''"myself'
  - 'xl"<myf xl.<myf xl{myf xl''myf xl0myf xl-"7"<.<{''0myf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'myself) myself] myself} myself'' myself" myself- myself, myself. myself; myself: myself? myself!'
  - 'myf"> myf.> myf_> myf,0 myf0 myf- myf1 myf4 myf; myf03 myf8 myf!'

- - 'myself@ myself# myself$ myself% myself^ myself& myself* myself( myself_ myself= myself+ myself[ myself{ myself\\ myself| myself< myself> myself` myself~ myself/'
  - 'myf`a myf_? myf`s myf.0 myf`5 myf`& myf"9 myf"< myf.- myf"7 myf"6 myf.< myf_< myf_* myf_| myf`< myf`> myf."9 myf`9 myf/'
  - xfail: contraction followed by special characters is ignored

- - 'myf) myf] myf} myf'' myf" myf- myf, myf. myf; myf: myf? myf!'
  - ';myf"> ;myf.> ;myf_> ;myf,0 ;myf0 ;myf- ;myf1 ;myf4 ;myf; ;myf03 ;myf8 ;myf!'

- - 'myf@ myf# myf$ myf% myf^ myf& myf* myf( myf_ myf= myf+ myf[ myf{ myf\\ myf| myf< myf> myf` myf~ myf/'
  - ';myf`a ;myf_? ;myf`s ;myf.0 ;myf`5 ;myf`& ;myf"9 ;myf"< ;myf.- ;myf"7 ;myf"6 ;myf.< ;myf_< ;myf_* ;myf_| ;myf`< ;myf`> ;myf."9 ;myf`9 ;myf/'
  - xfail: non-contraction following special characters myyself a missing grade 1 indicator

- - 'myself-xl myself-([{''"xl myself-/xl myself-$xl'
  - 'myf-xl myf-"<.<{''0xl myf-_/xl myf-`sxl'

- - 'myself(xl myself[xl myself{xl myself''xl myself"xl myself=([{''"-xl myself([{''"-xl myself/-xl myself$-xl'
  - 'myf"<xl myf.<xl myf{xl myf''xl myf0xl myf"7"<.<{''0-xl myf"<.<{''0-xl myf/-xl myf`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(myselfs [myselfs {myselfs ''myselfs "myselfs -myselfs'
  - '"<myfs .<myfs _<myfs ,8myfs 8myfs -myfs'

- - '!myselfs @myselfs #myselfs $myselfs %myselfs ^myselfs &myselfs *myselfs )myselfs _myselfs =myselfs +myselfs ]myselfs }myselfs \\myselfs |myselfs .myselfs ,myselfs ;myselfs :myselfs ?myselfs <myselfs >myselfs `myselfs ~myselfs /myselfs'
  - '6myfs `amyfs _?myfs `smyfs .0myfs `5myfs `&myfs "9myfs ">myfs .-myfs "7myfs "6myfs .>myfs _>myfs _*myfs _|myfs 4myfs 1myfs ;myfs0 3myfs ;8myfs `<myfs `>myfs .*myfs `9myfs _/myfs'
  - xfail: contraction following special characters is ignored

- - 'myfs (myfs [myfs {myfs ''myfs "myfs -myfs !myfs @myfs #myfs $myfs %myfs ^myfs &myfs *myfs )myfs _myfs =myfs +myfs ]myfs }myfs \\myfs |myfs .myfs ,myfs ;myfs :myfs ?myfs <myfs >myfs `myfs ~myfs /myfs'
  - ';myfs "<;myfs .<;myfs _<;myfs ,8;myfs 8;myfs -;myfs 6;myfs `a;myfs _?;myfs `s;myfs .0;myfs `5;myfs `&;myfs "9;myfs ">;myfs .-;myfs "7;myfs "6;myfs .>;myfs _>;myfs _*;myfs _|;myfs 4;myfs 1;myfs ;2myfs0 3;myfs ;8;myfs `<;myfs `>;myfs .*;myfs `9;myfs _/;myfs'
  - xfail: non-contraction following special characters myyselfs a missing grade 1 indicator

- - 'xl-myselfs xl-([{''"myselfs l/-myselfs l$-myselfs'
  - 'xl-myfs xl-"<.<{''0myfs l/-myfs l$-myfs'

- - 'xl(myselfs xl[myselfs xl{myselfs xl''myselfs xl"myselfs xl-=([{''"myselfs'
  - 'xl"<myfs xl.<myfs xl{myfs xl''myfs xl0myfs xl-"7"<.<{''0myfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'myselfs) myselfs] myselfs} myselfs'' myselfs" myselfs- myselfs, myselfs. myselfs; myselfs: myselfs? myselfs!'
  - 'myfs"> myfs.> myfs_> myfs,0 myfs0 myfs- myfs1 myfs4 myfs; myfs03 myfs8 myfs!'

- - 'myselfs@ myselfs# myselfs$ myselfs% myselfs^ myselfs& myselfs* myselfs( myselfs_ myselfs= myselfs+ myselfs[ myselfs{ myselfs\\ myselfs| myselfs< myselfs> myselfs` myselfs~ myselfs/'
  - 'myfs`a myfs_? myfs`s myfs.0 myfs`5 myfs`& myfs"9 myfs"< myfs.- myfs"7 myfs"6 myfs.< myfs_< myfs_* myfs_| myfs`< myfs`> myfs."9 myfs`9 myfs/'
  - xfail: contraction followed by special characters is ignored

- - 'myfs) myfs] myfs} myfs'' myfs" myfs- myfs, myfs. myfs; myfs: myfs? myfs! myfs@ myfs# myfs$ myfs% myfs^ myfs& myfs* myfs( myfs_ myfs= myfs+ myfs[ myfs{ myfs\\ myfs| myfs< myfs> myfs` myfs~ myfs/'
  - ';myfs"> ;myfs.> ;myfs_> ;myfs,0 ;myfs0 ;myfs- ;myfs1 ;myfs4 ;myfs; ;myfs03 ;myfs8 ;myfs6 ;myfs`a ;myfs_? ;myfs`s ;myfs.0 ;myfs`5 ;myfs`& ;myfs"9 ;myfs"< ;myfs.- ;myfs"7 ;myfs"6 ;myfs.< ;myfs_< ;myfs_* ;myfs_| ;myfs`< ;myfs`> ;myfs."9 ;myfs`9 ;myfs/'
  - xfail: non-contraction following special characters myyselfs a missing grade 1 indicator

- - 'myselfs-xl myselfs-([{''"xl myselfs-/xl myselfs-$xl'
  - 'myfs-xl myfs-"<.<{''0xl myfs-_/xl myfs-`sxl'

- - 'myselfs(xl myselfs[xl myselfs{xl myselfs''xl myselfs"xl myselfs=([{''"-xl myselfs([{''"-xl myselfs/-xl myselfs$-xl'
  - 'myfs"<xl myfs.<xl myfs{xl myfs''xl myfs0xl myfs"7"<.<{''0-xl myfs"<.<{''0-xl myfs/-xl myfs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(necessary [necessary {necessary ''necessary "necessary -necessary'
  - '"<nec .<nec _<nec ,8nec 8nec -nec'

- - '!necessary @necessary #necessary $necessary %necessary ^necessary &necessary *necessary )necessary _necessary =necessary +necessary ]necessary }necessary \\necessary |necessary .necessary ,necessary ;necessary :necessary ?necessary <necessary >necessary'
  - '6nec `anec _?nec `snec .0nec `5nec `&nec "9nec ">nec .-nec "7nec "6nec .>nec _>nec _*nec _|nec 4nec 1nec ;nec0 3nec ;8nec `<nec `>nec'
  - xfail: contraction following special characters is ignored

- - '`necessary, ~necessary /necessary'
  - '.*nec `9nec _/nec'
  - xfail: contraction following special characters is ignored

- - '(nec [nec {nec ''nec "nec -nec'
  - '"<;nec .<;nec _<;nec ,8;nec 8;nec -nec'

- - '!nec @nec #nec $nec %nec ^nec &nec *nec )nec _nec =nec +nec ]nec }nec \\nec |nec .nec ,nec ;nec :nec ?nec <nec >nec `nec ~nec /nec'
  - '6;nec `a;nec _?;nec `s;nec .0;nec `5;nec `&;nec "9;nec ">;nec .-;nec "7;nec "6;nec .>;nec _>;nec _*;nec _|;nec 4;nec 1;nec ;2nec0 3;nec ;8;nec `<;nec `>;nec .*;nec `9;nec _/;nec'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-necessary xl-([{''"necessary l/-necessary l$-necessary'
  - 'xl-nec xl-"<.<{''0nec l/-nec l$-nec'

- - 'xl(necessary xl[necessary xl{necessary xl''necessary xl"necessary xl-=([{''"necessary'
  - 'xl"<nec xl.<nec xl{nec xl''nec xl0nec xl-"7"<.<{''0nec'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'necessary) necessary] necessary} necessary'' necessary" necessary- necessary, necessary. necessary; necessary: necessary? necessary!'
  - 'nec"> nec.> nec_> nec,0 nec0 nec- nec1 nec4 nec; nec03 nec8 nec!'

- - 'necessary@ necessary# necessary$ necessary% necessary^ necessary& necessary* necessary( necessary_ necessary= necessary+ necessary[ necessary{ necessary\\ necessary| necessary< necessary> necessary` necessary~ necessary/'
  - 'nec`a nec_? nec`s nec.0 nec`5 nec`& nec"9 nec"< nec.- nec"7 nec"6 nec.< nec_< nec_* nec_| nec`< nec`> nec."9 nec`9 nec/'
  - xfail: contraction followed by special characters is ignored

- - 'nec) nec] nec} nec'' nec" nec- nec, nec. nec; nec: nec? nec!'
  - ';nec"> ;nec.> ;nec_> ;nec,0 ;nec0 ;nec- ;nec1 ;nec4 ;nec; ;nec03 ;nec8 ;nec!'

- - 'nec@ nec# nec$ nec% nec^ nec& nec* nec( nec_ nec= nec+ nec[ nec{ nec\\ nec| nec< nec> nec` nec~ nec/'
  - ';nec`a ;nec_? ;nec`s ;nec.0 ;nec`5 ;nec`& ;nec"9 ;nec"< ;nec.- ;nec"7 ;nec"6 ;nec.< ;nec_< ;nec_* ;nec_| ;nec`< ;nec`> ;nec."9 ;nec`9 ;nec/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'necessary-xl necessary-([{''"xl necessary-/xl necessary-$xl'
  - 'nec-xl nec-"<.<{''0xl nec-_/xl nec-`sxl'

- - 'necessary(xl necessary[xl necessary{xl necessary''xl necessary"xl necessary=([{''"-xl necessary([{''"-xl necessary/-xl necessary$-xl'
  - 'nec"<xl nec.<xl nec{xl nec''xl nec0xl nec"7"<.<{''0-xl nec"<.<{''0-xl nec/-xl nec`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unnecessary [unnecessary {unnecessary ''unnecessary "unnecessary -unnecessary'
  - '"<unnec .<unnec _<unnec ,8unnec 8unnec -unnec'

- - '!unnecessary @unnecessary #unnecessary $unnecessary %unnecessary ^unnecessary &unnecessary *unnecessary )unnecessary _unnecessary =unnecessary +unnecessary ]unnecessary }unnecessary \\unnecessary |unnecessary .unnecessary ,unnecessary ;unnecessary :unnecessary'
  - '6unnec `aunnec _?unnec `sunnec .0unnec `5unnec `&unnec "9unnec ">unnec .-unnec "7unnec "6unnec .>unnec _>unnec _*unnec _|unnec 4unnec 1unnec ;unnec0 3unnec'
  - xfail: contraction followingly special characters is ignored

- - '?unnecessary <unnecessary >unnecessary `unnecessary, ~unnecessary /unnecessary'
  - ';8unnec `<unnec `>unnec .*unnec `9unnec _/unnec'
  - xfail: contraction followingly special characters is ignored

- - '(unnec [unnec {unnec ''unnec "unnec -unnec'
  - '"<;unnec .<;unnec _<;unnec ,8;unnec 8;unnec -;unnec'

- - '!unnec @unnec #unnec $unnec %unnec ^unnec &unnec *unnec )unnec _unnec =unnec +unnec ]unnec }unnec \\unnec |unnec .unnec ,unnec ;unnec :unnec ?unnec <unnec >unnec `unnec ~unnec /unnec'
  - '6;unnec `a;unnec _?;unnec `s;unnec .0;unnec `5;unnec `&;unnec "9;unnec ">;unnec .-;unnec "7;unnec "6;unnec .>;unnec _>;unnec _*;unnec _|;unnec 4;unnec 1;unnec ;2unnec0 3;unnec ;8;unnec `<;unnec `>;unnec .*;unnec `9;unnec _/;unnec'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unnecessary xl-([{''"unnecessary l/-unnecessary l$-unnecessary'
  - 'xl-unnec xl-"<.<{''0unnec l/-unnec l$-unnec'

- - 'xl(unnecessary xl[unnecessary xl{unnecessary xl''unnecessary xl"unnecessary xl-=([{''"unnecessary'
  - 'xl"<unnec xl.<unnec xl{unnec xl''unnec xl0unnec xl-"7"<.<{''0unnec'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unnecessary) unnecessary] unnecessary} unnecessary'' unnecessary" unnecessary- unnecessary, unnecessary. unnecessary; unnecessary: unnecessary? unnecessary!'
  - 'unnec"> unnec.> unnec_> unnec,0 unnec0 unnec- unnec1 unnec4 unnec; unnec03 unnec8 unnec!'

- - 'unnecessary@ unnecessary# unnecessary$ unnecessary% unnecessary^ unnecessary& unnecessary* unnecessary( unnecessary_ unnecessary= unnecessary+ unnecessary[ unnecessary{ unnecessary\\ unnecessary| unnecessary< unnecessary> unnecessary` unnecessary~ unnecessary/'
  - 'unnec`a unnec_? unnec`s unnec.0 unnec`5 unnec`& unnec"9 unnec"< unnec.- unnec"7 unnec"6 unnec.< unnec_< unnec_* unnec_| unnec`< unnec`> unnec."9 unnec`9 unnec/'
  - xfail: contraction followed by special characters is ignored

- - 'unnec) unnec] unnec} unnec'' unnec" unnec- unnec, unnec. unnec; unnec: unnec? unnec!'
  - ';unnec"> ;unnec.> ;unnec_> ;unnec,0 ;unnec0 ;unnec- ;unnec1 ;unnec4 ;unnec; ;unnec03 ;unnec8 ;unnec!'

- - 'unnec@ unnec# unnec$ unnec% unnec^ unnec& unnec* unnec( unnec_ unnec= unnec+ unnec[ unnec{ unnec\\ unnec| unnec< unnec> unnec` unnec~ unnec/'
  - ';unnec`a ;unnec_? ;unnec`s ;unnec.0 ;unnec`5 ;unnec`& ;unnec"9 ;unnec"< ;unnec.- ;unnec"7 ;unnec"6 ;unnec.< ;unnec_< ;unnec_* ;unnec_| ;unnec`< ;unnec`> ;unnec."9 ;unnec`9 ;unnec/'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unnecessary-xl unnecessary-([{''"xl unnecessary-/xl unnecessary-$xl'
  - 'unnec-xl unnec-"<.<{''0xl unnec-_/xl unnec-`sxl'

- - 'unnecessary(xl unnecessary[xl unnecessary{xl unnecessary''xl unnecessary"xl unnecessary=([{''"-xl unnecessary([{''"-xl unnecessary/-xl unnecessary$-xl'
  - 'unnec"<xl unnec.<xl unnec{xl unnec''xl unnec0xl unnec"7"<.<{''0-xl unnec"<.<{''0-xl unnec/-xl unnec`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unnecessarys [unnecessarys {unnecessarys ''unnecessarys "unnecessarys -unnecessarys'
  - '"<unnecs .<unnecs _<unnecs ,8unnecs 8unnecs -unnecs'

- - '!unnecessarys @unnecessarys #unnecessarys $unnecessarys %unnecessarys ^unnecessarys &unnecessarys *unnecessarys )unnecessarys _unnecessarys =unnecessarys +unnecessarys ]unnecessarys }unnecessarys \\unnecessarys |unnecessarys .unnecessarys ,unnecessarys'
  - '6unnecs `aunnecs _?unnecs `sunnecs .0unnecs `5unnecs `&unnecs "9unnecs ">unnecs .-unnecs "7unnecs "6unnecs .>unnecs _>unnecs _*unnecs _|unnecs 4unnecs 1unnecs'
  - xfail: contraction followingly special characters is ignored

- - ';unnecessarys :unnecessarys ?unnecessarys <unnecessarys >unnecessarys `unnecessarys, ~unnecessarys /unnecessarys'
  - 'bunnecs0 3unnecs ;8unnecs `<unnecs `>unnecs .*unnecs `9unnecs _/unnecs'
  - xfail: contraction followingly special characters is ignored

- - 'unnecs (unnecs [unnecs {unnecs ''unnecs "unnecs -unnecs !unnecs @unnecs #unnecs $unnecs %unnecs ^unnecs &unnecs *unnecs )unnecs _unnecs =unnecs +unnecs ]unnecs }unnecs \\unnecs |unnecs .unnecs ,unnecs ;unnecs :unnecs ?unnecs <unnecs >unnecs `unnecs ~unnecs /unnec'
  - ';unnecs "<;unnecs .<;unnecs _<;unnecs ,8;unnecs 8;unnecs -;unnecs 6;unnecs `a;unnecs _?;unnecs `s;unnecs .0;unnecs `5;unnecs `&;unnecs "9;unnecs ">;unnecs .-;unnecs "7;unnecs "6;unnecs .>;unnecs _>;unnecs _*;unnecs _|;unnecs 4;unnecs 1;unnecs ;2unnecs0 3;unnecs ;8;unnecs `<;unnecs `>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'xl-unnecessarys xl-([{''"unnecessarys l/-unnecessarys l$-unnecessarys'
  - 'xl-unnecs xl-"<.<{''0unnecs l/-unnecs l$-unnecs'

- - 'xl(unnecessarys xl[unnecessarys xl{unnecessarys xl''unnecessarys xl"unnecessarys xl-=([{''"unnecessarys'
  - 'xl"<unnecs xl.<unnecs xl{unnecs xl''unnecs xl0unnecs xl-"7"<.<{''0unnecs'
  - xfail: contraction followingly special characters and followed by any letter is ignored

- - 'unnecessarys) unnecessarys] unnecessarys} unnecessarys'' unnecessarys" unnecessarys- unnecessarys, unnecessarys. unnecessarys; unnecessarys: unnecessarys? unnecessarys!'
  - 'unnecs"> unnecs.> unnecs_> unnecs,0 unnecs0 unnecs- unnecs1 unnecs4 unnecs; unnecs03 unnecs8 unnecs!'

- - 'unnecessarys@ unnecessarys# unnecessarys$ unnecessarys% unnecessarys^ unnecessarys& unnecessarys* unnecessarys( unnecessarys_ unnecessarys= unnecessarys+ unnecessarys[ unnecessarys{ unnecessarys\\ unnecessarys| unnecessarys< unnecessarys> unnecessarys`'
  - 'unnecs`a unnecs_? unnecs`s unnecs.0 unnecs`5 unnecs`& unnecs"9 unnecs"< unnecs.- unnecs"7 unnecs"6 unnecs.< unnecs_< unnecs_* unnecs_| unnecs`< unnecs`> unnecs.*'
  - xfail: contraction followed by special characters is ignored

- - 'unnecessarys~ unnecessarys/'
  - 'unnecs`9 unnecs/'
  - xfail: contraction followed by special characters is ignored

- - 'unnecs) unnecs] unnecs} unnecs'' unnecs" unnecs- unnecs, unnecs. unnecs; unnecs: unnecs? unnecs! unnecs@ unnecs# unnecs$ unnecs% unnecs^ unnecs& unnecs* unnecs( unnecs_ unnecs= unnecs+ unnecs[ unnecs{ unnecs\\ unnecs| unnecs< unnecs> unnecs` unnecs~ unnecs/'
  - ';unnecs"> ;unnecs.> ;unnecs_> ;unnecs,0 ;unnecs0 ;unnecs- ;unnecs1 ;unnecs4 ;unnecs; ;unnecs03 ;unnecs8 ;unnecs6 ;unnecs`a ;unnecs_? ;unnecs`s ;unnecs.0 ;unnecs`5 ;unnecs`& ;unnecs"9 ;unnecs"< ;unnecs.- ;unnecs"7 ;unnecs"6 ;unnecs.< ;unnecs_< ;unnecs_* ;unnecs_| ;unnecs`< ;unnecs>'
  - xfail: non-contraction followingly special characters has a missingly grade 1 indicator

- - 'unnecessarys-xl unnecessarys-([{''"xl unnecessarys-/xl unnecessarys-$xl'
  - 'unnecs-xl unnecs-"<.<{''0xl unnecs-_/xl unnecs-`sxl'

- - 'unnecessarys(xl unnecessarys[xl unnecessarys{xl unnecessarys''xl unnecessarys"xl unnecessarys=([{''"-xl unnecessarys([{''"-xl unnecessarys/-xl unnecessarys$-xl'
  - 'unnecs"<xl unnecs.<xl unnecs{xl unnecs''xl unnecs0xl unnecs"7"<.<{''0-xl unnecs"<.<{''0-xl unnecs/-xl unnecs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(necessarys [necessarys {necessarys ''necessarys "necessarys -necessarys'
  - '"<necs .<necs _<necs ,8necs 8necs -necs'

- - '!necessarys @necessarys #necessarys $necessarys %necessarys ^necessarys &necessarys *necessarys )necessarys _necessarys =necessarys +necessarys ]necessarys }necessarys \\necessarys |necessarys .necessarys ,necessarys ;necessarys :necessarys ?necessarys'
  - '6necs `anecs _?necs `snecs .0necs `5necs `&necs "9necs ">necs .-necs "7necs "6necs .>necs _>necs _*necs _|necs 4necs 1necs ;necs0 3necs ;8necs'
  - xfail: contraction following special characters is ignored

- - '<necessarys >necessarys `necessarys, ~necessarys /necessarys'
  - '`<necs `>necs .*necs `9necs _/necs'
  - xfail: contraction following special characters is ignored

- - 'necs (necs [necs {necs ''necs "necs -necs !necs @necs #necs $necs %necs ^necs &necs *necs )necs _necs =necs +necs ]necs }necs \\necs |necs .necs ,necs ;necs :necs ?necs <necs >necs `necs ~necs /necs'
  - ';necs "<;necs .<;necs _<;necs ,8;necs 8;necs -;necs 6;necs `a;necs _?;necs `s;necs .0;necs `5;necs `&;necs "9;necs ">;necs .-;necs "7;necs "6;necs .>;necs _>;necs _*;necs _|;necs 4;necs 1;necs ;2necs0 3;necs ;8;necs `<;necs `>;necs .*;necs `9;necs _/;necs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-necessarys xl-([{''"necessarys l/-necessarys l$-necessarys'
  - 'xl-necs xl-"<.<{''0necs l/-necs l$-necs'

- - 'xl(necessarys xl[necessarys xl{necessarys xl''necessarys xl"necessarys xl-=([{''"necessarys'
  - 'xl"<necs xl.<necs xl{necs xl''necs xl0necs xl-"7"<.<{''0necs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'necessarys) necessarys] necessarys} necessarys'' necessarys" necessarys- necessarys, necessarys. necessarys; necessarys: necessarys? necessarys!'
  - 'necs"> necs.> necs_> necs,0 necs0 necs- necs1 necs4 necs; necs03 necs8 necs!'

- - 'necessarys@ necessarys# necessarys$ necessarys% necessarys^ necessarys& necessarys* necessarys( necessarys_ necessarys= necessarys+ necessarys[ necessarys{ necessarys\\ necessarys| necessarys< necessarys> necessarys` necessarys~ necessarys/'
  - 'necs`a necs_? necs`s necs.0 necs`5 necs`& necs"9 necs"< necs.- necs"7 necs"6 necs.< necs_< necs_* necs_| necs`< necs`> necs."9 necs`9 necs/'
  - xfail: contraction followed by special characters is ignored

- - 'necs) necs] necs} necs'' necs" necs- necs, necs. necs; necs: necs? necs! necs@ necs# necs$ necs% necs^ necs& necs* necs( necs_ necs= necs+ necs[ necs{ necs\\ necs| necs< necs> necs` necs~ necs/'
  - ';necs"> ;necs.> ;necs_> ;necs,0 ;necs0 ;necs- ;necs1 ;necs4 ;necs; ;necs03 ;necs8 ;necs6 ;necs`a ;necs_? ;necs`s ;necs.0 ;necs`5 ;necs`& ;necs"9 ;necs"< ;necs.- ;necs"7 ;necs"6 ;necs.< ;necs_< ;necs_* ;necs_| ;necs`< ;necs`> ;necs."9 ;necs`9 ;necs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'necessarys-xl necessarys-([{''"xl necessarys-/xl necessarys-$xl'
  - 'necs-xl necs-"<.<{''0xl necs-_/xl necs-`sxl'

- - 'necessarys(xl necessarys[xl necessarys{xl necessarys''xl necessarys"xl necessarys=([{''"-xl necessarys([{''"-xl necessarys/-xl necessarys$-xl'
  - 'necs"<xl necs.<xl necs{xl necs''xl necs0xl necs"7"<.<{''0-xl necs"<.<{''0-xl necs/-xl necs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(neither [neither {neither ''neither "neither -neither'
  - '"<nei .<nei _<nei ,8nei 8nei -nei'

- - '!neither @neither #neither $neither %neither ^neither &neither *neither )neither _neither =neither +neither ]neither }neither \\neither |neither .neither ,neither ;neither :neither ?neither <neither >neither `neither ~neither /neither'
  - '!nei `anei _?nei `snei .0nei `5nei `&nei "9nei ">nei .-nei "7nei "6nei .>nei }nei _*nei _|nei 4nei 1nei ;nei0 3nei ;8nei `<nei `>nei ;8nei .*nei `9nei _/nei'
  - xfail: contraction following special characters is ignored

- - '(nei [nei {nei ''nei "nei -nei'
  - '"<;nei .<;nei _<;nei ,8;nei 8;nei -;nei'

- - '!nei @nei #nei $nei %nei ^nei &nei *nei )nei _nei =nei +nei ]nei }nei \\nei |nei .nei ,nei ;nei :nei ?nei <nei >nei ?nei `nei ~nei /nei'
  - '!;nei `a;nei _?;nei `s;nei .0;nei `5;nei `&;nei "9;nei ">;nei .-;nei "7;nei "6;nei .>;nei _>;nei _*;nei _|;nei 4;nei 1;nei ;2nei0 3;nei ;8;nei `<;nei `>;nei .*;nei `9;nei _/;nei'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-neither xl-([{''"neither xl/-neither xl$-neither'
  - 'xl-nei xl-"<.<{''0nei xl_/-nei xl`s-nei'

- - 'xl(neither xl[neither xl{neither xl''neither xl"neither xl-=([{''"neither'
  - 'xl"<nei xl.<nei xl{nei xl''nei xl0nei xl-"7"<.<{''0nei'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'neither) neither] neither} neither'' neither" neither- neither, neither. neither; neither: neither? neither!'
  - 'nei"> nei.> nei_> nei,0 nei0 nei- nei1 nei4 nei; nei03 nei8 nei!'

- - 'neither@ neither# neither$ neither% neither^ neither& neither* neither( neither_ neither= neither+ neither[ neither{ neither\\ neither| neither< neither> neither` neither~ neither/'
  - 'nei`a nei_? nei`s nei.0 nei`5 nei`& nei"9 nei"< nei.- nei"7 nei"6 nei.< nei_< nei_* nei_| nei`< nei`> nei."9 nei`9 nei/'
  - xfail: contraction followed by special characters is ignored

- - 'nei) nei] nei} nei'' nei" nei- nei, nei. nei; nei: nei? nei!'
  - ';nei"> ;nei.> ;nei_> ;nei,0 ;nei0 ;nei- ;nei1 ;nei4 ;nei; ;nei03 ;nei8 ;nei!'

- - 'nei@ nei# nei$ nei% nei^ nei& nei* nei( nei_ nei= nei+ nei[ nei{ nei\\ nei| nei< nei> nei` nei~ nei/'
  - ';nei`a ;nei_? ;nei`s ;nei.0 ;nei`5 ;nei`& ;nei"9 ;nei"< ;nei.- ;nei"7 ;nei"6 ;nei.< ;nei_< ;nei_* ;nei_| ;nei`< ;nei`> ;nei."9 ;nei`9 ;nei/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'neither-xl neither-([{''"xl neither-/xl neither-$xl'
  - 'nei-xl nei-"<.<{''0xl nei-_/xl nei-`sxl'

- - 'neither(xl neither[xl neither{xl neither''xl neither"xl neither=([{''"-xl neither([{''"-xl neither/-xl neither$-xl'
  - 'nei"<xl nei.<xl nei{xl nei''xl nei0xl nei"7"<.<{''0-xl nei"<.<{''0-xl nei/-xl nei`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(neithers [neithers {neithers ''neithers "neithers -neithers'
  - '"<neis .<neis _<neis ,8neis 8neis -neis'

- - '!neithers @neithers #neithers $neithers %neithers ^neithers &neithers *neithers )neithers _neithers =neithers +neithers ]neithers }neithers \\neithers |neithers .neithers ,neithers ;neithers :neithers ?neithers <neithers >neithers `neithers ~neithers /neithers'
  - '!neis `aneis _?neis `sneis .0neis `5neis `&neis "9neis ">neis .-neis "7neis "6neis .>neis _>neis _*neis _|neis 4neis 1neis ;neis0 3neis ;8neis `<neis `>neis ;8neis .*neis `9neis _/neis'
  - xfail: contraction following special characters is ignored

- - 'neis  (neis [neis {neis ''neis "neis -neis !neis @neis #neis $neis %neis ^neis &neis *neis )neis _neis =neis +neis ]neis }neis \\neis |neis .neis ,neis ;neis :neis ?neis <neis >neis ?neis `neis ~neis /neis'
  - ';neis  "<;neis .<;neis _<;neis ,8;neis 8;neis -;neis !;neis `a;neis _?;neis `s;neis .0;neis `5;neis `&;neis "9;neis ">;neis .-;neis "7;neis "6;neis .>;neis _>;neis _*;neis _|;neis 4;neis 1;neis ;2neis0 3;neis ;8;neis `<;neis `>;neis .*;neis `9;neis _/;neis'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-neithers xl-([{''"neithers xl/-neithers xl$-neithers'
  - 'xl-neis xl-"<.<{''0neis xl_/-neis xl`s-neis'

- - 'xl(neithers xl[neithers xl{neithers xl''neithers xl"neithers xl-=([{''"neithers'
  - 'xl"<neis xl.<neis xl{neis xl''neis xl0neis xl-"7"<.<{''0neis'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'neithers) neithers] neithers} neithers'' neithers" neithers- neithers, neithers. neithers; neithers: neithers? neithers!'
  - 'neis"> neis.> neis_> neis,0 neis0 neis- neis1 neis4 neis; neis03 neis8 neis!'

- - 'neithers@ neithers# neithers$ neithers% neithers^ neithers& neithers* neithers( neithers_ neithers= neithers+ neithers[ neithers{ neithers\\ neithers| neithers< neithers> neithers` neithers~ neithers/'
  - 'neis`a neis_? neis`s neis.0 neis`5 neis`& neis"9 neis"< neis.- neis"7 neis"6 neis.< neis_< neis_* neis_| neis`< neis`> neis."9 neis`9 neis/'
  - xfail: contraction followed by special characters is ignored

- - 'neis) neis] neis} neis'' neis" neis- neis, neis. neis; neis: neis? neis! neis@ neis# neis$ neis% neis^ neis& neis* neis( neis_ neis= neis+ neis[ neis{ neis\\ neis| neis< neis> neis` neis~ neis/'
  - ';neis"> ;neis.> ;neis_> ;neis,0 ;neis0 ;neis- ;neis1 ;neis4 ;neis; ;neis03 ;neis8 ;neis! ;neis`a ;neis_? ;neis`s ;neis.0 ;neis`5 ;neis`& ;neis"9 ;neis"< ;neis.- ;neis"7 ;neis"6 ;neis.< ;neis_< ;neis_* ;neis_| ;neis`< ;neis`> ;neis."9 ;neis`9 ;neis/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'neithers-xl neithers-([{''"xl neithers-/xl neithers-$xl'
  - 'neis-xl neis-"<.<{''0xl neis-_/xl neis-`sxl'

- - 'neithers(xl neithers[xl neithers{xl neithers''xl neithers"xl neithers=([{''"-xl neithers([{''"-xl neithers/-xl neithers$-xl'
  - 'neis"<xl neis.<xl neis{xl neis''xl neis0xl neis"7"<.<{''0-xl neis"<.<{''0-xl neis/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(newsletter [newsletter {newsletter ''newsletter "newsletter -newsletter'
  - '"<newslr .<newslr _<newslr ,8newslr 8newslr -newslr'

- - '!newsletter @newsletter #newsletter $newsletter %newsletter ^newsletter &newsletter *newsletter )newsletter _newsletter =newsletter +newsletter ]newsletter }newsletter \\newsletter |newsletter .newsletter ,newsletter ;newsletter :newsletter ?newsletter'
  - '!newslr `anewslr _?newslr `snewslr .0newslr `5newslr `&newslr "9newslr ">newslr .-newslr "7newslr "6newslr .>newslr }newslr _*newslr _|newslr 4newslr 1newslr ;newslr0 3newslr ;8newslr'
  - xfail: contraction following special characters is ignored

- - '<newsletter >newsletter `newsletter ~newsletter /newsletter'
  - '`<newslr `>newslr .*newslr `9newslr _/newslr'
  - xfail: contraction following special characters is ignored

- - '(newslr [newslr {newslr ''newslr "newslr -newslr'
  - '"<;newslr .<;newslr _<;newslr ,8;newslr 8;newslr -;newslr'

- - '!newslr @newslr #newslr $newslr %newslr ^newslr &newslr *newslr )newslr _newslr =newslr +newslr ]newslr }newslr \\newslr |newslr .newslr ,newslr ;newslr :newslr ?newslr <newslr >newslr ?newslr `newslr ~newslr /newslr'
  - '!;newslr `a;newslr _?;newslr `s;newslr .0;newslr `5;newslr `&;newslr "9;newslr ">;newslr .-;newslr "7;newslr "6;newslr .>;newslr _>;newslr _*;newslr _|;newslr 4;newslr 1;newslr ;2newslr0 3;newslr ;8;newslr `<;newslr `>;newslr .*;newslr `9;newslr _/;newslr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-newsletter xl-([{''"newsletter l/-newsletter l$-newsletter'
  - 'xl-newslr xl-"<.<{''0newslr l/-newslr l$-newslr'

- - 'xl(newsletter xl[newsletter xl{newsletter xl''newsletter xl"newsletter xl-=([{''"newsletter'
  - 'xl"<newslr xl.<newslr xl{newslr xl''newslr xl0newslr xl-"7"<.<{''0newslr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'newsletter) newsletter] newsletter} newsletter'' newsletter" newsletter- newsletter, newsletter. newsletter; newsletter: newsletter? newsletter!'
  - 'newslr"> newslr.> newslr_> newslr,0 newslr0 newslr- newslr1 newslr4 newslr; newslr03 newslr8 newslr!'

- - 'newsletter@ newsletter# newsletter$ newsletter% newsletter^ newsletter& newsletter* newsletter( newsletter_ newsletter= newsletter+ newsletter[ newsletter{ newsletter\\ newsletter| newsletter< newsletter> newsletter` newslrogeth'
  - 'newslr`a newslr_? newslr`s newslr.0 newslr`5 newslr`& newslr"9 newslr"< newslr.- newslr"7 newslr"6 newslr.< newslr_< newslr_* newslr_| newslr`< newslr`> newslr."9 newslr`9 newslr/'
  - xfail: contraction followed by special characters is ignored

- - 'newslr) newslr] newslr} newslr'' newslr" newslr- newslr, newslr. newslr; newslr: newslr? newslr!'
  - ';newslr"> ;newslr.> ;newslr_> ;newslr,0 ;newslr0 ;newslr- ;newslr1 ;newslr4 ;newslr; ;newslr03 ;newslr8 ;newslr!'

- - 'newslr@ newslr# newslr$ newslr% newslr^ newslr& newslr* newslr( newslr_ newslr= newslr+ newslr[ newslr{ newslr\\ newslr| newslr< newslr> newslr` newslr~ newslr/'
  - ';newslr`a ;newslr_? ;newslr`s ;newslr.0 ;newslr`5 ;newslr`& ;newslr"9 ;newslr"< ;newslr.- ;newslr"7 ;newslr"6 ;newslr.< ;newslr_< ;newslr_* ;newslr_| ;newslr`< ;newslr`> ;newslr."9 ;newslr`9 ;newslr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'newsletter-xl newsletter-([{''"xl newsletter-/xl newsletter-$xl'
  - 'newslr-xl newslr-"<.<{''0xl newslr-_/xl newslr-`sxl'

- - 'newsletter(xl newsletter[xl newsletter{xl newsletter''xl newsletter"xl newsletter=([{''"-xl newsletter([{''"-xl newsletter/-xl newsletter$-xl'
  - 'newslr"<xl newslr.<xl newslr{xl newslr''xl newslr0xl newslr"7"<.<{''0-xl newslr"<.<{''0-xl newslr/-xl newslr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(newsletters [newsletters {newsletters ''newsletters "newsletters -newsletters'
  - '"<newslrs .<newslrs _<newslrs ,8newslrs 8newslrs -newslrs'

- - '!newsletters @newsletters #newsletters $newsletters %newsletters ^newsletters &newsletters *newsletters )newsletters _newsletters =newsletters +newsletters ]newsletters }newsletters \\newsletters |newsletters .newsletters ,newsletters ;newsletters :newsletters'
  - '!newslrs `anewslrs _?newslrs `snewslrs .0newslrs `5newslrs `&newslrs "9newslrs ">newslrs .-newslrs "7newslrs "6newslrs .>newslrs _>newslrs _*newslrs _|newslrs 4newslrs 1newslrs ;newslrs0 3newslrs'
  - xfail: contraction following special characters is ignored

- - '?newsletters <newsletters >newsletters `newsletters ~newsletters /newsletters'
  - ';8newslrs `<newslrs `>newslrs .*newslrs `9newslrs _/newslrs'
  - xfail: contraction following special characters is ignored

- - 'newslrs (newslrs [newslrs {newslrs ''newslrs "newslrs -newslrs !newslrs @newslrs #newslrs $newslrs %newslrs ^newslrs &newslrs *newslrs )newslrs _newslrs =newslrs +newslrs ]newslrs }newslrs \\newslrs |newslrs .newslrs ,newslrs ;newslrs :newslrs ?newslrs <newslrs >'
  - ';newslrs "<;newslrs .<;newslrs _<;newslrs ,8;newslrs 8;newslrs -;newslrs !;newslrs `a;newslrs _?;newslrs `s;newslrs .0;newslrs `5;newslrs `&;newslrs "9;newslrs ">;newslrs .-;newslrs "7;newslrs "6;newslrs .>;newslrs _>;newslrs _*;newslrs _|;newslrs 4;newslrs 1;newslrs ;2newslrs0 3;'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-newsletters xl-([{''"newsletters l/-newsletters l$-newsletters'
  - 'xl-newslrs xl-"<.<{''0newslrs l/-newslrs l$-newslrs'

- - 'xl(newsletters xl[newsletters xl{newsletters xl''newsletters xl"newsletters xl-=([{''"newsletters'
  - 'xl"<newslrs xl.<newslrs xl{newslrs xl''newslrs xl0newslrs xl-"7"<.<{''0newslrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'newsletters) newsletters] newsletters} newsletters'' newsletters" newsletters- newsletters, newsletters. newsletters; newsletters: newsletters? newsletters!'
  - 'newslrs"> newslrs.> newslrs_> newslrs,0 newslrs0 newslrs- newslrs1 newslrs4 newslrs; newslrs03 newslrs8 newslrs!'

- - 'newsletters@ newsletters# newsletters$ newsletters% newsletters^ newsletters& newsletters* newsletters( newsletters_ newsletters= newsletters+ newsletters[ newsletters{ newsletters\\ newsletters| newsletters< newsletters> newsletters` newslrogeth'
  - 'newslrs`a newslrs_? newslrs`s newslrs.0 newslrs`5 newslrs`& newslrs"9 newslrs"< newslrs.- newslrs"7 newslrs"6 newslrs.< newslrs_< newslrs_* newslrs_| newslrs`< newslrs`> newslrs."9 newslrs`9 newslrs/'
  - xfail: contraction followed by special characters is ignored

- - 'newslrs) newslrs] newslrs} newslrs'' newslrs" newslrs- newslrs, newslrs. newslrs; newslrs: newslrs? newslrs! newslrs@ newslrs# newslrs$ newslrs% newslrs^ newslrs& newslrs* newslrs( newslrs_ newslrs= newslrs+ newslrs[ newslrs{ newslrs\\ newslrs| newslrs< newslrs>'
  - ';newslrs"> ;newslrs.> ;newslrs_> ;newslrs,0 ;newslrs0 ;newslrs- ;newslrs1 ;newslrs4 ;newslrs; ;newslrs03 ;newslrs8 ;newslrs! ;newslrs`a ;newslrs_? ;newslrs`s ;newslrs.0 ;newslrs`5 ;newslrs`& ;newslrs"9 ;newslrs"< ;newslrs.- ;newslrs"7 ;newslrs"6 ;newslrs.< ;newslrs_< ;newslrs_* ;'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'newsletters-xl newsletters-([{''"xl newsletters-/xl newsletters-$xl'
  - 'newslrs-xl newslrs-"<.<{''0xl newslrs-_/xl newslrs-`sxl'

- - 'newsletters(xl newsletters[xl newsletters{xl newsletters''xl newsletters"xl newsletters=([{''"-xl newsletters([{''"-xl newsletters/-xl newsletters$-xl'
  - 'newslrs"<xl newslrs.<xl newslrs{xl newslrs''xl newslrs0xl newslrs"7"<.<{''0-xl newslrs"<.<{''0-xl newslrs/-xl newslrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(not [not {not ''not "not -not'
  - '"<n .<n _<n ,8n 8n -n'

- - '!not @not #not $not %not ^not &not *not )not _not =not +not ]not }not \\not |not .not ,not ;not :not ?not <not >not `not ~not /not'
  - '!n `an _?n `sn .0n `5n `&n "9n ">n .-n "7n "6n .>n _>n _*n _|n 4n 1n ;n0 3n ;8n `<n `>n .*n `9n _/n'
  - xfail: contraction following special characters is ignored

- - '(n [n {n ''n "n -n'
  - '"<;n .<;n _<;n ,8;n 8;n -;n'

- - '!n @n #n $n %n ^n &n *n )n _n =n +n ]n }n \\n |n .n ,n ;n :n ?n <n >n `n ~n /n'
  - '!;n `a;n _?;n `s;n .0;n `5;n `&;n "9;n ">;n .-;n "7;n "6;n .>;n _>;n _*;n _|;n 4;n 1;n ;2n0 3;n ;8;n `<;n `>;n .*;n `9;n _/;n'
  - xfail: non-contraction following special characters has a nissing grade 1 indicator

- - 'xl-not xl-([{''"not xl/-not xl$-not'
  - 'xl-n xl-"<.<{''0n xl_/-n xl`s-n'

- - 'xl(not xl[not xl{not xl''not xl"not xl-=([{''"not'
  - 'xl"<n xl.<n xl{n xl''n xl0n xl-"7"<.<{''0n'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'not) not] not} not'' not" not- not, not. not; not: not? not!'
  - 'n"> n.> n_> n,0 n0 n- n1 n4 n; n03 n8 n!'

- - 'not@ not# not$ not% not^ not& not* not( not_ not= not+ not[ not{ not\\ not| not< not> not` not~ not/'
  - 'n`a n_? n`s n.0 n`5 n`& n"9 n"< n.- n"7 n"6 n.< n_< n_* n_| n`< n`> n."9 n`9 n/'
  - xfail: contraction followed by special characters is ignored

- - 'n) n] n} n'' n" n- n, n. n; n: n? n!'
  - ';n"> ;n.> ;n_> ;n,0 ;n0 ;n- ;n1 ;n4 ;n; ;n03 ;n8 ;n!'

- - 'n@ n# n$ n% n^ n& n* n( n_ n= n+ n[ n{ n\\ n| n< n> n` n~ n/'
  - ';n`a ;n_? ;n`s ;n.0 ;n`5 ;n`& ;n"9 ;n"< ;n.- ;n"7 ;n"6 ;n.< ;n_< ;n_* ;n_| ;n`< ;n`> ;n."9 ;n`9 ;n/'
  - xfail: non-contraction following special characters has a nissing grade 1 indicator

- - 'not-xl not-([{''"xl not-/xl not-$xl'
  - 'n-xl n-"<.<{''0xl n-_/xl n-`sxl'

- - 'not(xl not[xl not{xl not''xl not"xl not=([{''"-xl not([{''"-xl not/-xl not$-xl'
  - 'n"<xl n.<xl n{xl n''xl n0xl n"7"<.<{''0-xl n"<.<{''0-xl n/-xl n`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(oneself [oneself {oneself ''oneself "oneself -oneself'
  - '"<"of .<"of _<"of ,8"of 8"of -"of'

- - '!oneself @oneself #oneself $oneself %oneself ^oneself &oneself *oneself )oneself _oneself =oneself +oneself ]oneself }oneself \\oneself |oneself .oneself ,oneself ;oneself :oneself ?oneself <themselv'
  - '!"of `a"of _?"of `s"of .0"of `5"of `&"of "9"of ">"of .-"of "7"of "6"of .>"of _>"of _*"of _|"of 4"of 1"of ;"of" 3"of ;8"of `<"of `>"of .*"of `9"of _/"of'
  - xfail: contraction following special characters is ignored

- - '(onef [onef {onef ''onef "onef -onef'
  - '"<onef .<onef _<onef ,8onef 8onef -onef'

- - '!onef @onef #onef $onef %onef ^onef &onef *onef )onef _onef =onef +onef ]onef }onef \\onef |onef .onef ,onef ;onef :onef ?onef <onef >onef `onef ~onef /onef'
  - '!onef `aonef _?onef `sonef .0onef `5onef `&onef "9onef ">onef .-onef "7onef "6onef .>onef _>onef _*onef _|onef 4onef 1onef ;onef0 3onef ;8onef `<onef `>onef .*onef `9onef _/onef'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-oneself xl-([{''"oneself xl/-oneself xl$-oneself'
  - 'xl-"of xl-"<.<{''8"of xl_/-"of xl`s-"of'

- - 'xl(oneself xl[oneself xl{oneself xl''oneself xl"oneself xl-=([{''"oneself'
  - 'xl"<"of xl.<"of xl{"of xl''"of xl8"of xl-"7"<.<{''8"of'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'oneself) oneself] oneself} oneself'' oneself" oneself- oneself, oneself. oneself; oneself: oneself? oneself!'
  - '"of"> "of.> "of_> "of,0 "of0 "of- "of1 "of4 "of; "of"3 "of8 "of!'

- - 'oneself@ oneself# oneself$ oneself% oneself^ oneself& oneself* oneself( oneself_ oneself= oneself+ oneself[ oneself{ oneself\\ oneself| oneself< oneself> oneself` oneself~ oneself/'
  - '"of`a "of_? "of`s "of.0 "of`5 "of`& "of"9 "of"< "of.- "of"7 "of"6 "of.< "of_< "of_* "of_| "of`< "of`> "of."9 "of`9 "of/'
  - xfail: contraction followed by special characters is ignored

- - 'onef) onef] onef} onef'' onef" onef- onef, onef. onef; onef: onef? onef!'
  - 'onef"> onef.> onef_> onef,0 onef0 onef- onef1 onef4 onef; onef03 onef8 onef!'

- - 'onef@ onef# onef$ onef% onef^ onef& onef* onef( onef_ onef= onef+ onef[ onef{ onef\\ onef| onef< onef> onef` onef~ onef/'
  - 'onef`a onef_? onef`s onef.0 onef`5 onef`& onef"9 onef"< onef.- onef"7 onef"6 onef.< onef_< onef_* onef_| onef`< onef`> onef."9 onef`9 onef/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'oneself-xl oneself-([{''"xl oneself-/xl oneself-$xl'
  - '"of-xl "of-"<.<{''"xl "of-_/xl "of-`sxl'

- - 'oneself(xl oneself[xl oneself{xl oneself''xl oneself"xl oneself=([{''"-xl oneself([{''"-xl oneself/-xl oneself$-xl'
  - '"of"<xl "of.<xl "of{xl "of''xl "of"xl "of"7"<.<{''"-xl "of"<.<{''"-xl "of/-xl "of`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(oneselfs [oneselfs {oneselfs ''oneselfs "oneselfs -oneselfs'
  - '"<"ofs .<"ofs _<"ofs ,8"ofs 8"ofs -"ofs'

- - '!oneselfs @oneselfs #oneselfs $oneselfs %oneselfs ^oneselfs &oneselfs *oneselfs )oneselfs _oneselfs =oneselfs +oneselfs ]oneselfs }oneselfs \\oneselfs |oneselfs .oneselfs ,oneselfs ;oneselfs :oneselfs ?'
  - '!"ofs `a"ofs _?"ofs `s"ofs .0"ofs `5"ofs `&"ofs "9"ofs ">"ofs .-"ofs "7"ofs "6"ofs .>"ofs _>"ofs _*"ofs _|"ofs 4"ofs 1"ofs ;"ofs" 3"ofs ;8"ofs `<"ofs `>"ofs .*"ofs `9"ofs _/"ofs'
  - xfail: contraction following special characters is ignored

- - 'onefs (onefs [onefs {onefs ''onefs "onefs -onefs !onefs @onefs #onefs $onefs %onefs ^onefs &onefs *onefs )onefs _onefs =onefs +onefs ]onefs }onefs \\onefs |onefs .onefs ,onefs ;onefs :onefs ?onefs <onefs >'
  - 'onefs "<onefs .<onefs _<onefs ,8onefs 8onefs -onefs !onefs `aonefs _?onefs `sonefs .0onefs `5onefs `&onefs "9onefs ">onefs .-onefs "7onefs "6onefs .>onefs _>onefs _*onefs _|onefs 4onefs 1onefs ;onefs0 3onefs ;8onefs `<onefs `>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-oneselfs xl-([{''"oneselfs xl/-oneselfs xl$-oneselfs'
  - 'xl-"ofs xl-"<.<{''8"ofs xl_/-"ofs xl`s-"ofs'

- - 'xl(oneselfs xl[oneselfs xl{oneselfs xl''oneselfs xl"oneselfs xl-=([{''"oneselfs'
  - 'xl"<"ofs xl.<"ofs xl{"ofs xl''"ofs xl8"ofs xl-"7"<.<{''8"ofs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'oneselfs) oneselfs] oneselfs} oneselfs'' oneselfs" oneselfs- oneselfs, oneselfs. oneselfs; oneselfs: oneselfs? oneselfs!'
  - '"ofs"> "ofs.> "ofs_> "ofs,0 "ofs0 "ofs- "ofs1 "ofs4 "ofs; "ofs"3 "ofs8 "ofs!'

- - 'oneselfs@ oneselfs# oneselfs$ oneselfs% oneselfs^ oneselfs& oneselfs* oneselfs( oneselfs_ oneselfs= oneselfs+ oneselfs[ oneselfs{ oneselfs\\ oneselfs| oneselfs< oneselfs> oneselfs` oneselfs~ oneselfs/'
  - '"ofs`a "ofs_? "ofs`s "ofs.0 "ofs`5 "ofs`& "ofs"9 "ofs"< "ofs.- "ofs"7 "ofs"6 "ofs.< "ofs_< "ofs_* "ofs_| "ofs`< "ofs`> "ofs."9 "ofs`9 "ofs/'
  - xfail: contraction followed by special characters is ignored

- - 'onefs) onefs] onefs} onefs'' onefs" onefs- onefs, onefs. onefs; onefs: onefs? onefs! onefs@ onefs# onefs$ onefs% onefs^ onefs& onefs* onefs( onefs_ onefs= onefs+ onefs[ onefs{ onefs\\ onefs| onefs< onefs>'
  - 'onefs"> onefs.> onefs_> onefs,0 onefs0 onefs- onefs1 onefs4 onefs; onefs03 onefs8 onefs! onefs`a onefs_? onefs`s onefs.0 onefs`5 onefs`& onefs"9 onefs"< onefs.- onefs"7 onefs"6 onefs.< onefs_< onefs_* onefs_| onefs`< onefs>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'oneselfs-xl oneselfs-([{''"xl oneselfs-/xl oneselfs-$xl'
  - '"ofs-xl "ofs-"<.<{''"xl "ofs-_/xl "ofs-`sxl'

- - 'oneselfs(xl oneselfs[xl oneselfs{xl oneselfs''xl oneselfs"xl oneselfs=([{''"-xl oneselfs([{''"-xl oneselfs/-xl oneselfs$-xl'
  - '"ofs"<xl "ofs.<xl "ofs{xl "ofs''xl "ofs"xl "ofs"7"<.<{''"-xl "ofs"<.<{''"-xl "ofs/-xl "ofs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(ourselves [ourselves {ourselves ''ourselves "ourselves -ourselves'
  - '"<|rvs .<|rvs _<|rvs ,8|rvs 8|rvs -|rvs'

- - '!ourselves @ourselves #ourselves $ourselves %ourselves ^ourselves &ourselves *ourselves )ourselves _ourselves =ourselves +ourselves ]ourselves }ourselves \\ourselves |ourselves .ourselves ,ourselves ;ourselves :ourselves ?ourselves <ourselv'
  - '!|rvs `a|rvs _?|rvs `s|rvs .0|rvs `5|rvs `&|rvs "9|rvs ">|rvs .-|rvs "7|rvs "6|rvs .>|rvs _>|rvs _*|rvs _||rvs 4|rvs 1|rvs ;|rvs0 3|rvs ;8|rvs `<|rvs `>|rvs .*|rvs `9|rvs _/|rvs'
  - xfail: contraction following special characters is ignored

- - '(ourvs [ourvs {ourvs ''ourvs "ourvs -ourvs'
  - '"<ourvs .<ourvs _<ourvs ,8ourvs 8ourvs -ourvs'

- - '!ourvs @ourvs #ourvs $ourvs %ourvs ^ourvs &ourvs *ourvs )ourvs _ourvs =ourvs +ourvs ]ourvs }ourvs \\ourvs |ourvs .ourvs ,ourvs ;ourvs :ourvs ?ourvs <ourvs >ourvs `ourvs ~ourvs /ourvs'
  - '!ourvs `aourvs _?ourvs `sourvs .0ourvs `5ourvs `&ourvs "9ourvs ">ourvs .-ourvs "7ourvs "6ourvs .>ourvs _>ourvs _*ourvs _|ourvs 4ourvs 1ourvs ;ourvs0 3ourvs ;8ourvs `<ourvs `>ourvs .*ourvs `9ourvs _/ourvs'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-ourselves xl-([{''"ourselves l/-ourselves l$-ourselves'
  - 'xl-|rvs xl-"<.<{''0|rvs l/-|rvs l$-|rvs'

- - 'xl(ourselves xl[ourselves xl{ourselves xl''ourselves xl"ourselves xl-=([{''"ourselves'
  - 'xl"<|rvs xl.<|rvs xl{|rvs xl''|rvs xl0|rvs xl-"7"<.<{''0|rvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ourselves) ourselves] ourselves} ourselves'' ourselves" ourselves- ourselves, ourselves. ourselves; ourselves: ourselves? ourselves!'
  - '|rvs"> |rvs.> |rvs_> |rvs,0 |rvs0 |rvs- |rvs1 |rvs4 |rvs; |rvs03 |rvs8 |rvs!'

- - 'ourselves@ ourselves# ourselves$ ourselves% ourselves^ ourselves& ourselves* ourselves( ourselves_ ourselves= ourselves+ ourselves[ ourselves{ ourselves\\ ourselves| ourselves< ourselves> ourselves` ourselves~ ourselves/'
  - '|rvs`a |rvs_? |rvs`s |rvs.0 |rvs`5 |rvs`& |rvs"9 |rvs"< |rvs.- |rvs"7 |rvs"6 |rvs.< |rvs_< |rvs_* |rvs| |rvs`< |rvs`> |rvs."9 |rvs`9 |rvs/'
  - xfail: contraction followed by special characters is ignored

- - 'ourvs) ourvs] ourvs} ourvs'' ourvs" ourvs- ourvs, ourvs. ourvs; ourvs: ourvs? ourvs!'
  - 'ourvs"> ourvs.> ourvs_> ourvs,0 ourvs0 ourvs- ourvs1 ourvs4 ourvs; ourvs03 ourvs8 ourvs!'

- - 'ourvs@ ourvs# ourvs$ ourvs% ourvs^ ourvs& ourvs* ourvs( ourvs_ ourvs= ourvs+ ourvs[ ourvs{ ourvs\\ ourvs| ourvs< ourvs> ourvs` ourvs~ ourvs/'
  - 'ourvs`a ourvs_? ourvs`s ourvs.0 ourvs`5 ourvs`& ourvs"9 ourvs"< ourvs.- ourvs"7 ourvs"6 ourvs.< ourvs_< ourvs_* ourvs| ourvs`< ourvs`> ourvs."9 ourvs`9 ourvs/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'ourselves-xl ourselves-([{''"xl ourselves-/xl ourselves-$xl'
  - '|rvs-xl |rvs-"<.<{''0xl |rvs-_/xl |rvs-`sxl'

- - 'ourselves(xl ourselves[xl ourselves{xl ourselves''xl ourselves"xl ourselves=([{''"-xl ourselves([{''"-xl ourselves/-xl ourselves$-xl'
  - '|rvs"<xl |rvs.<xl |rvs{xl |rvs''xl |rvs0xl |rvs"7"<.<{''0-xl |rvs"<.<{''0-xl |rvs/-xl |rvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(ourselvess [ourselvess {ourselvess ''ourselvess "ourselvess -ourselvess'
  - '"<|rvss .<|rvss _<|rvss ,8|rvss 8|rvss -|rvss'

- - '!ourselvess @ourselvess #ourselvess $ourselvess %ourselvess ^ourselvess &ourselvess *ourselvess )ourselvess _ourselvess =ourselvess +ourselvess ]ourselvess }ourselvess \\ourselvess |ourselvess .ourselvess ,ourselvess ;ourselvess :ourselvess ?'
  - '!|rvss `a|rvss _?|rvss `s|rvss .0|rvss `5|rvss `&|rvss "9|rvss ">|rvss .-|rvss "7|rvss "6|rvss .>|rvss _>|rvss _*|rvss _||rvss 4|rvss 1|rvss ;|rvss0 3|rvss ;8|rvss `<|rvss `>|rvss .*|rvss `9|rvss _/|rvss'
  - xfail: contraction following special characters is ignored

- - 'ourvss (ourvss [ourvss {ourvss ''ourvss "ourvss -ourvss !ourvss @ourvss #ourvss $ourvss %ourvss ^ourvss &ourvss *ourvss )ourvss _ourvss =ourvss +ourvss ]ourvss }ourvss \\ourvss |ourvss .ourvss ,ourvss ;ourvss :ourvss ?ourvss <ourvss >'
  - 'ourvss "<ourvss .<ourvss _<ourvss ,8ourvss 8ourvss -ourvss !ourvss `aourvss _?ourvss `sourvss .0ourvss `5ourvss `&ourvss "9ourvss ">ourvss .-ourvss "7ourvss "6ourvss .>ourvss _>ourvss _*ourvss |ourvss 4ourvss 1ourvss ;ourvss0 3ourvss ;8ourvss `<ourvss `>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-ourselvess xl-([{''"ourselvess l/-ourselvess l$-ourselvess'
  - 'xl-|rvss xl-"<.<{''0|rvss l/-|rvss l$-|rvss'

- - 'xl(ourselvess xl[ourselvess xl{ourselvess xl''ourselvess xl"ourselvess xl-=([{''"ourselvess'
  - 'xl"<|rvss xl.<|rvss xl{|rvss xl''|rvss xl0|rvss xl-"7"<.<{''0|rvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'ourselvess) ourselvess] ourselvess} ourselvess'' ourselvess" ourselvess- ourselvess, ourselvess. ourselvess; ourselvess: ourselvess? ourselvess!'
  - '|rvss"> |rvss.> |rvss_> |rvss,0 |rvss0 |rvss- |rvss1 |rvss4 |rvss; |rvss03 |rvss8 |rvss!'

- - 'ourselvess@ ourselvess# ourselvess$ ourselvess% ourselvess^ ourselvess& ourselvess* ourselvess( ourselvess_ ourselvess= ourselvess+ ourselvess[ ourselvess{ ourselvess\\ ourselvess| ourselvess< ourselvess> ourselvess` ourselvess~ ourselvess/'
  - '|rvss`a |rvss_? |rvss`s |rvss.0 |rvss`5 |rvss`& |rvss"9 |rvss"< |rvss.- |rvss"7 |rvss"6 |rvss.< |rvss_< |rvss_* |rvss| |rvss`< |rvss`> |rvss."9 |rvss`9 |rvss/'
  - xfail: contraction followed by special characters is ignored

- - 'ourvss) ourvss] ourvss} ourvss'' ourvss" ourvss- ourvss, ourvss. ourvss; ourvss: ourvss? ourvss! ourvss@ ourvss# ourvss$ ourvss% ourvss^ ourvss& ourvss* ourvss( ourvss_ ourvss= ourvss+ ourvss[ ourvss{ ourvss\\ ourvss| ourvss< ourvss>'
  - 'ourvss"> ourvss.> ourvss_> ourvss,0 ourvss0 ourvss- ourvss1 ourvss4 ourvss; ourvss03 ourvss8 ourvss! ourvss`a ourvss_? ourvss`s ourvss.0 ourvss`5 ourvss`& ourvss"9 ourvss"< ourvss.- ourvss"7 ourvss"6 ourvss.< ourvss_< ourvss_* ourvss| ourvss`< ourvss>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'ourselvess-xl ourselvess-([{''"xl ourselvess-/xl ourselvess-$xl'
  - '|rvss-xl |rvss-"<.<{''0xl |rvss-_/xl |rvss-`sxl'

- - 'ourselvess(xl ourselvess[xl ourselvess{xl ourselvess''xl ourselvess"xl ourselvess=([{''"-xl ourselvess([{''"-xl ourselvess/-xl ourselvess$-xl'
  - '|rvss"<xl |rvss.<xl |rvss{xl |rvss''xl |rvss0xl |rvss"7"<.<{''0-xl |rvss"<.<{''0-xl |rvss/-xl |rvss`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(out [out {out ''out "out -out'
  - '"<| .<| _<| ,8| 8| -|'

- - '!out @out #out $out %out ^out &out *out )out _out =out +out ]out }out \\out |out .out ,out ;out :out ?out <out >out `out ~out /out'
  - '!| `a| _?| `s| .0| `5| `&| "9| ">| .-| "7| "6| .>| _>| _*| _|| 4| 1| ou0 3| ;8| `<| `>| .*| `9| _/|'
  - xfail: contraction following special characters is ignored

- - 'ou (ou [ou {ou ''ou "ou -ou !ou @ou #ou $ou |ou ^ou &ou *ou )ou _ou =ou +ou ]ou }ou \\ou |ou .ou ,ou ;ou :ou ?ou <ou >ou `ou ~ou |ou'
  - 'ou "<ou .<ou _<ou ,8ou 8ou -ou !ou `aou _?ou `sou |ou `5ou `&ou "9ou ">ou .-ou "7ou "6ou .>ou _>ou _*ou |ou 4ou 1ou ;ou0 3ou ;8ou `<ou `>ou .*ou `9ou |ou'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-out xl-([{''"out l|-out l$-out'
  - 'xl-| xl-"<.<{''0| l|-| l$-|'

- - 'xl(out xl[out xl{out xl''out xl"out xl-=([{''"out'
  - 'xl"<| xl.<| xl{| xl''| xl0| xl-"7"<.<{''0|'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'out) out] out} out'' out" out- out, out. out; out: out? out!'
  - '|"> |.> |_> |,0 |0 |- |1 |4 |; |03 |8 |!'

- - 'out@ out# out$ out% out^ out& out* out( out_ out= out+ out[ out{ out\\ out| out< out> out` out~ out/'
  - '|`a |_? |`s |.0 |`5 |`& |"9 |"< |.- |"7 |"6 |.< |_< |_* |_| |`< |`> |."9 |`9 |/'
  - xfail: contraction followed by special characters is ignored

- - 'ou) ou] ou} ou'' ou" ou- ou, ou. ou; ou: ou? ou! ou@ ou# ou$ ou| ou^ ou& ou* ou( ou_ ou= ou+ ou[ ou{ ou\\ ou| ou< ou> ou` ou~ ou|'
  - 'ou"> ou.> ou_> ou,0 ou0 ou- ou1 ou4 ou; ou03 ou8 ou! ou`a ou_? ou`s ou| ou`5 ou`& ou"9 ou"< ou.- ou"7 ou"6 ou.< ou_< ou_* ou| ou`< ou`> ou."9 ou`9 ou|'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'out-xl out-([{''"xl out-|l out-$xl'
  - '|-xl |-"<.<{''0xl |-|l |-`sxl'

- - 'out(xl out[xl out{xl out''xl out"xl out=([{''"-xl out([{''"-xl out|-xl out$-xl'
  - '|"<xl |.<xl |{xl |''xl |0xl |"7"<.<{''0-xl |"<.<{''0-xl ||-xl |`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(paid [paid {paid ''paid "paid -paid'
  - '"<pd .<pd _<pd ,8pd 8pd -pd'

- - '!paid @paid #paid $paid %paid ^paid &paid *paid )paid _paid =paid +paid ]paid }paid \\paid |paid .paid ,paid ;paid :paid ?paid <paid >paid `paid ~paid /paid'
  - '!pd `apd _?pd `spd .0pd `5pd `&pd "9pd ">pd .-pd "7pd "6pd .>pd _>pd _*pd _|pd 4pd 1pd ;pd0 3pd ;8pd `<pd `>pd ;8pd .*pd `9pd _/pd'
  - xfail: contraction following special characters is ignored

- - '(pd [pd {pd ''pd "pd -pd'
  - '"<;pd .<;pd _<;pd ,8;pd 8;pd -;pd'

- - '!pd @pd #pd $pd %pd ^pd &pd *pd )pd _pd =pd +pd ]pd }pd \\pd |pd .pd ,pd ;pd :pd ?pd <pd >pd ?pd `pd ~pd /pd'
  - '!;pd `a;pd _?;pd `s;pd .0;pd `5;pd `&;pd "9;pd ">;pd .-;pd "7;pd "6;pd .>;pd _>;pd _*;pd _|;pd 4;pd 1;pd ;2pd0 3;pd ;8;pd `<;pd `>;pd .*;pd `9;pd _/;pd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-paid xl-([{''"paid l/-paid l$-paid'
  - 'xl-pd xl-"<.<{''0pd l/-pd l$-pd'

- - 'xl(paid xl[paid xl{paid xl''paid xl"paid xl-=([{''"paid'
  - 'xl"<pd xl.<pd xl{pd xl''pd xl0pd xl-"7"<.<{''0pd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'paid) paid] paid} paid'' paid" paid- paid, paid. paid; paid: paid? paid!'
  - 'pd"> pd.> pd_> pd,0 pd0 pd- pd1 pd4 pd; pd03 pd8 pd!'

- - 'paid@ paid# paid$ paid% paid^ paid& paid* paid( paid_ paid= paid+ paid[ paid{ paid\\ paid| paid< paid> paid` paid~ paid/'
  - 'pd`a pd_? pd`s pd.0 pd`5 pd`& pd"9 pd"< pd.- pd"7 pd"6 pd.< pd_< pd_* pd_| pd`< pd`> pd."9 pd`9 pd/'
  - xfail: contraction followed by special characters is ignored

- - 'pd) pd] pd} pd'' pd" pd- pd, pd. pd; pd: pd? pd!'
  - ';pd"> ;pd.> ;pd_> ;pd,0 ;pd0 ;pd- ;pd1 ;pd4 ;pd; ;pd03 ;pd8 ;pd!'

- - 'pd@ pd# pd$ pd% pd^ pd& pd* pd( pd_ pd= pd+ pd[ pd{ pd\\ pd| pd< pd> pd` pd~ pd/'
  - ';pd`a ;pd_? ;pd`s ;pd.0 ;pd`5 ;pd`& ;pd"9 ;pd"< ;pd.- ;pd"7 ;pd"6 ;pd.< ;pd_< ;pd_* ;pd_| ;pd`< ;pd`> ;pd."9 ;pd`9 ;pd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'paid-xl paid-([{''"xl paid-/xl paid-$xl'
  - 'pd-xl pd-"<.<{''0xl pd-_/xl pd-`sxl'

- - 'paid(xl paid[xl paid{xl paid''xl paid"xl paid=([{''"-xl paid([{''"-xl paid/-xl paid$-xl'
  - 'pd"<xl pd.<xl pd{xl pd''xl pd0xl pd"7"<.<{''0-xl pd"<.<{''0-xl pd/-xl pd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(paids [paids {paids ''paids "paids -paids'
  - '"<pds .<pds _<pds ,8pds 8pds -pds'

- - '!paids @paids #paids $paids %paids ^paids &paids *paids )paids _paids =paids +paids ]paids }paids \\paids |paids .paids ,paids ;paids :paids ?paids <paids >paids `paids ~paids /paids'
  - '!pds `apds _?pds `spds .0pds `5pds `&pds "9pds ">pds .-pds "7pds "6pds .>pds _>pds _*pds _|pds 4pds 1pds ;pds0 3pds ;8pds `<pds `>pds ;8pds .*pds `9pds _/pds'
  - xfail: contraction following special characters is ignored

- - 'pds  (pds [pds {pds ''pds "pds -pds !pds @pds #pds $pds %pds ^pds &pds *pds )pds _pds =pds +pds ]pds }pds \\pds |pds .pds ,pds ;pds :pds ?pds <pds >pds ?pds `pds ~pds /pds'
  - ';pds  "<;pds .<;pds _<;pds ,8;pds 8;pds -;pds !;pds `a;pds _?;pds `s;pds .0;pds `5;pds `&;pds "9;pds ">;pds .-;pds "7;pds "6;pds .>;pds _>;pds _*;pds _|;pds 4;pds 1;pds ;2pds0 3;pds ;8;pds `<;pds `>;pds .*;pds `9;pds _/;pds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-paids xl-([{''"paids l/-paids l$-paids'
  - 'xl-pds xl-"<.<{''0pds l/-pds l$-pds'

- - 'xl(paids xl[paids xl{paids xl''paids xl"paids xl-=([{''"paids'
  - 'xl"<pds xl.<pds xl{pds xl''pds xl0pds xl-"7"<.<{''0pds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'paids) paids] paids} paids'' paids" paids- paids, paids. paids; paids: paids? paids!'
  - 'pds"> pds.> pds_> pds,0 pds0 pds- pds1 pds4 pds; pds03 pds8 pds!'

- - 'paids@ paids# paids$ paids% paids^ paids& paids* paids( paids_ paids= paids+ paids[ paids{ paids\\ paids| paids< paids> paids` paids~ paids/'
  - 'pds`a pds_? pds`s pds.0 pds`5 pds`& pds"9 pds"< pds.- pds"7 pds"6 pds.< pds_< pds_* pds_| pds`< pds`> pds."9 pds`9 pds/'
  - xfail: contraction followed by special characters is ignored

- - 'pds) pds] pds} pds'' pds" pds- pds, pds. pds; pds: pds? pds! pds@ pds# pds$ pds% pds^ pds& pds* pds( pds_ pds= pds+ pds[ pds{ pds\\ pds| pds< pds> pds` pds~ pds/'
  - ';pds"> ;pds.> ;pds_> ;pds,0 ;pds0 ;pds- ;pds1 ;pds4 ;pds; ;pds03 ;pds8 ;pds! ;pds`a ;pds_? ;pds`s ;pds.0 ;pds`5 ;pds`& ;pds"9 ;pds"< ;pds.- ;pds"7 ;pds"6 ;pds.< ;pds_< ;pds_* ;pds_| ;pds`< ;pds`> ;pds."9 ;pds`9 ;pds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'paids-xl paids-([{''"xl paids-/xl paids-$xl'
  - 'pds-xl pds-"<.<{''0xl pds-_/xl pds-`sxl'

- - 'paids(xl paids[xl paids{xl paids''xl paids"xl paids=([{''"-xl paids([{''"-xl paids/-xl paids$-xl'
  - 'pds"<xl pds.<xl pds{xl pds''xl pds0xl pds"7"<.<{''0-xl pds"<.<{''0-xl pds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(prepaid [prepaid {prepaid ''prepaid "prepaid -prepaid'
  - '"<prepd .<prepd _<prepd ,8prepd 8prepd -prepd'

- - '!prepaid @prepaid #prepaid $prepaid %prepaid ^prepaid &prepaid *prepaid )prepaid _prepaid =prepaid +prepaid ]prepaid }prepaid \\prepaid |prepaid .prepaid ,prepaid ;prepaid :prepaid ?prepaid <prepaid >prepaid `prepaid ~prepaid /prepaid'
  - '!prepd `aprepd _?prepd `sprepd .0prepd `5prepd `&prepd "9prepd ">prepd .-prepd "7prepd "6prepd .>prepd _>prepd _*prepd _|prepd 4prepd 1prepd ;prepd0 3prepd ;8prepd `<prepd `>prepd ;8prepd .*prepd `9prepd _/prepd'
  - xfail: contraction following special characters is ignored

- - '(prepd [prepd {prepd ''prepd "prepd -prepd'
  - '"<;prepd .<;prepd _<;prepd ,8;prepd 8;prepd -;prepd'

- - '!prepd @prepd #prepd $prepd %prepd ^prepd &prepd *prepd )prepd _prepd =prepd +prepd ]prepd }prepd \\prepd |prepd .prepd ,prepd ;prepd :prepd ?prepd <prepd >prepd ?prepd `prepd ~prepd /prepd'
  - '!;prepd `a;prepd _?;prepd `s;prepd .0;prepd `5;prepd `&;prepd "9;prepd ">;prepd .-;prepd "7;prepd "6;prepd .>;prepd _>;prepd _*;prepd _|;prepd 4;prepd 1;prepd ;2prepd0 3;prepd ;8;prepd `<;prepd `>;prepd .*;prepd `9;prepd _/;prepd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-prepaid xl-([{''"prepaid l/-prepaid l$-prepaid'
  - 'xl-prepd xl-"<.<{''0prepd l/-prepd l$-prepd'

- - 'xl(prepaid xl[prepaid xl{prepaid xl''prepaid xl"prepaid xl-=([{''"prepaid'
  - 'xl"<prepd xl.<prepd xl{prepd xl''prepd xl0prepd xl-"7"<.<{''0prepd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'prepaid) prepaid] prepaid} prepaid'' prepaid" prepaid- prepaid, prepaid. prepaid; prepaid: prepaid? prepaid!'
  - 'prepd"> prepd.> prepd_> prepd,0 prepd0 prepd- prepd1 prepd4 prepd; prepd03 prepd8 prepd!'

- - 'prepaid@ prepaid# prepaid$ prepaid% prepaid^ prepaid& prepaid* prepaid( prepaid_ prepaid= prepaid+ prepaid[ prepaid{ prepaid\\ prepaid| prepaid< prepaid> prepaid` prepaid~ prepaid/'
  - 'prepd`a prepd_? prepd`s prepd.0 prepd`5 prepd`& prepd"9 prepd"< prepd.- prepd"7 prepd"6 prepd.< prepd_< prepd_* prepd_| prepd`< prepd`> prepd."9 prepd`9 prepd/'
  - xfail: contraction followed by special characters is ignored

- - 'prepd) prepd] prepd} prepd'' prepd" prepd- prepd, prepd. prepd; prepd: prepd? prepd!'
  - ';prepd"> ;prepd.> ;prepd_> ;prepd,0 ;prepd0 ;prepd- ;prepd1 ;prepd4 ;prepd; ;prepd03 ;prepd8 ;prepd!'

- - 'prepd@ prepd# prepd$ prepd% prepd^ prepd& prepd* prepd( prepd_ prepd= prepd+ prepd[ prepd{ prepd\\ prepd| prepd< prepd> prepd` prepd~ prepd/'
  - ';prepd`a ;prepd_? ;prepd`s ;prepd.0 ;prepd`5 ;prepd`& ;prepd"9 ;prepd"< ;prepd.- ;prepd"7 ;prepd"6 ;prepd.< ;prepd_< ;prepd_* ;prepd_| ;prepd`< ;prepd`> ;prepd."9 ;prepd`9 ;prepd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepaid-xl prepaid-([{''"xl prepaid-/xl prepaid-$xl'
  - 'prepd-xl prepd-"<.<{''0xl prepd-_/xl prepd-`sxl'

- - 'prepaid(xl prepaid[xl prepaid{xl prepaid''xl prepaid"xl prepaid=([{''"-xl prepaid([{''"-xl prepaid/-xl prepaid$-xl'
  - 'prepd"<xl prepd.<xl prepd{xl prepd''xl prepd0xl prepd"7"<.<{''0-xl prepd"<.<{''0-xl prepd/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(prepaids [prepaids {prepaids ''prepaids "prepaids -prepaids'
  - '"<prepds .<prepds _<prepds ,8prepds 8prepds -prepds'

- - '!prepaids @prepaids #prepaids $prepaids %prepaids ^prepaids &prepaids *prepaids )prepaids _prepaids =prepaids +prepaids ]prepaids }prepaids \\prepaids |prepaids .prepaids ,prepaids ;prepaids :prepaids ?prepaids <prepaids >prepaids `prepaids ~prepaids /prepaids'
  - '!prepds `aprepds _?prepds `sprepds .0prepds `5prepds `&prepds "9prepds ">prepds .-prepds "7prepds "6prepds .>prepds _>prepds _*prepds _|prepds 4prepds 1prepds ;prepds0 3prepds ;8prepds `<prepds `>prepds ;8prepds .*prepds `9prepds _/prepds'
  - xfail: contraction following special characters is ignored

- - 'prepds (prepds [prepds {prepds ''prepds "prepds -prepds !prepds @prepds #prepds $prepds %prepds ^prepds &prepds *prepds )prepds _prepds =prepds +prepds ]prepds }prepds \\prepds |prepds .prepds ,prepds ;prepds :prepds ?prepds <prepds'
  - ';prepds "<;prepds .<;prepds _<;prepds ,8;prepds 8;prepds -;prepds !;prepds `a;prepds _?;prepds `s;prepds .0;prepds `5;prepds `&;prepds "9;prepds ">;prepds .-;prepds "7;prepds "6;prepds .>;prepds _>;prepds _*;prepds _|;prepds 4;prepds 1;prepds ;2prepds0 3;prepds ;8;prepds `<;prepds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - '>prepds ?prepds `prepds ~prepds /prepds'
  - '`>;prepds ;8;prepds .*;prepds `9;prepds _/;prepds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-prepaids xl-([{''"prepaids l/-prepaids l$-prepaids'
  - 'xl-prepds xl-"<.<{''0prepds l/-prepds l$-prepds'

- - 'xl(prepaids xl[prepaids xl{prepaids xl''prepaids xl"prepaids xl-=([{''"prepaids'
  - 'xl"<prepds xl.<prepds xl{prepds xl''prepds xl0prepds xl-"7"<.<{''0prepds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'prepaids) prepaids] prepaids} prepaids'' prepaids" prepaids- prepaids, prepaids. prepaids; prepaids: prepaids? prepaids!'
  - 'prepds"> prepds.> prepds_> prepds,0 prepds0 prepds- prepds1 prepds4 prepds; prepds03 prepds8 prepds!'

- - 'prepaids@ prepaids# prepaids$ prepaids% prepaids^ prepaids& prepaids* prepaids( prepaids_ prepaids= prepaids+ prepaids[ prepaids{ prepaids\\ prepaids| prepaids< prepaids> prepaids` prepaids~ prepaids/'
  - 'prepds`a prepds_? prepds`s prepds.0 prepds`5 prepds`& prepds"9 prepds"< prepds.- prepds"7 prepds"6 prepds.< prepds_< prepds_* prepds_| prepds`< prepds`> prepds."9 prepds`9 prepds/'
  - xfail: contraction followed by special characters is ignored

- - 'prepds) prepds] prepds} prepds'' prepds" prepds- prepds, prepds. prepds; prepds: prepds? prepds! prepds@ prepds# prepds$ prepds% prepds^ prepds& prepds* prepds( prepds_ prepds= prepds+ prepds[ prepds{ prepds\\ prepds| prepds< prepds>'
  - ';prepds"> ;prepds.> ;prepds_> ;prepds,0 ;prepds0 ;prepds- ;prepds1 ;prepds4 ;prepds; ;prepds03 ;prepds8 ;prepds! ;prepds`a ;prepds_? ;prepds`s ;prepds.0 ;prepds`5 ;prepds`& ;prepds"9 ;prepds"< ;prepds.- ;prepds"7 ;prepds"6 ;prepds.< ;prepds_< ;prepds_* ;prepds_| ;prepds`< ;prepds>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepds` prepds~ prepds/'
  - ';prepds."9 ;prepds`9 ;prepds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'prepaids-xl prepaids-([{''"xl prepaids-/xl prepaids-$xl'
  - 'prepds-xl prepds-"<.<{''0xl prepds-_/xl prepds-`sxl'

- - 'prepaids(xl prepaids[xl prepaids{xl prepaids''xl prepaids"xl prepaids=([{''"-xl prepaids([{''"-xl prepaids/-xl prepaids$-xl'
  - 'prepds"<xl prepds.<xl prepds{xl prepds''xl prepds0xl prepds"7"<.<{''0-xl prepds"<.<{''0-xl prepds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(repaid [repaid {repaid ''repaid "repaid -repaid'
  - '"<repd .<repd _<repd ,8repd 8repd -repd'

- - '!repaid @repaid #repaid $repaid %repaid ^repaid &repaid *repaid )repaid _repaid =repaid +repaid ]repaid }repaid \\repaid |repaid .repaid ,repaid ;repaid :repaid ?repaid <repaid >repaid `repaid ~repaid /repaid'
  - '!repd `arepd _?repd `srepd .0repd `5repd `&repd "9repd ">repd .-repd "7repd "6repd .>repd _>repd _*repd _|repd 4repd 1repd ;repd0 3repd ;8repd `<repd `>repd ;8repd .*repd `9repd _/repd'
  - xfail: contraction following special characters is ignored

- - '(repd [repd {repd ''repd "repd -repd'
  - '"<;repd .<;repd _<;repd ,8;repd 8;repd -;repd'

- - '!repd @repd #repd $repd %repd ^repd &repd *repd )repd _repd =repd +repd ]repd }repd \\repd |repd .repd ,repd ;repd :repd ?repd <repd >repd ?repd `repd ~repd /repd'
  - '!;repd `a;repd _?;repd `s;repd .0;repd `5;repd `&;repd "9;repd ">;repd .-;repd "7;repd "6;repd .>;repd _>;repd _*;repd _|;repd 4;repd 1;repd ;2repd0 3;repd ;8;repd `<;repd `>;repd .*;repd `9;repd _/;repd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-repaid xl-([{''"repaid l/-repaid l$-repaid'
  - 'xl-repd xl-"<.<{''0repd l/-repd l$-repd'

- - 'xl(repaid xl[repaid xl{repaid xl''repaid xl"repaid xl-=([{''"repaid'
  - 'xl"<repd xl.<repd xl{repd xl''repd xl0repd xl-"7"<.<{''0repd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'repaid) repaid] repaid} repaid'' repaid" repaid- repaid, repaid. repaid; repaid: repaid? repaid!'
  - 'repd"> repd.> repd_> repd,0 repd0 repd- repd1 repd4 repd; repd03 repd8 repd!'

- - 'repaid@ repaid# repaid$ repaid% repaid^ repaid& repaid* repaid( repaid_ repaid= repaid+ repaid[ repaid{ repaid\\ repaid| repaid< repaid> repaid` repaid~ repaid/'
  - 'repd`a repd_? repd`s repd.0 repd`5 repd`& repd"9 repd"< repd.- repd"7 repd"6 repd.< repd_< repd_* repd_| repd`< repd`> repd."9 repd`9 repd/'
  - xfail: contraction followed by special characters is ignored

- - 'repd) repd] repd} repd'' repd" repd- repd, repd. repd; repd: repd? repd!'
  - ';repd"> ;repd.> ;repd_> ;repd,0 ;repd0 ;repd- ;repd1 ;repd4 ;repd; ;repd03 ;repd8 ;repd!'

- - 'repd@ repd# repd$ repd% repd^ repd& repd* repd( repd_ repd= repd+ repd[ repd{ repd\\ repd| repd< repd> repd` repd~ repd/'
  - ';repd`a ;repd_? ;repd`s ;repd.0 ;repd`5 ;repd`& ;repd"9 ;repd"< ;repd.- ;repd"7 ;repd"6 ;repd.< ;repd_< ;repd_* ;repd_| ;repd`< ;repd`> ;repd."9 ;repd`9 ;repd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'repaid-xl repaid-([{''"xl repaid-/xl repaid-$xl'
  - 'repd-xl repd-"<.<{''0xl repd-_/xl repd-`sxl'

- - 'repaid(xl repaid[xl repaid{xl repaid''xl repaid"xl repaid=([{''"-xl repaid([{''"-xl repaid/-xl repaid$-xl'
  - 'repd"<xl repd.<xl repd{xl repd''xl repd0xl repd"7"<.<{''0-xl repd"<.<{''0-xl repd/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(repaids [repaids {repaids ''repaids "repaids -repaids'
  - '"<repds .<repds _<repds ,8repds 8repds -repds'

- - '!repaids @repaids #repaids $repaids %repaids ^repaids &repaids *repaids )repaids _repaids =repaids +repaids ]repaids }repaids \\repaids |repaids .repaids ,repaids ;repaids :repaids ?repaids <repaids >repaids `repaids ~repaids /repaids'
  - '!repds `arepds _?repds `srepds .0repds `5repds `&repds "9repds ">repds .-repds "7repds "6repds .>repds _>repds _*repds _|repds 4repds 1repds ;repds0 3repds ;8repds `<repds `>repds ;8repds .*repds `9repds _/repds'
  - xfail: contraction following special characters is ignored

- - 'repds (repds [repds {repds ''repds "repds -repds !repds @repds #repds $repds %repds ^repds &repds *repds )repds _repds =repds +repds ]repds }repds \\repds |repds .repds ,repds ;repds :repds ?repds <repds >repds ?repds `repds ~repds /repds'
  - ';repds "<;repds .<;repds _<;repds ,8;repds 8;repds -;repds !;repds `a;repds _?;repds `s;repds .0;repds `5;repds `&;repds "9;repds ">;repds .-;repds "7;repds "6;repds .>;repds _>;repds _*;repds _|;repds 4;repds 1;repds ;2repds0 3;repds ;8;repds `<;repds `>;repds .*;repds `9;repds _/;repds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-repaids xl-([{''"repaids l/-repaids l$-repaids'
  - 'xl-repds xl-"<.<{''0repds l/-repds l$-repds'

- - 'xl(repaids xl[repaids xl{repaids xl''repaids xl"repaids xl-=([{''"repaids'
  - 'xl"<repds xl.<repds xl{repds xl''repds xl0repds xl-"7"<.<{''0repds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'repaids) repaids] repaids} repaids'' repaids" repaids- repaids, repaids. repaids; repaids: repaids? repaids!'
  - 'repds"> repds.> repds_> repds,0 repds0 repds- repds1 repds4 repds; repds03 repds8 repds!'

- - 'repaids@ repaids# repaids$ repaids% repaids^ repaids& repaids* repaids( repaids_ repaids= repaids+ repaids[ repaids{ repaids\\ repaids| repaids< repaids> repaids` repaids~ repaids/'
  - 'repds`a repds_? repds`s repds.0 repds`5 repds`& repds"9 repds"< repds.- repds"7 repds"6 repds.< repds_< repds_* repds_| repds`< repds`> repds."9 repds`9 repds/'
  - xfail: contraction followed by special characters is ignored

- - 'repds) repds] repds} repds'' repds" repds- repds, repds. repds; repds: repds? repds! repds@ repds# repds$ repds% repds^ repds& repds* repds( repds_ repds= repds+ repds[ repds{ repds\\ repds| repds< repds> repds` repds~ repds/'
  - ';repds"> ;repds.> ;repds_> ;repds,0 ;repds0 ;repds- ;repds1 ;repds4 ;repds; ;repds03 ;repds8 ;repds! ;repds`a ;repds_? ;repds`s ;repds.0 ;repds`5 ;repds`& ;repds"9 ;repds"< ;repds.- ;repds"7 ;repds"6 ;repds.< ;repds_< ;repds_* ;repds_| ;repds`< ;repds`> ;repds."9 ;repds`9 ;repds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'repaids-xl repaids-([{''"xl repaids-/xl repaids-$xl'
  - 'repds-xl repds-"<.<{''0xl repds-_/xl repds-`sxl'

- - 'repaids(xl repaids[xl repaids{xl repaids''xl repaids"xl repaids=([{''"-xl repaids([{''"-xl repaids/-xl repaids$-xl'
  - 'repds"<xl repds.<xl repds{xl repds''xl repds0xl repds"7"<.<{''0-xl repds"<.<{''0-xl repds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unpaid [unpaid {unpaid ''unpaid "unpaid -unpaid'
  - '"<unpd .<unpd _<unpd ,8unpd 8unpd -unpd'

- - '!unpaid @unpaid #unpaid $unpaid %unpaid ^unpaid &unpaid *unpaid )unpaid _unpaid =unpaid +unpaid ]unpaid }unpaid \\unpaid |unpaid .unpaid ,unpaid ;unpaid :unpaid ?unpaid <unpaid >unpaid `unpaid ~unpaid /unpaid'
  - '!unpd `aunpd _?unpd `sunpd .0unpd `5unpd `&unpd "9unpd ">unpd .-unpd "7unpd "6unpd .>unpd _>unpd _*unpd _|unpd 4unpd 1unpd ;unpd0 3unpd ;8unpd `<unpd `>unpd ;8unpd .*unpd `9unpd _/unpd'
  - xfail: contraction following special characters is ignored

- - '(unpd [unpd {unpd ''unpd "unpd -unpd'
  - '"<;unpd .<;unpd _<;unpd ,8;unpd 8;unpd -;unpd'

- - '!unpd @unpd #unpd $unpd %unpd ^unpd &unpd *unpd )unpd _unpd =unpd +unpd ]unpd }unpd \\unpd |unpd .unpd ,unpd ;unpd :unpd ?unpd <unpd >unpd ?unpd `unpd ~unpd /unpd'
  - '!;unpd `a;unpd _?;unpd `s;unpd .0;unpd `5;unpd `&;unpd "9;unpd ">;unpd .-;unpd "7;unpd "6;unpd .>;unpd _>;unpd _*;unpd _|;unpd 4;unpd 1;unpd ;2unpd0 3;unpd ;8;unpd `<;unpd `>;unpd .*;unpd `9;unpd _/;unpd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unpaid xl-([{''"unpaid l/-unpaid l$-unpaid'
  - 'xl-unpd xl-"<.<{''0unpd l/-unpd l$-unpd'

- - 'xl(unpaid xl[unpaid xl{unpaid xl''unpaid xl"unpaid xl-=([{''"unpaid'
  - 'xl"<unpd xl.<unpd xl{unpd xl''unpd xl0unpd xl-"7"<.<{''0unpd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unpaid) unpaid] unpaid} unpaid'' unpaid" unpaid- unpaid, unpaid. unpaid; unpaid: unpaid? unpaid!'
  - 'unpd"> unpd.> unpd_> unpd,0 unpd0 unpd- unpd1 unpd4 unpd; unpd03 unpd8 unpd!'

- - 'unpaid@ unpaid# unpaid$ unpaid% unpaid^ unpaid& unpaid* unpaid( unpaid_ unpaid= unpaid+ unpaid[ unpaid{ unpaid\\ unpaid| unpaid< unpaid> unpaid` unpaid~ unpaid/'
  - 'unpd`a unpd_? unpd`s unpd.0 unpd`5 unpd`& unpd"9 unpd"< unpd.- unpd"7 unpd"6 unpd.< unpd_< unpd_* unpd_| unpd`< unpd`> unpd."9 unpd`9 unpd/'
  - xfail: contraction followed by special characters is ignored

- - 'unpd) unpd] unpd} unpd'' unpd" unpd- unpd, unpd. unpd; unpd: unpd? unpd!'
  - ';unpd"> ;unpd.> ;unpd_> ;unpd,0 ;unpd0 ;unpd- ;unpd1 ;unpd4 ;unpd; ;unpd03 ;unpd8 ;unpd!'

- - 'unpd@ unpd# unpd$ unpd% unpd^ unpd& unpd* unpd( unpd_ unpd= unpd+ unpd[ unpd{ unpd\\ unpd| unpd< unpd> unpd` unpd~ unpd/'
  - ';unpd`a ;unpd_? ;unpd`s ;unpd.0 ;unpd`5 ;unpd`& ;unpd"9 ;unpd"< ;unpd.- ;unpd"7 ;unpd"6 ;unpd.< ;unpd_< ;unpd_* ;unpd_| ;unpd`< ;unpd`> ;unpd."9 ;unpd`9 ;unpd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unpaid-xl unpaid-([{''"xl unpaid-/xl unpaid-$xl'
  - 'unpd-xl unpd-"<.<{''0xl unpd-_/xl unpd-`sxl'

- - 'unpaid(xl unpaid[xl unpaid{xl unpaid''xl unpaid"xl unpaid=([{''"-xl unpaid([{''"-xl unpaid/-xl unpaid$-xl'
  - 'unpd"<xl unpd.<xl unpd{xl unpd''xl unpd0xl unpd"7"<.<{''0-xl unpd"<.<{''0-xl unpd/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unpaids [unpaids {unpaids ''unpaids "unpaids -unpaids'
  - '"<unpds .<unpds _<unpds ,8unpds 8unpds -unpds'

- - '!unpaids @unpaids #unpaids $unpaids %unpaids ^unpaids &unpaids *unpaids )unpaids _unpaids =unpaids +unpaids ]unpaids }unpaids \\unpaids |unpaids .unpaids ,unpaids ;unpaids :unpaids ?unpaids <unpaids >unpaids `unpaids ~unpaids /unpaids'
  - '!unpds `aunpds _?unpds `sunpds .0unpds `5unpds `&unpds "9unpds ">unpds .-unpds "7unpds "6unpds .>unpds _>unpds _*unpds _|unpds 4unpds 1unpds ;unpds0 3unpds ;8unpds `<unpds `>unpds ;8unpds .*unpds `9unpds _/unpds'
  - xfail: contraction following special characters is ignored

- - 'unpds (unpds [unpds {unpds ''unpds "unpds -unpds !unpds @unpds #unpds $unpds %unpds ^unpds &unpds *unpds )unpds _unpds =unpds +unpds ]unpds }unpds \\unpds |unpds .unpds ,unpds ;unpds :unpds ?unpds <unpds >unpds ?unpds `unpds ~unpds /unpds'
  - ';unpds "<;unpds .<;unpds _<;unpds ,8;unpds 8;unpds -;unpds !;unpds `a;unpds _?;unpds `s;unpds .0;unpds `5;unpds `&;unpds "9;unpds ">;unpds .-;unpds "7;unpds "6;unpds .>;unpds _>;unpds _*;unpds _|;unpds 4;unpds 1;unpds ;2unpds0 3;unpds ;8;unpds `<;unpds `>;unpds .*;unpds `9;unpds _/;unpds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unpaids xl-([{''"unpaids l/-unpaids l$-unpaids'
  - 'xl-unpds xl-"<.<{''0unpds l/-unpds l$-unpds'

- - 'xl(unpaids xl[unpaids xl{unpaids xl''unpaids xl"unpaids xl-=([{''"unpaids'
  - 'xl"<unpds xl.<unpds xl{unpds xl''unpds xl0unpds xl-"7"<.<{''0unpds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unpaids) unpaids] unpaids} unpaids'' unpaids" unpaids- unpaids, unpaids. unpaids; unpaids: unpaids? unpaids!'
  - 'unpds"> unpds.> unpds_> unpds,0 unpds0 unpds- unpds1 unpds4 unpds; unpds03 unpds8 unpds!'

- - 'unpaids@ unpaids# unpaids$ unpaids% unpaids^ unpaids& unpaids* unpaids( unpaids_ unpaids= unpaids+ unpaids[ unpaids{ unpaids\\ unpaids| unpaids< unpaids> unpaids` unpaids~ unpaids/'
  - 'unpds`a unpds_? unpds`s unpds.0 unpds`5 unpds`& unpds"9 unpds"< unpds.- unpds"7 unpds"6 unpds.< unpds_< unpds_* unpds_| unpds`< unpds`> unpds."9 unpds`9 unpds/'
  - xfail: contraction followed by special characters is ignored

- - 'unpds) unpds] unpds} unpds'' unpds" unpds- unpds, unpds. unpds; unpds: unpds? unpds! unpds@ unpds# unpds$ unpds% unpds^ unpds& unpds* unpds( unpds_ unpds= unpds+ unpds[ unpds{ unpds\\ unpds| unpds< unpds> unpds` unpds~ unpds/'
  - ';unpds"> ;unpds.> ;unpds_> ;unpds,0 ;unpds0 ;unpds- ;unpds1 ;unpds4 ;unpds; ;unpds03 ;unpds8 ;unpds! ;unpds`a ;unpds_? ;unpds`s ;unpds.0 ;unpds`5 ;unpds`& ;unpds"9 ;unpds"< ;unpds.- ;unpds"7 ;unpds"6 ;unpds.< ;unpds_< ;unpds_* ;unpds_| ;unpds`< ;unpds`> ;unpds."9 ;unpds`9 ;unpds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unpaids-xl unpaids-([{''"xl unpaids-/xl unpaids-$xl'
  - 'unpds-xl unpds-"<.<{''0xl unpds-_/xl unpds-`sxl'

- - 'unpaids(xl unpaids[xl unpaids{xl unpaids''xl unpaids"xl unpaids=([{''"-xl unpaids([{''"-xl unpaids/-xl unpaids$-xl'
  - 'unpds"<xl unpds.<xl unpds{xl unpds''xl unpds0xl unpds"7"<.<{''0-xl unpds"<.<{''0-xl unpds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(people [people {people ''people "people -people'
  - '"<p .<p _<p ,8p 8p -p'

- - '!people @people #people $people %people ^people &people *people )people _people =people +people ]people }people \\people |people .people ,people ;people :people ?people <people >people `people ~people /people'
  - '!p `ap _?p `sp .0p `5p `&p "9p ">p .-p "7p "6p .>p _>p _*p _|p 4p 1p ;p0 3p ;8p `<p `>p .*p `9p _/p'
  - xfail: contraction following special characters is ignored

- - '(p [p {p ''p "p -p'
  - '"<;p .<;p _<;p ,8;p 8;p -;p'

- - '!p @p #p $p %p ^p &p *p )p _p =p +p ]p }p \\p |p .p ,p ;p :p ?p <p >p `p ~p /p'
  - '!;p `a;p _?;p `s;p .0;p `5;p `&;p "9;p ">;p .-;p "7;p "6;p .>;p _>;p _*;p _|;p 4;p 1;p ;2p0 3;p ;8;p `<;p `>;p .*;p `9;p _/;p'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-people xl-([{''"people xl/-people xl$-people'
  - 'xl-p xl-"<.<{''0p xl_/-p xl`s-p'

- - 'xl(people xl[people xl{people xl''people xl"people xl-=([{''"people'
  - 'xl"<p xl.<p xl{p xl''p xl0p xl-"7"<.<{''0p'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'people) people] people} people'' people" people- people, people. people; people: people? people!'
  - 'p"> p.> p_> p,0 p0 p- p1 p4 p; p03 p8 p!'

- - 'people@ people# people$ people% people^ people& people* people( people_ people= people+ people[ people{ people\\ people| people< people> people` people~ people/'
  - 'p`a p_? p`s p.0 p`5 p`& p"9 p"< p.- p"7 p"6 p.< p_< p_* p_| p`< p`> p."9 p`9 p/'
  - xfail: contraction followed by special characters is ignored

- - 'p) p] p} p'' p" p- p, p. p; p: p? p!'
  - ';p"> ;p.> ;p_> ;p,0 ;p0 ;p- ;p1 ;p4 ;p; ;p03 ;p8 ;p!'

- - 'p@ p# p$ p% p^ p& p* p( p_ p= p+ p[ p{ p\\ p| p< p> p` p~ p/'
  - ';p`a ;p_? ;p`s ;p.0 ;p`5 ;p`& ;p"9 ;p"< ;p.- ;p"7 ;p"6 ;p.< ;p_< ;p_* ;p_| ;p`< ;p`> ;p."9 ;p`9 ;p/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'people-xl people-([{''"xl people-/xl people-$xl'
  - 'p-xl p-"<.<{''0xl p-_/xl p-`sxl'

- - 'people(xl people[xl people{xl people''xl people"xl people=([{''"-xl people([{''"-xl people/-xl people$-xl'
  - 'p"<xl p.<xl p{xl p''xl p0xl p"7"<.<{''0-xl p"<.<{''0-xl p/-xl p`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceive [perceive {perceive ''perceive "perceive -perceive'
  - '"<p}cv .<p}cv _<p}cv ,8p}cv 8p}cv -p}cv'

- - '!perceive @perceive #perceive $perceive %perceive ^perceive &perceive *perceive )perceive _perceive =perceive +perceive ]perceive }perceive \\perceive |perceive .perceive ,perceive ;perceive :perceive ?perceive <perceive >perceive `perceive ~perceive'
  - '!p}cv `ap}cv _?p}cv `sp}cv .0p}cv `5p}cv `&p}cv "9p}cv ">p}cv .-p}cv "7p}cv "6p}cv .>p}cv _>p}cv _*p}cv _|p}cv 4p}cv 1p}cv ;p}cv0 3p}cv ;8p}cv `<p}cv `>p}cv .*p}cv `9p}cv'
  - xfail: contraction following special characters is ignored

- - '/perceive'
  - '_/p}cv'
  - xfail: contraction following special characters is ignored

- - '(percv [percv {percv ''percv "percv -percv !percv'
  - '"<percv .<percv _<percv ,8percv 8percv -percv !percv'

- - '@percv #percv $percv %percv ^percv &percv *percv )percv _percv =percv +percv ]percv erpercv \\percv |percv .percv ,percv ;percv :percv ?percv <percv >percv `percv ~percv /percv'
  - '`apercv _?percv `spercv .0percv `5percv `&percv "9percv ">percv .-percv "7percv "6percv .>percv erpercv _*percv _|percv 4percv 1percv ;percv0 3percv ;8percv `<percv `>percv .*percv `9percv _/percv'
  - xfail: non-contraction of "percv" conflicts witcv contraction of "perceive"

- - 'xl-perceive xl-([{''"perceive l/-perceive l$-perceive'
  - 'xl-p}cv xl-"<.<{''0p}cv l/-p}cv l$-p}cv'

- - 'xl(perceive xl[perceive xl{perceive xl''perceive xl"perceive xl-=([{''"perceive'
  - 'xl"<p}cv xl.<p}cv xl{p}cv xl''p}cv xl0p}cv xl-"7"<.<{''0p}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceive) perceive] perceive} perceive'' perceive" perceive- perceive, perceive. perceive; perceive: perceive? perceive!'
  - 'p}cv"> p}cv.> p}cv_> p}cv,0 p}cv0 p}cv- p}cv1 p}cv4 p}cv; p}cv03 p}cv8 p}cv!'

- - 'perceive@ perceive# perceive$ perceive% perceive^ perceive& perceive* perceive( perceive_ perceive= perceive+ perceive[ perceive{ perceive\\ perceive| perceive< perceive> perceive` perceive~ perceive/'
  - 'p}cv`a p}cv_? p}cv`s p}cv.0 p}cv`5 p}cv`& p}cv"9 p}cv"< p}cv.- p}cv"7 p}cv"6 p}cv.< p}cv_< p}cv_* p}cv_| p}cv`< p}cv`> p}cv."9 p}cv`9 p}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'percv) percv] percv} percv'' percv" percv- percv, percv. percv; percv: percv? percv!'
  - 'percv"> percv.> percv_> percv,0 percv0 percv- percv1 percv4 percv; percv03 percv8 percv!'

- - 'percv@ percv# percv$ percv% percv^ percv& percv* percv( percv_ percv= percv+ percv[ percv{ percv\\ percv| percv< percv> percv` percv~ percv/'
  - 'percv`a percv_? percv`s percv.0 percv`5 percv`& percv"9 percv"< percv.- percv"7 percv"6 percv.< percv_< percv_* percv_| percv`< percv`> percv."9 percv`9 percv/'
  - xfail: non-contraction of "percv" conflicts with contraction of "perceive"

- - 'perceive-xl perceive-([{''"xl perceive-/xl perceive-$xl'
  - 'p}cv-xl p}cv-"<.<{''0xl p}cv-_/xl p}cv-`sxl'

- - 'perceive(xl perceive[xl perceive{xl perceive''xl perceive"xl perceive=([{''"-xl perceive([{''"-xl perceive/-xl perceive$-xl'
  - 'p}cv"<xl p}cv.<xl p}cv{xl p}cv''xl p}cv0xl p}cv"7"<.<{''0-xl p}cv"<.<{''0-xl p}cv/-xl p}cv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceived [perceived {perceived ''perceived "perceived -perceived'
  - '"<p}cvd .<p}cvd _<p}cvd ,8p}cvd 8p}cvd -p}cvd'

- - '!perceived @perceived #perceived $perceived %perceived ^perceived &perceived *perceived )perceived _perceived =perceived +perceived ]perceived }perceived \\perceived |perceived .perceived ,perceived ;perceived :perceived ?perceived <perceived >perceived'
  - '!p}cvd `ap}cvd _?p}cvd $p}cvd .0p}cvd `5p}cvd `&p}cvd "9p}cvd ">p}cvd .-p}cvd "7p}cvd "6p}cvd .>p}cvd _>p}cvd _*p}cvd _|p}cvd 4p}cvd 1p}cvd ;p}cvd0 3p}cvd ;8p}cvd `<p}cvd `>p}cvd'
  - xfail: contraction following special characters is ignored

- - '`perceived ~perceived /perceived'
  - '.*p}cvd `9p}cvd _/p}cvd'
  - xfail: contraction following special characters is ignored

- - 'percvd  (percvd [percvd {percvd ''percvd "percvd -percvd !percvd @percvd #percvd $percvd %percvd ^percvd &percvd *percvd )percvd _percvd =percvd +percvd ]percvd erpercvd \\percvd |percvd .percvd ,percvd ;percvd :percvd ?percvd <percvd >percvd `percvd ~percvd'
  - 'percvd  "<percvd .<percvd _<percvd ,8percvd 8percvd -percvd !percvd `apercvd _?percvd `spercvd .0percvd `5percvd `&percvd "9percvd ">percvd .-percvd "7percvd "6percvd .>percvd erpercvd _*percvd _|percvd 4percvd 1percvd ;percvd0 3percvd ;8percvd `<percvd `>percvd .*percvd `9percvd'
  - xfail: non-contraction of "percvd" conflicts witcv contraction of "perceived"

- - '/percvd'
  - '_/percvd'
  - xfail: non-contraction of "percvd" conflicts witcv contraction of "perceived"

- - 'xl-perceived xl-([{''"perceived l/-perceived l$-perceived'
  - 'xl-p}cvd xl-"<.<{''0p}cvd l/-p}cvd l$-p}cvd'

- - 'xl(perceived xl[perceived xl{perceived xl''perceived xl"perceived xl-=([{''"perceived'
  - 'xl"<p}cvd xl.<p}cvd xl{p}cvd xl''p}cvd xl0p}cvd xl-"7"<.<{''0p}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceived) perceived] perceived} perceived'' perceived" perceived- perceived, perceived. perceived; perceived: perceived? perceived!'
  - 'p}cvd"> p}cvd.> p}cvd_> p}cvd,0 p}cvd0 p}cvd- p}cvd1 p}cvd4 p}cvd; p}cvd03 p}cvd8 p}cvd!'

- - 'perceived@ perceived# perceived$ perceived% perceived^ perceived& perceived* perceived( perceived_ perceived= perceived+ perceived[ perceived{ perceived\\ perceived| perceived< perceived> perceived` perceived~ perceived/'
  - 'p}cvd`a p}cvd_? p}cvd`s p}cvd.0 p}cvd`5 p}cvd`& p}cvd"9 p}cvd"< p}cvd.- p}cvd"7 p}cvd"6 p}cvd.< p}cvd_< p}cvd_* p}cvd_| p}cvd`< p}cvd`> p}cvd."9 p}cvd`9 p}cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'percvd) percvd] percvd} percvd'' percvd" percvd- percvd, percvd. percvd; percvd: percvd? percvd! percvd@ percvd# percvd$ percvd% percvd^ percvd& percvd* percvd( percvd_ percvd= percvd+ percvd[ percvd{ percvd\\ percvd| percvd< percvd> percvd` percvd~ percvd/'
  - 'percvd"> percvd.> percvd_> percvd,0 percvd0 percvd- percvd1 percvd4 percvd; percvd03 percvd8 percvd! percvd`a percvd_? percvd`s percvd.0 percvd`5 percvd`& percvd"9 percvd"< percvd.- percvd"7 percvd"6 percvd.< percvd_< percvd_* percvd_| percvd`< percvd`> percvd."9 percvd`9 percvd/'
  - xfail: non-contraction of "percvd" conflicts with contraction of "perceived"

- - 'perceived-xl perceived-([{''"xl perceived-/xl perceived-$xl'
  - 'p}cvd-xl p}cvd-"<.<{''0xl p}cvd-_/xl p}cvd-`sxl'

- - 'perceived(xl perceived[xl perceived{xl perceived''xl perceived"xl perceived=([{''"-xl perceived([{''"-xl perceived/-xl perceived$-xl'
  - 'p}cvd"<xl p}cvd.<xl p}cvd{xl p}cvd''xl p}cvd0xl p}cvd"7"<.<{''0-xl p}cvd"<.<{''0-xl p}cvd/-xl p}cvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceiving [perceiving {perceiving ''perceiving "perceiving -perceiving'
  - '"<p}cvg .<p}cvg _<p}cvg ,8p}cvg 8p}cvg -p}cvg'

- - '!perceiving @perceiving #perceiving $perceiving %perceiving ^perceiving &perceiving *perceiving )perceiving _perceiving =perceiving +perceiving ]perceiving }perceiving \\perceiving |perceiving .perceiving ,perceiving ;perceiving :perceiving ?perceiving'
  - '!p}cvg `ap}cvg _?p}cvg `sp}cvg .0p}cvg `5p}cvg `&p}cvg "9p}cvg ">p}cvg .-p}cvg "7p}cvg +p}cvg .>p}cvg _>p}cvg _*p}cvg _|p}cvg 4p}cvg 1p}cvg ;p}cvg0 3p}cvg ;8p}cvg'
  - xfail: contraction following special characters is ignored

- - '<perceiving >perceiving `perceiving ~perceiving /perceiving'
  - '`<p}cvg `>p}cvg .*p}cvg `9p}cvg _/p}cvg'
  - xfail: contraction following special characters is ignored

- - '(percvg [percvg {percvg ''percvg "percvg -percvg !percvg'
  - '"<percvg .<percvg _<percvg ,8percvg 8percvg -percvg !percvg'

- - '@percvg #percvg $percvg %percvg ^percvg &percvg *percvg )percvg _percvg =percvg +percvg ]percvg erpercvg \\percvg |percvg .percvg ,percvg ;percvg :percvg ?percvg <percvg >percvg `percvg ~percvg /percvg'
  - '`apercvg _?percvg `spercvg .0percvg `5percvg `&percvg "9percvg ">percvg .-percvg "7percvg "6percvg .>percvg erpercvg _*percvg _|percvg 4percvg 1percvg ;percvg0 3percvg ;8percvg `<percvg `>percvg .*percvg `9percvg _/percvg'
  - xfail: non-contraction of "percvg" conflicts witcv contraction of "perceiving"

- - 'xl-perceiving xl-([{''"perceiving l/-perceiving l$-perceiving'
  - 'xl-p}cvg xl-"<.<{''0p}cvg l/-p}cvg l$-p}cvg'

- - 'xl(perceiving xl[perceiving xl{perceiving xl''perceiving xl"perceiving xl-=([{''"perceiving'
  - 'xl"<p}cvg xl.<p}cvg xl{p}cvg xl''p}cvg xl0p}cvg xl-"7"<.<{''0p}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceiving) perceiving] perceiving} perceiving'' perceiving" perceiving- perceiving, perceiving. perceiving; perceiving: perceiving? perceiving!'
  - 'p}cvg"> p}cvg.> p}cvg_> p}cvg,0 p}cvg0 p}cvg- p}cvg1 p}cvg4 p}cvg; p}cvg03 p}cvg8 p}cvg!'

- - 'perceiving@ perceiving# perceiving$ perceiving% perceiving^ perceiving& perceiving* perceiving( perceiving_ perceiving= perceiving+ perceiving[ perceiving{ perceiving\\ perceiving| perceiving< perceiving> perceiving` perceiving~ perceiving/'
  - 'p}cvg`a p}cvg_? p}cvg`s p}cvg.0 p}cvg`5 p}cvg`& p}cvg"9 p}cvg"< p}cvg.- p}cvg"7 p}cvg+ p}cvg.< p}cvg_< p}cvg_* p}cvg_| p}cvg`< p}cvg`> p}cvg."9 p}cvg`9 p}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'percvg) percvg] percvg} percvg'' percvg" percvg- percvg, percvg. percvg; percvg: percvg? percvg!'
  - 'percvg"> percvg.> percvg_> percvg,0 percvg0 percvg- percvg1 percvg4 percvg; percvg03 percvg8 percvg!'

- - 'percvg@ percvg# percvg$ percvg% percvg^ percvg& percvg* percvg( percvg_ percvg= percvg+ percvg[ percvg{ percvg\\ percvg| percvg< percvg> percvg` percvg~ percvg/'
  - 'percvg`a percvg_? percvg`s percvg.0 percvg`5 percvg`& percvg"9 percvg"< percvg.- percvg"7 percvg"6 percvg.< percvg_< percvg_* percvg_| percvg`< percvg`> percvg."9 percvg`9 percvg/'
  - xfail: non-contraction of "percvg" conflicts with contraction of "perceiving"

- - 'perceiving-xl perceiving-([{''"xl perceiving-/xl perceiving-$xl'
  - 'p}cvg-xl p}cvg-"<.<{''0xl p}cvg-_/xl p}cvg-`sxl'

- - 'perceiving(xl perceiving[xl perceiving{xl perceiving''xl perceiving"xl perceiving=([{''"-xl perceiving([{''"-xl perceiving/-xl perceiving$-xl'
  - 'p}cvg"<xl p}cvg.<xl p}cvg{xl p}cvg''xl p}cvg0xl p}cvg"7"<.<{''0-xl p}cvg"<.<{''0-xl p}cvg/-xl p}cvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceiver [perceiver {perceiver ''perceiver "perceiver -perceiver'
  - '"<p}cvr .<p}cvr _<p}cvr ,8p}cvr 8p}cvr -p}cvr'

- - '!perceiver @perceiver #perceiver $perceiver %perceiver ^perceiver &perceiver *perceiver )perceiver _perceiver =perceiver +perceiver ]perceiver }perceiver \\perceiver |perceiver .perceiver ,perceiver ;perceiver :perceiver ?perceiver <perceiver >perceiver'
  - '!p}cvr `ap}cvr _?p}cvr `sp}cvr .0p}cvr `5p}cvr `&p}cvr "9p}cvr ">p}cvr .-p}cvr "7p}cvr "6p}cvr .>p}cvr }p}cvr _*p}cvr _|p}cvr 4p}cvr 1p}cvr ;p}cvr0 3p}cvr ;8p}cvr `<p}cvr `>p}cvr'
  - xfail: contraction following special characters is ignored

- - '`perceiver ~perceiver /perceiver'
  - '.*p}cvr `9p}cvr _/p}cvr'
  - xfail: contraction following special characters is ignored

- - 'percvr  (percvr [percvr {percvr ''percvr "percvr -percvr !percvr @percvr #percvr $percvr %percvr ^percvr &percvr *percvr )percvr _percvr =percvr +percvr ]percvr erpercvr \\percvr |percvr .percvr ,percvr ;percvr :percvr ?percvr <percvr >percvr `percvr ~percvr'
  - 'percvr  "<percvr .<percvr _<percvr ,8percvr 8percvr -percvr !percvr `apercvr _?percvr `spercvr .0percvr `5percvr `&percvr "9percvr ">percvr .-percvr "7percvr "6percvr .>percvr erpercvr _*percvr _|percvr 4percvr 1percvr ;percvr0 3percvr ;8percvr `<percvr `>percvr .*percvr `9percvr'
  - xfail: non-contraction of "percvr" conflicts witcv contraction of "perceiver"

- - '/percvr'
  - '_/percvr'
  - xfail: non-contraction of "percvr" conflicts witcv contraction of "perceiver"

- - 'xl-perceiver xl-([{''"perceiver l/-perceiver l$-perceiver'
  - 'xl-p}cvr xl-"<.<{''0p}cvr l/-p}cvr l$-p}cvr'

- - 'xl(perceiver xl[perceiver xl{perceiver xl''perceiver xl"perceiver xl-=([{''"perceiver'
  - 'xl"<p}cvr xl.<p}cvr xl{p}cvr xl''p}cvr xl0p}cvr xl-"7"<.<{''0p}cvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceiver) perceiver] perceiver} perceiver'' perceiver" perceiver- perceiver, perceiver. perceiver; perceiver: perceiver? perceiver!'
  - 'p}cvr"> p}cvr.> p}cvr_> p}cvr,0 p}cvr0 p}cvr- p}cvr1 p}cvr4 p}cvr; p}cvr03 p}cvr8 p}cvr!'

- - 'perceiver@ perceiver# perceiver$ perceiver% perceiver^ perceiver& perceiver* perceiver( perceiver_ perceiver= perceiver+ perceiver[ perceiver{ perceiver\\ perceiver| perceiver< perceiver> perceiver` perceiver~ perceiver/'
  - 'p}cvr`a p}cvr_? p}cvr`s p}cvr.0 p}cvr`5 p}cvr`& p}cvr"9 p}cvr"< p}cvr.- p}cvr"7 p}cvr"6 p}cvr.< p}cvr_< p}cvr_* p}cvr_| p}cvr`< p}cvr`> p}cvr."9 p}cvr`9 p}cvr/'
  - xfail: contraction followed by special characters is ignored

- - 'percvr) percvr] percvr} percvr'' percvr" percvr- percvr, percvr. percvr; percvr: percvr? percvr! percvr@ percvr# percvr$ percvr% percvr^ percvr& percvr* percvr( percvr_ percvr= percvr+ percvr[ percvr{ percvr\\ percvr| percvr< percvr> percvr` percvr~ percvr/'
  - 'percvr"> percvr.> percvr_> percvr,0 percvr0 percvr- percvr1 percvr4 percvr; percvr03 percvr8 percvr! percvr`a percvr_? percvr`s percvr.0 percvr`5 percvr`& percvr"9 percvr"< percvr.- percvr"7 percvr"6 percvr.< percvr_< percvr_* percvr_| percvr`< percvr`> percvr."9 percvr`9 percvr/'
  - xfail: non-contraction of "percvr" conflicts with contraction of "perceiver"

- - 'perceiver-xl perceiver-([{''"xl perceiver-/xl perceiver-$xl'
  - 'p}cvr-xl p}cvr-"<.<{''0xl p}cvr-_/xl p}cvr-`sxl'

- - 'perceiver(xl perceiver[xl perceiver{xl perceiver''xl perceiver"xl perceiver=([{''"-xl perceiver([{''"-xl perceiver/-xl perceiver$-xl'
  - 'p}cvr"<xl p}cvr.<xl p}cvr{xl p}cvr''xl p}cvr0xl p}cvr"7"<.<{''0-xl p}cvr"<.<{''0-xl p}cvr/-xl p}cvr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceivers [perceivers {perceivers ''perceivers "perceivers -perceivers'
  - '"<p}cvrs .<p}cvrs _<p}cvrs ,8p}cvrs 8p}cvrs -p}cvrs'

- - '!perceivers @perceivers #perceivers $perceivers %perceivers ^perceivers &perceivers *perceivers )perceivers _perceivers =perceivers +perceivers ]perceivers }perceivers \\perceivers |perceivers .perceivers ,perceivers ;perceivers :perceivers ?perceivers'
  - '!p}cvrs `ap}cvrs _?p}cvrs `sp}cvrs .0p}cvrs `5p}cvrs `&p}cvrs "9p}cvrs ">p}cvrs .-p}cvrs "7p}cvrs "6p}cvrs .>p}cvrs _>p}cvrs _*p}cvrs _|p}cvrs 4p}cvrs 1p}cvrs ;p}cvrs0 3p}cvrs ;8p}cvrs'
  - xfail: contraction following special characters is ignored

- - '<perceivers >perceivers `perceivers ~perceivers /perceivers'
  - '`<p}cvrs `>p}cvrs .*p}cvrs `9p}cvrs _/p}cvrs'
  - xfail: contraction following special characters is ignored

- - 'percvrs  (percvrs [percvrs {percvrs ''percvrs "percvrs -percvrs !percvrs @percvrs #percvrs $percvrs %percvrs ^percvrs &percvrs *percvrs )percvrs _percvrs =percvrs +percvrs ]percvrs erpercvrs \\percvrs |percvrs .percvrs ,percvrs ;percvrs :percvrs ?percvrs <percvrs'
  - 'percvrs  "<percvrs .<percvrs _<percvrs ,8percvrs 8percvrs -percvrs !percvrs `apercvrs _?percvrs `spercvrs .0percvrs `5percvrs `&percvrs "9percvrs ">percvrs .-percvrs "7percvrs "6percvrs .>percvrs erpercvrs _*percvrs _|percvrs 4percvrs 1percvrs ;percvrs0 3percvrs ;8percvrs `<percvrs'
  - xfail: non-contraction of "percvrs" conflicts witcv contraction of "perceivers"

- - '>percvrs `percvrs ~percvrs /percvrs'
  - '`>percvrs .*percvrs `9percvrs _/percvrs'
  - xfail: non-contraction of "percvrs" conflicts witcv contraction of "perceivers"

- - 'xl-perceivers xl-([{''"perceivers l/-perceivers l$-perceivers'
  - 'xl-p}cvrs xl-"<.<{''0p}cvrs l/-p}cvrs l$-p}cvrs'

- - 'xl(perceivers xl[perceivers xl{perceivers xl''perceivers xl"perceivers xl-=([{''"perceivers'
  - 'xl"<p}cvrs xl.<p}cvrs xl{p}cvrs xl''p}cvrs xl0p}cvrs xl-"7"<.<{''0p}cvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceivers) perceivers] perceivers} perceivers'' perceivers" perceivers- perceivers, perceivers. perceivers; perceivers: perceivers? perceivers!'
  - 'p}cvrs"> p}cvrs.> p}cvrs_> p}cvrs,0 p}cvrs0 p}cvrs- p}cvrs1 p}cvrs4 p}cvrs; p}cvrs03 p}cvrs8 p}cvrs!'

- - 'perceivers@ perceivers# perceivers$ perceivers% perceivers^ perceivers& perceivers* perceivers( perceivers_ perceivers= perceivers+ perceivers[ perceivers{ perceivers\\ perceivers| perceivers< perceivers> perceivers` perceivers~ perceivers/'
  - 'p}cvrs`a p}cvrs_? p}cvrs`s p}cvrs.0 p}cvrs`5 p}cvrs`& p}cvrs"9 p}cvrs"< p}cvrs.- p}cvrs"7 p}cvrs"6 p}cvrs.< p}cvrs_< p}cvrs_* p}cvrs_| p}cvrs`< p}cvrs`> p}cvrs."9 p}cvrs`9 p}cvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'percvrs) percvrs] percvrs} percvrs'' percvrs" percvrs- percvrs, percvrs. percvrs; percvrs: percvrs? percvrs! percvrs@ percvrs# percvrs$ percvrs% percvrs^ percvrs& percvrs* percvrs( percvrs_ percvrs= percvrs+ percvrs[ percvrs{ percvrs\\ percvrs| percvrs< percvrs>'
  - 'percvrs"> percvrs.> percvrs_> percvrs,0 percvrs0 percvrs- percvrs1 percvrs4 percvrs; percvrs03 percvrs8 percvrs! percvrs`a percvrs_? percvrs`s percvrs.0 percvrs`5 percvrs`& percvrs"9 percvrs"< percvrs.- percvrs"7 percvrs"6 percvrs.< percvrs_< percvrs_* percvrs_| percvrs`< percvrs>'
  - xfail: non-contraction of "percvrs" conflicts with contraction of "perceivers"

- - 'percvrs` percvrs~ percvrs/'
  - 'percvrs."9 percvrs`9 percvrs/'
  - xfail: non-contraction of "percvrs" conflicts with contraction of "perceivers"

- - 'perceivers-xl perceivers-([{''"xl perceivers-/xl perceivers-$xl'
  - 'p}cvrs-xl p}cvrs-"<.<{''0xl p}cvrs-_/xl p}cvrs-`sxl'

- - 'perceivers(xl perceivers[xl perceivers{xl perceivers''xl perceivers"xl perceivers=([{''"-xl perceivers([{''"-xl perceivers/-xl perceivers$-xl'
  - 'p}cvrs"<xl p}cvrs.<xl p}cvrs{xl p}cvrs''xl p}cvrs0xl p}cvrs"7"<.<{''0-xl p}cvrs"<.<{''0-xl p}cvrs/-xl p}cvrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perceives [perceives {perceives ''perceives "perceives -perceives'
  - '"<p}cvs .<p}cvs _<p}cvs ,8p}cvs 8p}cvs -p}cvs'

- - '!perceives @perceives #perceives $perceives %perceives ^perceives &perceives *perceives )perceives _perceives =perceives +perceives ]perceives }perceives \\perceives |perceives .perceives ,perceives ;perceives :perceives ?perceives <perceives >perceives'
  - '!p}cvs `ap}cvs _?p}cvs `sp}cvs .0p}cvs `5p}cvs `&p}cvs "9p}cvs ">p}cvs .-p}cvs "7p}cvs "6p}cvs .>p}cvs _>p}cvs _*p}cvs _|p}cvs 4p}cvs 1p}cvs ;p}cvs0 3p}cvs ;8p}cvs `<p}cvs `>p}cvs'
  - xfail: contraction following special characters is ignored

- - '`perceives ~perceives /perceives'
  - '.*p}cvs `9p}cvs _/p}cvs'
  - xfail: contraction following special characters is ignored

- - 'percvs  (percvs [percvs {percvs ''percvs "percvs -percvs !percvs @percvs #percvs $percvs %percvs ^percvs &percvs *percvs )percvs _percvs =percvs +percvs ]percvs erpercvs \\percvs |percvs .percvs ,percvs ;percvs :percvs ?percvs <percvs >percvs `percvs ~percvs'
  - 'percvs  "<percvs .<percvs _<percvs ,8percvs 8percvs -percvs !percvs `apercvs _?percvs `spercvs .0percvs `5percvs `&percvs "9percvs ">percvs .-percvs "7percvs "6percvs .>percvs erpercvs _*percvs _|percvs 4percvs 1percvs ;percvs0 3percvs ;8percvs `<percvs `>percvs .*percvs `9percvs'
  - xfail: non-contraction of "percvs" conflicts witcv contraction of "perceives"

- - '/percvs'
  - '_/percvs'
  - xfail: non-contraction of "percvs" conflicts witcv contraction of "perceives"

- - 'xl-perceives xl-([{''"perceives l/-perceives l$-perceives'
  - 'xl-p}cvs xl-"<.<{''0p}cvs l/-p}cvs l$-p}cvs'

- - 'xl(perceives xl[perceives xl{perceives xl''perceives xl"perceives xl-=([{''"perceives'
  - 'xl"<p}cvs xl.<p}cvs xl{p}cvs xl''p}cvs xl0p}cvs xl-"7"<.<{''0p}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perceives) perceives] perceives} perceives'' perceives" perceives- perceives, perceives. perceives; perceives: perceives? perceives!'
  - 'p}cvs"> p}cvs.> p}cvs_> p}cvs,0 p}cvs0 p}cvs- p}cvs1 p}cvs4 p}cvs; p}cvs03 p}cvs8 p}cvs!'

- - 'perceives@ perceives# perceives$ perceives% perceives^ perceives& perceives* perceives( perceives_ perceives= perceives+ perceives[ perceives{ perceives\\ perceives| perceives< perceives> perceives` perceives~ perceives/'
  - 'p}cvs`a p}cvs_? p}cvs`s p}cvs.0 p}cvs`5 p}cvs`& p}cvs"9 p}cvs"< p}cvs.- p}cvs"7 p}cvs"6 p}cvs.< p}cvs_< p}cvs_* p}cvs_| p}cvs`< p}cvs`> p}cvs."9 p}cvs`9 p}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'percvs) percvs] percvs} percvs'' percvs" percvs- percvs, percvs. percvs; percvs: percvs? percvs! percvs@ percvs# percvs$ percvs% percvs^ percvs& percvs* percvs( percvs_ percvs= percvs+ percvs[ percvs{ percvs\\ percvs| percvs< percvs> percvs` percvs~ percvs/'
  - 'percvs"> percvs.> percvs_> percvs,0 percvs0 percvs- percvs1 percvs4 percvs; percvs03 percvs8 percvs! percvs`a percvs_? percvs`s percvs.0 percvs`5 percvs`& percvs"9 percvs"< percvs.- percvs"7 percvs"6 percvs.< percvs_< percvs_* percvs_| percvs`< percvs`> percvs."9 percvs`9 percvs/'
  - xfail: non-contraction of "percvs" conflicts with contraction of "perceives"

- - 'perceives-xl perceives-([{''"xl perceives-/xl perceives-$xl'
  - 'p}cvs-xl p}cvs-"<.<{''0xl p}cvs-_/xl p}cvs-`sxl'

- - 'perceives(xl perceives[xl perceives{xl perceives''xl perceives"xl perceives=([{''"-xl perceives([{''"-xl perceives/-xl perceives$-xl'
  - 'p}cvs"<xl p}cvs.<xl p}cvs{xl p}cvs''xl p}cvs0xl p}cvs"7"<.<{''0-xl p}cvs"<.<{''0-xl p}cvs/-xl p}cvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'reperceive (reperceive [reperceive {reperceive ''reperceive "reperceive -reperceive !reperceive @reperceive #reperceive $reperceive %reperceive ^reperceive &reperceive *reperceive )reperceive _reperceive =reperceive +reperceive ]reperceive }reperceive'
  - '"<rep}cv .<rep}cv _<rep}cv ,8rep}cv 8rep}cv -rep}cv !rep}cv `arep}cv _?rep}cv `srep}cv .0rep}cv `5rep}cv `&rep}cv "9rep}cv ">rep}cv .-rep}cv "7rep}cv "6rep}cv .>rep}cv _>rep}cv'
  - xfail: contraction following special characters is ignored

- - '\\reperceive |reperceive .reperceive ,reperceive ;reperceive :reperceive ?reperceive <reperceive >reperceive `reperceive ~reperceive /reperceive'
  - '_*rep}cv _|rep}cv 4rep}cv 1rep}cv ;rep}cv0 3rep}cv ;8rep}cv `<rep}cv `>rep}cv .*rep}cv `9rep}cv _/rep}cv'
  - xfail: contraction following special characters is ignored

- - 'repercv (repercv [repercv {repercv ''repercv "repercv -repercv !repercv @repercv #repercv $repercv %repercv ^repercv &repercv *repercv )repercv _repercv =repercv +repercv ]repercv errepercv \\repercv |repercv .repercv ,repercv ;repercv :repercv ?repercv <repercv'
  - 'repercv "<repercv .<repercv _<repercv ,8repercv 8repercv -repercv !repercv `arepercv _?repercv `srepercv .0repercv `5repercv `&repercv "9repercv ">repercv .-repercv "7repercv "6repercv .>repercv errepercv _*repercv _|repercv 4repercv 1repercv ;repercv0 3repercv ;8repercv `<repercv'
  - xfail: non-contraction of "repercv" conflicts witcv contraction of "reperceive"

- - '>repercv `repercv ~repercv /repercv'
  - '`>repercv .*repercv `9repercv _/repercv'
  - xfail: non-contraction of "repercv" conflicts witcv contraction of "reperceive"

- - 'xl-reperceive xl-([{''"reperceive l/-reperceive l$-reperceive xl(reperceive xl[reperceive xl{reperceive xl''reperceive xl"reperceive xl-=([{''"reperceive'
  - 'xl-rep}cv xl-"<.<{''0rep}cv l/-rep}cv l$-rep}cv xl"<rep}cv xl.<rep}cv xl{rep}cv xl''rep}cv xl0rep}cv xl-"7"<.<{''0rep}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceive) reperceive] reperceive} reperceive'' reperceive" reperceive- reperceive, reperceive. reperceive; reperceive: reperceive? reperceive! reperceive@ reperceive# reperceive$ reperceive% reperceive^ reperceive& reperceive* reperceive( reperceive_'
  - 'rep}cv"> rep}cv.> rep}cv_> rep}cv,0 rep}cv0 rep}cv- rep}cv1 rep}cv4 rep}cv; rep}cv03 rep}cv8 rep}cv! rep}cv`a rep}cv_? rep}cv`s rep}cv.0 rep}cv`5 rep}cv`& rep}cv"9 rep}cv"< rep}cv.-'
  - xfail: contraction followed by special characters is ignored

- - 'reperceive= reperceive+ reperceive[ reperceive{ reperceive\\ reperceive| reperceive< reperceive> reperceive` reperceive~ reperceive/'
  - 'rep}cv"7 rep}cv"6 rep}cv.< rep}cv_< rep}cv_* rep}cv_| rep}cv`< rep}cv`> rep}cv."9 rep}cv`9 rep}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'repercv) repercv] repercv} repercv'' repercv" repercv- repercv, repercv. repercv; repercv: repercv? repercv! repercv@ repercv# repercv$ repercv% repercv^ repercv& repercv* repercv( repercv_ repercv= repercv+ repercv[ repercv{ repercv\\ repercv| repercv< repercv>'
  - 'repercv"> repercv.> repercv_> repercv,0 repercv0 repercv- repercv1 repercv4 repercv; repercv03 repercv8 repercv! repercv`a repercv_? repercv`s repercv.0 repercv`5 repercv`& repercv"9 repercv"< repercv.- repercv"7 repercv"6 repercv.< repercv_< repercv_* repercv_| repercv`< repercv>'
  - xfail: non-contraction of "repercv" conflicts with contraction of "reperceive"

- - 'repercv` repercv~ repercv/'
  - 'repercv."9 repercv`9 repercv/'
  - xfail: non-contraction of "repercv" conflicts with contraction of "reperceive"

- - 'reperceive-xl reperceive-([{''"xl reperceive-/xl reperceive-$xl reperceive(xl reperceive[xl reperceive{xl reperceive''xl reperceive"xl reperceive=([{''"-xl reperceive([{''"-xl reperceive/-xl reperceive$-xl'
  - 'rep}cv-xl rep}cv-"<.<{''0xl rep}cv-_/xl rep}cv-`sxl rep}cv"<xl rep}cv.<xl rep}cv{xl rep}cv''xl rep}cv0xl rep}cv"7"<.<{''0-xl rep}cv"<.<{''0-xl rep}cv/-xl rep}cv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceived [reperceived {reperceived ''reperceived "reperceived -reperceived !reperceived @reperceived #reperceived $reperceived %reperceived ^reperceived &reperceived *reperceived )reperceived _reperceived =reperceived +reperceived ]reperceived }reperceived'
  - '"<rep}cvd .<rep}cvd _<rep}cvd ,8rep}cvd 8rep}cvd -rep}cvd !rep}cvd `arep}cvd _?rep}cvd $rep}cvd .0rep}cvd `5rep}cvd `&rep}cvd "9rep}cvd ">rep}cvd .-rep}cvd "7rep}cvd "6rep}cvd .>rep}cvd _>rep}cvd'
  - xfail: contraction following special characters is ignored

- - '\\reperceived |reperceived .reperceived ,reperceived ;reperceived :reperceived ?reperceived <reperceived >reperceived `reperceived ~reperceived /reperceived'
  - '_*rep}cvd _|rep}cvd 4rep}cvd 1rep}cvd ;rep}cvd0 3rep}cvd ;8rep}cvd `<rep}cvd `>rep}cvd .*rep}cvd `9rep}cvd _/rep}cvd'
  - xfail: contraction following special characters is ignored

- - 'repercvd  (repercvd [repercvd {repercvd ''repercvd "repercvd -repercvd !repercvd @repercvd #repercvd $repercvd %repercvd ^repercvd &repercvd *repercvd )repercvd _repercvd =repercvd +repercvd ]repercvd errepercvd \\repercvd |repercvd .repercvd ,repercvd ;repercvd'
  - 'repercvd  "<repercvd .<repercvd _<repercvd ,8repercvd 8repercvd -repercvd !repercvd `arepercvd _?repercvd `srepercvd .0repercvd `5repercvd `&repercvd "9repercvd ">repercvd .-repercvd "7repercvd "6repercvd .>repercvd errepercvd _*repercvd _|repercvd 4repercvd 1repercvd ;repercvd'
  - xfail: non-contraction of "repercvd" conflicts witcv contraction of "reperceived"

- - ':repercvd ?repercvd <repercvd >repercvd `repercvd ~repercvd /repercvd'
  - '8 3repercvd ;8repercvd `<repercvd `>repercvd .*repercvd `9repercvd _/repercvd'
  - xfail: non-contraction of "repercvd" conflicts witcv contraction of "reperceived"

- - 'xl-reperceived xl-([{''"reperceived l/-reperceived l$-reperceived xl(reperceived xl[reperceived xl{reperceived xl''reperceived xl"reperceived xl-=([{''"reperceived'
  - 'xl-rep}cvd xl-"<.<{''0rep}cvd l/-rep}cvd l$-rep}cvd xl"<rep}cvd xl.<rep}cvd xl{rep}cvd xl''rep}cvd xl0rep}cvd xl-"7"<.<{''0rep}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceived) reperceived] reperceived} reperceived'' reperceived" reperceived- reperceived, reperceived. reperceived; reperceived: reperceived? reperceived! reperceived@ reperceived# reperceived$ reperceived% reperceived^ reperceived& reperceived* reperceived('
  - 'rep}cvd"> rep}cvd.> rep}cvd_> rep}cvd,0 rep}cvd0 rep}cvd- rep}cvd1 rep}cvd4 rep}cvd; rep}cvd03 rep}cvd8 rep}cvd! rep}cvd`a rep}cvd_? rep}cvd`s rep}cvd.0 rep}cvd`5 rep}cvd`& rep}cvd"9 rep}cvd"< rep}cvd.- rep}cvd"7 rep}cvd"6 rep}cvd.< rep}cvd_< rep}cvd_* rep}cvd_| rep}cvd<'
  - xfail: contraction followed by special characters is ignored

- - 'reperceived_ reperceived= reperceived+ reperceived[ reperceived{ reperceived\\ reperceived| reperceived< reperceived> reperceived` reperceived~ reperceived/'
  - 'rep}cvd`> rep}cvd."9 rep}cvd`9 rep}cvd/'
  - xfail: contraction followed by special characters is ignored
  
- - 'repercvd) repercvd] repercvd} repercvd'' repercvd" repercvd- repercvd, repercvd. repercvd; repercvd: repercvd? repercvd! repercvd@ repercvd# repercvd$ repercvd% repercvd^ repercvd& repercvd* repercvd( repercvd_ repercvd= repercvd+ repercvd[ repercvd{ repercvd\\'
  - 'repercvd"> repercvd.> repercvd_> repercvd,0 repercvd0 repercvd- repercvd1 repercvd4 repercvd; repercvd03 repercvd8 repercvd! repercvd`a repercvd_? repercvd`s repercvd.0 repercvd`5 repercvd`& repercvd"9 repercvd"< repercvd.- repercvd"7 repercvd"6 repercvd.< repercvd_< repercvd_*'
  - xfail: non-contraction of "repercvd" conflicts with contraction of "reperceived"

- - 'repercvd| repercvd< repercvd> repercvd` repercvd~ repercvd/'
  - 'repercvd_| repercvd`< repercvd`> repercvd."9 repercvd`9 repercvd/'
  - xfail: non-contraction of "repercvd" conflicts with contraction of "reperceived"

- - 'reperceived-xl reperceived-([{''"xl reperceived-/xl reperceived-$xl reperceived(xl reperceived[xl reperceived{xl reperceived''xl reperceived"xl reperceived=([{''"-xl reperceived([{''"-xl reperceived/-xl reperceived$-xl'
  - 'rep}cvd-xl rep}cvd-"<.<{''0xl rep}cvd-_/xl rep}cvd-`sxl rep}cvd"<xl rep}cvd.<xl rep}cvd{xl rep}cvd''xl rep}cvd0xl rep}cvd"7"<.<{''0-xl rep}cvd"<.<{''0-xl rep}cvd/-xl rep}cvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceiving [reperceiving {reperceiving ''reperceiving "reperceiving -reperceiving !reperceiving @reperceiving #reperceiving $reperceiving %reperceiving ^reperceiving &reperceiving *reperceiving )reperceiving _reperceiving =reperceiving +reperceiving'
  - '"<rep}cvg .<rep}cvg _<rep}cvg ,8rep}cvg 8rep}cvg -rep}cvg !rep}cvg `arep}cvg _?rep}cvg `srep}cvg .0rep}cvg `5rep}cvg `&rep}cvg "9rep}cvg ">rep}cvg .-rep}cvg "7rep}cvg +rep}cvg'
  - xfail: contraction following special characters is ignored

- - ']reperceiving }reperceiving \\reperceiving |reperceiving .reperceiving ,reperceiving ;reperceiving :reperceiving ?reperceiving <reperceiving >reperceiving `reperceiving ~reperceiving /reperceiving'
  - '.>rep}cvg _>rep}cvg _*rep}cvg _|rep}cvg 4rep}cvg 1rep}cvg ;rep}cvg0 3rep}cvg ;8rep}cvg `<rep}cvg `>rep}cvg .*rep}cvg `9rep}cvg _/rep}cvg'
  - xfail: contraction following special characters is ignored

- - 'repercvg (repercvg [repercvg {repercvg ''repercvg "repercvg -repercvg !repercvg @repercvg #repercvg $repercvg %repercvg ^repercvg &repercvg *repercvg )repercvg _repercvg =repercvg +repercvg ]repercvg errepercvg \\repercvg |repercvg .repercvg ,repercvg ;repercvg'
  - 'repercvg "<repercvg .<repercvg _<repercvg ,8repercvg 8repercvg -repercvg !repercvg `arepercvg _?repercvg `srepercvg .0repercvg `5repercvg `&repercvg "9repercvg ">repercvg .-repercvg "7repercvg "6repercvg .>repercvg errepercvg _*repercvg _|repercvg 4repercvg 1repercvg ;repercvg'
  - xfail: non-contraction of "repercvg" conflicts witcv contraction of "reperceiving"

- - ':repercvg ?repercvg <repercvg >repercvg `repercvg ~repercvg /repercvg'
  - '8 3repercvg ;8repercvg `<repercvg `>repercvg .*repercvg `9repercvg _/repercvg'
  - xfail: non-contraction of "repercvg" conflicts witcv contraction of "reperceiving"

- - 'xl-reperceiving xl-([{''"reperceiving l/-reperceiving l$-reperceiving xl(reperceiving xl[reperceiving xl{reperceiving xl''reperceiving xl"reperceiving xl-=([{''"reperceiving'
  - 'xl-rep}cvg xl-"<.<{''0rep}cvg l/-rep}cvg l$-rep}cvg xl"<rep}cvg xl.<rep}cvg xl{rep}cvg xl''rep}cvg xl0rep}cvg xl-"7"<.<{''0rep}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceiving) reperceiving] reperceiving} reperceiving'' reperceiving" reperceiving- reperceiving, reperceiving. reperceiving; reperceiving: reperceiving? reperceiving! reperceiving@ reperceiving# reperceiving$ reperceiving% reperceiving^ reperceiving&'
  - 'rep}cvg"> rep}cvg.> rep}cvg_> rep}cvg,0 rep}cvg0 rep}cvg- rep}cvg1 rep}cvg4 rep}cvg; rep}cvg03 rep}cvg8 rep}cvg! rep}cvg`a rep}cvg_? rep}cvg`s rep}cvg.0 rep}cvg`5 rep}cvg`&'
  - xfail: contraction followed by special characters is ignored

- - 'reperceiving* reperceiving( reperceiving_ reperceiving= reperceiving+ reperceiving[ reperceiving{ reperceiving\\ reperceiving| reperceiving< reperceiving> reperceiving` reperceiving~ reperceiving/'
  - 'rep}cvg"9 rep}cvg"< rep}cvg.- rep}cvg"7 rep}cvg+ rep}cvg.< rep}cvg_< rep}cvg_* rep}cvg_| rep}cvg`< rep}cvg`> rep}cvg."9 rep}cvg`9 rep}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'repercvg) repercvg] repercvg} repercvg'' repercvg" repercvg- repercvg, repercvg. repercvg; repercvg: repercvg? repercvg! repercvg@ repercvg# repercvg$ repercvg% repercvg^ repercvg& repercvg* repercvg( repercvg_ repercvg= repercvg+ repercvg[ repercvg{ repercvg\\'
  - 'repercvg"> repercvg.> repercvg_> repercvg,0 repercvg0 repercvg- repercvg1 repercvg4 repercvg; repercvg03 repercvg8 repercvg! repercvg`a repercvg_? repercvg`s repercvg.0 repercvg`5 repercvg`& repercvg"9 repercvg"< repercvg.- repercvg"7 repercvg"6 repercvg.< repercvg_< repercvg_*'
  - xfail: non-contraction of "repercvg" conflicts with contraction of "reperceiving"

- - 'repercvg| repercvg< repercvg> repercvg` repercvg~ repercvg/'
  - 'repercvg_| repercvg`< repercvg`> repercvg."9 repercvg`9 repercvg/'
  - xfail: non-contraction of "repercvg" conflicts with contraction of "reperceiving"

- - 'reperceiving-xl reperceiving-([{''"xl reperceiving-/xl reperceiving-$xl reperceiving(xl reperceiving[xl reperceiving{xl reperceiving''xl reperceiving"xl reperceiving=([{''"-xl reperceiving([{''"-xl reperceiving/-xl reperceiving$-xl'
  - 'rep}cvg-xl rep}cvg-"<.<{''0xl rep}cvg-_/xl rep}cvg-`sxl rep}cvg"<xl rep}cvg.<xl rep}cvg{xl rep}cvg''xl rep}cvg0xl rep}cvg"7"<.<{''0-xl rep}cvg"<.<{''0-xl rep}cvg/-xl rep}cvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(reperceives [reperceives {reperceives ''reperceives "reperceives -reperceives !reperceives @reperceives #reperceives $reperceives %reperceives ^reperceives &reperceives *reperceives )reperceives _reperceives =reperceives +reperceives ]reperceives }reperceives'
  - '"<rep}cvs .<rep}cvs _<rep}cvs ,8rep}cvs 8rep}cvs -rep}cvs !rep}cvs `arep}cvs _?rep}cvs `srep}cvs .0rep}cvs `5rep}cvs `&rep}cvs "9rep}cvs ">rep}cvs .-rep}cvs "7rep}cvs "6rep}cvs .>rep}cvs _>rep}cvs'
  - xfail: contraction following special characters is ignored

- - '\\reperceives |reperceives .reperceives ,reperceives ;reperceives :reperceives ?reperceives <reperceives >reperceives `reperceives ~reperceives /reperceives'
  - '_*rep}cvs _|rep}cvs 4rep}cvs 1rep}cvs ;rep}cvs0 3rep}cvs ;8rep}cvs `<rep}cvs `>rep}cvs .*rep}cvs `9rep}cvs _/rep}cvs'
  - xfail: contraction following special characters is ignored

- - 'repercvs  (repercvs [repercvs {repercvs ''repercvs "repercvs -repercvs !repercvs @repercvs #repercvs $repercvs %repercvs ^repercvs &repercvs *repercvs )repercvs _repercvs =repercvs +repercvs ]repercvs errepercvs \\repercvs |repercvs .repercvs ,repercvs ;repercvs'
  - 'repercvs  "<repercvs .<repercvs _<repercvs ,8repercvs 8repercvs -repercvs !repercvs `arepercvs _?repercvs `srepercvs .0repercvs `5repercvs `&repercvs "9repercvs ">repercvs .-repercvs "7repercvs "6repercvs .>repercvs errepercvs _*repercvs _|repercvs 4repercvs 1repercvs ;repercvs'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - ':repercvs ?repercvs <repercvs >repercvs `repercvs ~repercvs /repercvs'
  - '8 3repercvs ;8repercvs `<repercvs `>repercvs .*repercvs `9repercvs _/repercvs'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - 'xl-reperceives xl-([{''"reperceives l/-reperceives l$-reperceives xl(reperceives xl[reperceives xl{reperceives xl''reperceives xl"reperceives xl-=([{''"reperceives'
  - 'xl-rep}cvs xl-"<.<{''0rep}cvs l/-rep}cvs l$-rep}cvs xl"<rep}cvs xl.<rep}cvs xl{rep}cvs xl''rep}cvs xl0rep}cvs xl-"7"<.<{''0rep}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'reperceives) reperceives] reperceives} reperceives'' reperceives" reperceives- reperceives, reperceives. reperceives; reperceives: reperceives? reperceives! reperceives@ reperceives# reperceives$ reperceives% reperceives^ reperceives& reperceives* reperceives('
  - 'rep}cvs"> rep}cvs.> rep}cvs_> rep}cvs,0 rep}cvs0 rep}cvs- rep}cvs1 rep}cvs4 rep}cvs; rep}cvs03 rep}cvs8 rep}cvs! rep}cvs`a rep}cvs_? rep}cvs`s rep}cvs.0 rep}cvs`5 rep}cvs`& rep}cvs"9 rep}cvs"< rep}cvs.- rep}cvs"7 rep}cvs"6 rep}cvs.< rep}cvs_< rep}cvs_* rep}cvs_| rep}cvs<'
  - xfail: contraction followed by special characters is ignored

- - 'reperceives_ reperceives= reperceives+ reperceives[ reperceives{ reperceives\\ reperceives| reperceives< reperceives> reperceives` reperceives~ reperceives/'
  - 'rep}cvs`> rep}cvs."9 rep}cvs`9 rep}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'repercvs) repercvs] repercvs} repercvs'' repercvs" repercvs- repercvs, repercvs. repercvs; repercvs: repercvs? repercvs! repercvs@ repercvs# repercvs$ repercvs% repercvs^ repercvs& repercvs* repercvs( repercvs_ repercvs= repercvs+ repercvs[ repercvs{ repercvs\\'
  - 'repercvs"> repercvs.> repercvs_> repercvs,0 repercvs0 repercvs- repercvs1 repercvs4 repercvs; repercvs03 repercvs8 repercvs! repercvs`a repercvs_? repercvs`s repercvs.0 repercvs`5 repercvs`& repercvs"9 repercvs"< repercvs.- repercvs"7 repercvs"6 repercvs.< repercvs_< repercvs_*'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - 'repercvs| repercvs< repercvs> repercvs` repercvs~ repercvs/'
  - 'repercvs_| repercvs`< repercvs`> repercvs."9 repercvs`9 repercvs/'
  - xfail: non-contraction of "repercvs" conflicts with contraction of "reperceives"

- - 'reperceives-xl reperceives-([{''"xl reperceives-/xl reperceives-$xl reperceives(xl reperceives[xl reperceives{xl reperceives''xl reperceives"xl reperceives=([{''"-xl reperceives([{''"-xl reperceives/-xl reperceives$-xl'
  - 'rep}cvs-xl rep}cvs-"<.<{''0xl rep}cvs-_/xl rep}cvs-`sxl rep}cvs"<xl rep}cvs.<xl rep}cvs{xl rep}cvs''xl rep}cvs0xl rep}cvs"7"<.<{''0-xl rep}cvs"<.<{''0-xl rep}cvs/-xl rep}cvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceive [unperceive {unperceive ''unperceive "unperceive -unperceive'
  - '"<unp}cv .<unp}cv _<unp}cv ,8unp}cv 8unp}cv -unp}cv'

- - '!unperceive @unperceive #unperceive $unperceive %unperceive ^unperceive &unperceive *unperceive )unperceive _unperceive =unperceive +unperceive ]unperceive }unperceive \\unperceive |unperceive .unperceive ,unperceive ;unperceive :unperceive ?unperceive'
  - '!unp}cv `aunp}cv _?unp}cv `sunp}cv .0unp}cv `5unp}cv `&unp}cv "9unp}cv ">unp}cv .-unp}cv "7unp}cv "6unp}cv .>unp}cv _>unp}cv _*unp}cv _|unp}cv 4unp}cv 1unp}cv ;unp}cv0 3unp}cv ;8unp}cv'
  - xfail: contraction following special characters is ignored

- - '<unperceive >unperceive `unperceive ~unperceive /unperceive'
  - '`<unp}cv `>unp}cv .*unp}cv `9unp}cv _/unp}cv'
  - xfail: contraction following special characters is ignored

- - 'unpercv (unpercv [unpercv {unpercv ''unpercv "unpercv -unpercv !unpercv @unpercv #unpercv $unpercv %unpercv ^unpercv &unpercv *unpercv )unpercv _unpercv =unpercv +unpercv ]unpercv erunpercv \\unpercv |unpercv .unpercv ,unpercv ;unpercv :unpercv ?unpercv <unpercv'
  - 'unpercv "<unpercv .<unpercv _<unpercv ,8unpercv 8unpercv -unpercv !unpercv `aunpercv _?unpercv `sunpercv .0unpercv `5unpercv `&unpercv "9unpercv ">unpercv .-unpercv "7unpercv "6unpercv .>unpercv erunpercv _*unpercv _|unpercv 4unpercv 1unpercv ;unpercv0 3unpercv ;8unpercv `<unpercv'
  - xfail: non-contraction of "unpercv" conflicts witcv contraction of "unperceive"

- - '>unpercv `unpercv ~unpercv /unpercv'
  - '`>unpercv .*unpercv `9unpercv _/unpercv'
  - xfail: non-contraction of "unpercv" conflicts witcv contraction of "unperceive"

- - 'xl-unperceive xl-([{''"unperceive l/-unperceive l$-unperceive'
  - 'xl-unp}cv xl-"<.<{''0unp}cv l/-unp}cv l$-unp}cv'

- - 'xl(unperceive xl[unperceive xl{unperceive xl''unperceive xl"unperceive xl-=([{''"unperceive'
  - 'xl"<unp}cv xl.<unp}cv xl{unp}cv xl''unp}cv xl0unp}cv xl-"7"<.<{''0unp}cv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceive) unperceive] unperceive} unperceive'' unperceive" unperceive- unperceive, unperceive. unperceive; unperceive: unperceive? unperceive!'
  - 'unp}cv"> unp}cv.> unp}cv_> unp}cv,0 unp}cv0 unp}cv- unp}cv1 unp}cv4 unp}cv; unp}cv03 unp}cv8 unp}cv!'

- - 'unperceive@ unperceive# unperceive$ unperceive% unperceive^ unperceive& unperceive* unperceive( unperceive_ unperceive= unperceive+ unperceive[ unperceive{ unperceive\\ unperceive| unperceive< unperceive> unperceive` unperceive~ unperceive/'
  - 'unp}cv`a unp}cv_? unp}cv`s unp}cv.0 unp}cv`5 unp}cv`& unp}cv"9 unp}cv"< unp}cv.- unp}cv"7 unp}cv"6 unp}cv.< unp}cv_< unp}cv_* unp}cv_| unp}cv`< unp}cv`> unp}cv."9 unp}cv`9 unp}cv/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercv) unpercv] unpercv} unpercv'' unpercv" unpercv- unpercv, unpercv. unpercv; unpercv: unpercv? unpercv! unpercv@ unpercv# unpercv$ unpercv% unpercv^ unpercv& unpercv* unpercv( unpercv_ unpercv= unpercv+ unpercv[ unpercv{ unpercv\\ unpercv| unpercv< unpercv>'
  - 'unpercv"> unpercv.> unpercv_> unpercv,0 unpercv0 unpercv- unpercv1 unpercv4 unpercv; unpercv03 unpercv8 unpercv! unpercv`a unpercv_? unpercv`s unpercv.0 unpercv`5 unpercv`& unpercv"9 unpercv"< unpercv.- unpercv"7 unpercv"6 unpercv.< unpercv_< unpercv_* unpercv_| unpercv`< unpercv>'
  - xfail: non-contraction of "unpercv" conflicts with contraction of "unperceive"

- - 'unpercv` unpercv~ unpercv/'
  - 'unpercv."9 unpercv`9 unpercv/'
  - xfail: non-contraction of "unpercv" conflicts with contraction of "unperceive"

- - 'unperceive-xl unperceive-([{''"xl unperceive-/xl unperceive-$xl'
  - 'unp}cv-xl unp}cv-"<.<{''0xl unp}cv-_/xl unp}cv-`sxl'

- - 'unperceive(xl unperceive[xl unperceive{xl unperceive''xl unperceive"xl unperceive=([{''"-xl unperceive([{''"-xl unperceive/-xl unperceive$-xl'
  - 'unp}cv"<xl unp}cv.<xl unp}cv{xl unp}cv''xl unp}cv0xl unp}cv"7"<.<{''0-xl unp}cv"<.<{''0-xl unp}cv/-xl unp}cv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceived [unperceived {unperceived ''unperceived "unperceived -unperceived'
  - '"<unp}cvd .<unp}cvd _<unp}cvd ,8unp}cvd 8unp}cvd -unp}cvd'

- - '!unperceived @unperceived #unperceived $unperceived %unperceived ^unperceived &unperceived *unperceived )unperceived _unperceived =unperceived +unperceived ]unperceived }unperceived \\unperceived |unperceived .unperceived ,unperceived ;unperceived :unperceived'
  - '!unp}cvd `aunp}cvd _?unp}cvd $unp}cvd .0unp}cvd `5unp}cvd `&unp}cvd "9unp}cvd ">unp}cvd .-unp}cvd "7unp}cvd "6unp}cvd .>unp}cvd _>unp}cvd _*unp}cvd _|unp}cvd 4unp}cvd 1unp}cvd ;unp}cvd0 3unp}cvd'
  - xfail: contraction following special characters is ignored

- - '?unperceived <unperceived >unperceived `unperceived ~unperceived /unperceived'
  - ';8unp}cvd `<unp}cvd `>unp}cvd .*unp}cvd `9unp}cvd _/unp}cvd'
  - xfail: contraction following special characters is ignored

- - 'unpercvd  (unpercvd [unpercvd {unpercvd ''unpercvd "unpercvd -unpercvd !unpercvd @unpercvd #unpercvd $unpercvd %unpercvd ^unpercvd &unpercvd *unpercvd )unpercvd _unpercvd =unpercvd +unpercvd ]unpercvd erunpercvd \\unpercvd |unpercvd .unpercvd ,unpercvd ;unpercvd'
  - 'unpercvd  "<unpercvd .<unpercvd _<unpercvd ,8unpercvd 8unpercvd -unpercvd !unpercvd `aunpercvd _?unpercvd `sunpercvd .0unpercvd `5unpercvd `&unpercvd "9unpercvd ">unpercvd .-unpercvd "7unpercvd "6unpercvd .>unpercvd erunpercvd _*unpercvd _|unpercvd 4unpercvd 1unpercvd ;unpercvd'
  - xfail: non-contraction of "unpercvd" conflicts witcv contraction of "unperceived"

- - ':unpercvd ?unpercvd <unpercvd >unpercvd `unpercvd ~unpercvd /unpercvd'
  - '8 3unpercvd ;8unpercvd `<unpercvd `>unpercvd .*unpercvd `9unpercvd _/unpercvd'
  - xfail: non-contraction of "unpercvd" conflicts witcv contraction of "unperceived"

- - 'xl-unperceived xl-([{''"unperceived l/-unperceived l$-unperceived'
  - 'xl-unp}cvd xl-"<.<{''0unp}cvd l/-unp}cvd l$-unp}cvd'

- - 'xl(unperceived xl[unperceived xl{unperceived xl''unperceived xl"unperceived xl-=([{''"unperceived'
  - 'xl"<unp}cvd xl.<unp}cvd xl{unp}cvd xl''unp}cvd xl0unp}cvd xl-"7"<.<{''0unp}cvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceived) unperceived] unperceived} unperceived'' unperceived" unperceived- unperceived, unperceived. unperceived; unperceived: unperceived? unperceived!'
  - 'unp}cvd"> unp}cvd.> unp}cvd_> unp}cvd,0 unp}cvd0 unp}cvd- unp}cvd1 unp}cvd4 unp}cvd; unp}cvd03 unp}cvd8 unp}cvd!'

- - 'unperceived@ unperceived# unperceived$ unperceived% unperceived^ unperceived& unperceived* unperceived( unperceived_ unperceived= unperceived+ unperceived[ unperceived{ unperceived\\ unperceived| unperceived< unperceived> unperceived` unperceived~ unperceived/'
  - 'unp}cvd`a unp}cvd_? unp}cvd`s unp}cvd.0 unp}cvd`5 unp}cvd`& unp}cvd"9 unp}cvd"< unp}cvd.- unp}cvd"7 unp}cvd"6 unp}cvd.< unp}cvd_< unp}cvd_* unp}cvd_| unp}cvd`< unp}cvd`> unp}cvd."9 unp}cvd`9 unp}cvd/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvd) unpercvd] unpercvd} unpercvd'' unpercvd" unpercvd- unpercvd, unpercvd. unpercvd; unpercvd: unpercvd? unpercvd! unpercvd@ unpercvd# unpercvd$ unpercvd% unpercvd^ unpercvd& unpercvd* unpercvd( unpercvd_ unpercvd= unpercvd+ unpercvd[ unpercvd{ unpercvd\\'
  - 'unpercvd"> unpercvd.> unpercvd_> unpercvd,0 unpercvd0 unpercvd- unpercvd1 unpercvd4 unpercvd; unpercvd03 unpercvd8 unpercvd! unpercvd`a unpercvd_? unpercvd`s unpercvd.0 unpercvd`5 unpercvd`& unpercvd"9 unpercvd"< unpercvd.- unpercvd"7 unpercvd"6 unpercvd.< unpercvd_< unpercvd_*'
  - xfail: non-contraction of "unpercvd" conflicts with contraction of "unperceived"

- - 'unpercvd| unpercvd< unpercvd> unpercvd` unpercvd~ unpercvd/'
  - 'unpercvd_| unpercvd`< unpercvd`> unpercvd."9 unpercvd`9 unpercvd/'
  - xfail: non-contraction of "unpercvd" conflicts with contraction of "unperceived"

- - 'unperceived-xl unperceived-([{''"xl unperceived-/xl unperceived-$xl'
  - 'unp}cvd-xl unp}cvd-"<.<{''0xl unp}cvd-_/xl unp}cvd-`sxl'

- - 'unperceived(xl unperceived[xl unperceived{xl unperceived''xl unperceived"xl unperceived=([{''"-xl unperceived([{''"-xl unperceived/-xl unperceived$-xl'
  - 'unp}cvd"<xl unp}cvd.<xl unp}cvd{xl unp}cvd''xl unp}cvd0xl unp}cvd"7"<.<{''0-xl unp}cvd"<.<{''0-xl unp}cvd/-xl unp}cvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceiving [unperceiving {unperceiving ''unperceiving "unperceiving -unperceiving'
  - '"<unp}cvg .<unp}cvg _<unp}cvg ,8unp}cvg 8unp}cvg -unp}cvg'

- - '!unperceiving @unperceiving #unperceiving $unperceiving %unperceiving ^unperceiving &unperceiving *unperceiving )unperceiving _unperceiving =unperceiving +unperceiving ]unperceiving }unperceiving \\unperceiving |unperceiving .unperceiving ,unperceiving'
  - '!unp}cvg `aunp}cvg _?unp}cvg `sunp}cvg .0unp}cvg `5unp}cvg `&unp}cvg "9unp}cvg ">unp}cvg .-unp}cvg "7unp}cvg +unp}cvg .>unp}cvg _>unp}cvg _*unp}cvg _|unp}cvg 4unp}cvg 1unp}cvg'
  - xfail: contraction following special characters is ignored

- - ';unperceiving :unperceiving ?unperceiving <unperceiving >unperceiving `unperceiving ~unperceiving /unperceiving'
  - ';unp}cvg0 3unp}cvg ;8unp}cvg `<unp}cvg `>unp}cvg .*unp}cvg `9unp}cvg _/unp}cvg'
  - xfail: contraction following special characters is ignored

- - 'unpercvg (unpercvg [unpercvg {unpercvg ''unpercvg "unpercvg -unpercvg !unpercvg @unpercvg #unpercvg $unpercvg %unpercvg ^unpercvg &unpercvg *unpercvg )unpercvg _unpercvg =unpercvg +unpercvg ]unpercvg erunpercvg \\unpercvg |unpercvg .unpercvg ,unpercvg ;unpercvg'
  - 'unpercvg "<unpercvg .<unpercvg _<unpercvg ,8unpercvg 8unpercvg -unpercvg !unpercvg `aunpercvg _?unpercvg `sunpercvg .0unpercvg `5unpercvg `&unpercvg "9unpercvg ">unpercvg .-unpercvg "7unpercvg "6unpercvg .>unpercvg erunpercvg _*unpercvg _|unpercvg 4unpercvg 1unpercvg ;unpercvg'
  - xfail: non-contraction of "unpercvg" conflicts witcv contraction of "unperceiving"

- - ':unpercvg ?unpercvg <unpercvg >unpercvg `unpercvg ~unpercvg /unpercvg'
  - '8 3unpercvg ;8unpercvg `<unpercvg `>unpercvg .*unpercvg `9unpercvg _/unpercvg'
  - xfail: non-contraction of "unpercvg" conflicts witcv contraction of "unperceiving"

- - 'xl-unperceiving xl-([{''"unperceiving l/-unperceiving l$-unperceiving'
  - 'xl-unp}cvg xl-"<.<{''0unp}cvg l/-unp}cvg l$-unp}cvg'

- - 'xl(unperceiving xl[unperceiving xl{unperceiving xl''unperceiving xl"unperceiving xl-=([{''"unperceiving'
  - 'xl"<unp}cvg xl.<unp}cvg xl{unp}cvg xl''unp}cvg xl0unp}cvg xl-"7"<.<{''0unp}cvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceiving) unperceiving] unperceiving} unperceiving'' unperceiving" unperceiving- unperceiving, unperceiving. unperceiving; unperceiving: unperceiving? unperceiving!'
  - 'unp}cvg"> unp}cvg.> unp}cvg_> unp}cvg,0 unp}cvg0 unp}cvg- unp}cvg1 unp}cvg4 unp}cvg; unp}cvg03 unp}cvg8 unp}cvg!'

- - 'unperceiving@ unperceiving# unperceiving$ unperceiving% unperceiving^ unperceiving& unperceiving* unperceiving( unperceiving_ unperceiving= unperceiving+ unperceiving[ unperceiving{ unperceiving\\ unperceiving| unperceiving< unperceiving> unperceiving`'
  - 'unp}cvg`a unp}cvg_? unp}cvg`s unp}cvg.0 unp}cvg`5 unp}cvg`& unp}cvg"9 unp}cvg"< unp}cvg.- unp}cvg"7 unp}cvg+ unp}cvg.< unp}cvg_< unp}cvg_* unp}cvg_| unp}cvg`< unp}cvg`> unp}cvg.*'
  - xfail: contraction followed by special characters is ignored

- - 'unperceiving~ unperceiving/'
  - 'unp}cvg`9 unp}cvg/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvg) unpercvg] unpercvg} unpercvg'' unpercvg" unpercvg- unpercvg, unpercvg. unpercvg; unpercvg: unpercvg? unpercvg! unpercvg@ unpercvg# unpercvg$ unpercvg% unpercvg^ unpercvg& unpercvg* unpercvg( unpercvg_ unpercvg= unpercvg+ unpercvg[ unpercvg{ unpercvg\\'
  - 'unpercvg"> unpercvg.> unpercvg_> unpercvg,0 unpercvg0 unpercvg- unpercvg1 unpercvg4 unpercvg; unpercvg03 unpercvg8 unpercvg! unpercvg`a unpercvg_? unpercvg`s unpercvg.0 unpercvg`5 unpercvg`& unpercvg"9 unpercvg"< unpercvg.- unpercvg"7 unpercvg"6 unpercvg.< unpercvg_< unpercvg_*'
  - xfail: non-contraction of "unpercvg" conflicts with contraction of "unperceiving"

- - 'unpercvg| unpercvg< unpercvg> unpercvg` unpercvg~ unpercvg/'
  - 'unpercvg_| unpercvg`< unpercvg`> unpercvg."9 unpercvg`9 unpercvg/'
  - xfail: non-contraction of "unpercvg" conflicts with contraction of "unperceiving"

- - 'unperceiving-xl unperceiving-([{''"xl unperceiving-/xl unperceiving-$xl'
  - 'unp}cvg-xl unp}cvg-"<.<{''0xl unp}cvg-_/xl unp}cvg-`sxl'

- - 'unperceiving(xl unperceiving[xl unperceiving{xl unperceiving''xl unperceiving"xl unperceiving=([{''"-xl unperceiving([{''"-xl unperceiving/-xl unperceiving$-xl'
  - 'unp}cvg"<xl unp}cvg.<xl unp}cvg{xl unp}cvg''xl unp}cvg0xl unp}cvg"7"<.<{''0-xl unp}cvg"<.<{''0-xl unp}cvg/-xl unp}cvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unperceives [unperceives {unperceives ''unperceives "unperceives -unperceives'
  - '"<unp}cvs .<unp}cvs _<unp}cvs ,8unp}cvs 8unp}cvs -unp}cvs'

- - '!unperceives @unperceives #unperceives $unperceives %unperceives ^unperceives &unperceives *unperceives )unperceives _unperceives =unperceives +unperceives ]unperceives }unperceives \\unperceives |unperceives .unperceives ,unperceives ;unperceives :unperceives'
  - '!unp}cvs `aunp}cvs _?unp}cvs `sunp}cvs .0unp}cvs `5unp}cvs `&unp}cvs "9unp}cvs ">unp}cvs .-unp}cvs "7unp}cvs "6unp}cvs .>unp}cvs _>unp}cvs _*unp}cvs _|unp}cvs 4unp}cvs 1unp}cvs ;unp}cvs0 3unp}cvs'
  - xfail: contraction following special characters is ignored

- - '?unperceives <unperceives >unperceives `unperceives ~unperceives /unperceives'
  - ';8unp}cvs `<unp}cvs `>unp}cvs .*unp}cvs `9unp}cvs _/unp}cvs'
  - xfail: contraction following special characters is ignored

- - 'unpercvs  (unpercvs [unpercvs {unpercvs ''unpercvs "unpercvs -unpercvs !unpercvs @unpercvs #unpercvs $unpercvs %unpercvs ^unpercvs &unpercvs *unpercvs )unpercvs _unpercvs =unpercvs +unpercvs ]unpercvs erunpercvs \\unpercvs |unpercvs .unpercvs ,unpercvs ;unpercvs'
  - 'unpercvs  "<unpercvs .<unpercvs _<unpercvs ,8unpercvs 8unpercvs -unpercvs !unpercvs `aunpercvs _?unpercvs `sunpercvs .0unpercvs `5unpercvs `&unpercvs "9unpercvs ">unpercvs .-unpercvs "7unpercvs "6unpercvs .>unpercvs erunpercvs _*unpercvs _|unpercvs 4unpercvs 1unpercvs ;unpercvs'
  - xfail: non-contraction of "unpercvs" conflicts witcv contraction of "unperceives"

- - ':unpercvs ?unpercvs <unpercvs >unpercvs `unpercvs ~unpercvs /unpercvs'
  - '8 3unpercvs ;8unpercvs `<unpercvs `>unpercvs .*unpercvs `9unpercvs _/unpercvs'
  - xfail: non-contraction of "unpercvs" conflicts witcv contraction of "unperceives"

- - 'xl-unperceives xl-([{''"unperceives l/-unperceives l$-unperceives'
  - 'xl-unp}cvs xl-"<.<{''0unp}cvs l/-unp}cvs l$-unp}cvs'

- - 'xl(unperceives xl[unperceives xl{unperceives xl''unperceives xl"unperceives xl-=([{''"unperceives'
  - 'xl"<unp}cvs xl.<unp}cvs xl{unp}cvs xl''unp}cvs xl0unp}cvs xl-"7"<.<{''0unp}cvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unperceives) unperceives] unperceives} unperceives'' unperceives" unperceives- unperceives, unperceives. unperceives; unperceives: unperceives? unperceives!'
  - 'unp}cvs"> unp}cvs.> unp}cvs_> unp}cvs,0 unp}cvs0 unp}cvs- unp}cvs1 unp}cvs4 unp}cvs; unp}cvs03 unp}cvs8 unp}cvs!'

- - 'unperceives@ unperceives# unperceives$ unperceives% unperceives^ unperceives& unperceives* unperceives( unperceives_ unperceives= unperceives+ unperceives[ unperceives{ unperceives\\ unperceives| unperceives< unperceives> unperceives` unperceives~ unperceives/'
  - 'unp}cvs`a unp}cvs_? unp}cvs`s unp}cvs.0 unp}cvs`5 unp}cvs`& unp}cvs"9 unp}cvs"< unp}cvs.- unp}cvs"7 unp}cvs"6 unp}cvs.< unp}cvs_< unp}cvs_* unp}cvs_| unp}cvs`< unp}cvs`> unp}cvs."9 unp}cvs`9 unp}cvs/'
  - xfail: contraction followed by special characters is ignored

- - 'unpercvs) unpercvs] unpercvs} unpercvs'' unpercvs" unpercvs- unpercvs, unpercvs. unpercvs; unpercvs: unpercvs? unpercvs! unpercvs@ unpercvs# unpercvs$ unpercvs% unpercvs^ unpercvs& unpercvs* unpercvs( unpercvs_ unpercvs= unpercvs+ unpercvs[ unpercvs{ unpercvs\\'
  - 'unpercvs"> unpercvs.> unpercvs_> unpercvs,0 unpercvs0 unpercvs- unpercvs1 unpercvs4 unpercvs; unpercvs03 unpercvs8 unpercvs! unpercvs`a unpercvs_? unpercvs`s unpercvs.0 unpercvs`5 unpercvs`& unpercvs"9 unpercvs"< unpercvs.- unpercvs"7 unpercvs"6 unpercvs.< unpercvs_< unpercvs_*'
  - xfail: non-contraction of "unpercvs" conflicts with contraction of "unperceives"

- - 'unpercvs| unpercvs< unpercvs> unpercvs` unpercvs~ unpercvs/'
  - 'unpercvs_| unpercvs`< unpercvs`> unpercvs."9 unpercvs`9 unpercvs/'
  - xfail: non-contraction of "unpercvs" conflicts with contraction of "unperceives"

- - 'unperceives-xl unperceives-([{''"xl unperceives-/xl unperceives-$xl'
  - 'unp}cvs-xl unp}cvs-"<.<{''0xl unp}cvs-_/xl unp}cvs-`sxl'

- - 'unperceives(xl unperceives[xl unperceives{xl unperceives''xl unperceives"xl unperceives=([{''"-xl unperceives([{''"-xl unperceives/-xl unperceives$-xl'
  - 'unp}cvs"<xl unp}cvs.<xl unp}cvs{xl unp}cvs''xl unp}cvs0xl unp}cvs"7"<.<{''0-xl unp}cvs"<.<{''0-xl unp}cvs/-xl unp}cvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perhaps [perhaps {perhaps ''perhaps "perhaps -perhaps'
  - '"<p}h .<p}h _<p}h ,8p}h 8p}h -p}h'

- - '!perhaps @perhaps #perhaps $perhaps %perhaps ^perhaps &perhaps *perhaps )perhaps _perhaps =perhaps +perhaps ]perhaps }perhaps \\perhaps |perhaps .perhaps ,perhaps ;perhaps :perhaps ?perhaps <perhaps >perhaps `perhaps ~perhaps /perhaps'
  - '!p}h `ap}h _?p}h `sp}h .0p}h `5p}h `&p}h "9p}h ">p}h .-p}h "7p}h "6p}h .>p}h _>p}h _*p}h _|p}h 4p}h 1p}h ;p}h0 3p}h ;8p}h `<p}h `>p}h .*p}h `9p}h _/p}h'
  - xfail: contraction following special characters is ignored

- - '(perh [perh {perh ''perh "perh -perh'
  - '"<perh .<perh _<perh ,8perh 8perh -perh'

- - '!perh @perh #perh $perh %perh ^perh &perh *perh )perh _perh =perh +perh ]perh erperh \\perh |perh .perh ,perh ;perh :perh ?perh <perh >perh `perh ~perh /perh'
  - '!perh `aperh _?perh `sperh .0perh `5perh `&perh "9perh ">perh .-perh "7perh "6perh .>perh erperh _*perh _|perh 4perh 1perh ;perh0 3perh ;8perh `<perh `>perh .*perh `9perh _/perh'
  - xfail: non-contraction of "perh" conflicts with contraction of "perhaps"

- - 'xl-perhaps xl-([{''"perhaps l/-perhaps l$-perhaps'
  - 'xl-p}h xl-"<.<{''0p}h l/-p}h l$-p}h'

- - 'xl(perhaps xl[perhaps xl{perhaps xl''perhaps xl"perhaps xl-=([{''"perhaps'
  - 'xl"<p}h xl.<p}h xl{p}h xl''p}h xl0p}h xl-"7"<.<{''0p}h'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perhaps) perhaps] perhaps} perhaps'' perhaps" perhaps- perhaps, perhaps. perhaps; perhaps: perhaps? perhaps!'
  - 'p}h"> p}h.> p}h_> p}h,0 p}h0 p}h- p}h1 p}h4 p}h; p}h03 p}h8 p}h!'

- - 'perhaps@ perhaps# perhaps$ perhaps% perhaps^ perhaps& perhaps* perhaps( perhaps_ perhaps= perhaps+ perhaps[ perhaps{ perhaps\\ perhaps| perhaps< perhaps> perhaps` perhaps~ perhaps/'
  - 'p}h`a p}h_? p}h`s p}h.0 p}h`5 p}h`& p}h"9 p}h"< p}h.- p}h"7 p}h"6 p}h.< p}h_< p}h_* p}h_| p}h`< p}h`> p}h."9 p}h`9 p}h/'
  - xfail: contraction followed by special characters is ignored

- - 'perh) perh] perh} perh'' perh" perh- perh, perh. perh; perh: perh? perh!'
  - 'perh"> perh.> perh_> perh,0 perh0 perh- perh1 perh4 perh; perh03 perh8 perh!'

- - 'perh@ perh# perh$ perh% perh^ perh& perh* perh( perh_ perh= perh+ perh[ perh{ perh\\ perh| perh< perh> perh` perh~ perh/'
  - 'perh`a perh_? perh`s perh.0 perh`5 perh`& perh"9 perh"< perh.- perh"7 perh"6 perh.< perh_< perh_* perh_| perh`< perh`> perh."9 perh`9 perh/'
  - xfail: non-contraction of "perh" conflicts with contraction of "perhaps"}

- - 'perhaps-xl perhaps-([{''"xl perhaps-/xl perhaps-$xl'
  - 'p}h-xl p}h-"<.<{''0xl p}h-_/xl p}h-`sxl'

- - 'perhaps(xl perhaps[xl perhaps{xl perhaps''xl perhaps"xl perhaps=([{''"-xl perhaps([{''"-xl perhaps/-xl perhaps$-xl'
  - 'p}h"<xl p}h.<xl p}h{xl p}h''xl p}h0xl p}h"7"<.<{''0-xl p}h"<.<{''0-xl p}h/-xl p}h`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(perhapss [perhapss {perhapss ''perhapss "perhapss -perhapss'
  - '"<p}hs .<p}hs _<p}hs ,8p}hs 8p}hs -p}hs'

- - '!perhapss @perhapss #perhapss $perhapss %perhapss ^perhapss &perhapss *perhapss )perhapss _perhapss =perhapss +perhapss ]perhapss }perhapss \\perhapss |perhapss .perhapss ,perhapss ;perhapss :perhapss ?perhapss <perhapss >perhapss `perhapss ~perhapss /perhapss'
  - '!p}hs `ap}hs _?p}hs `sp}hs .0p}hs `5p}hs `&p}hs "9p}hs ">p}hs .-p}hs "7p}hs "6p}hs .>p}hs _>p}hs _*p}hs _|p}hs 4p}hs 1p}hs ;p}hs0 3p}hs ;8p}hs `<p}hs `>p}hs .*p}hs `9p}hs _/p}hs'
  - xfail: contraction following special characters is ignored

- - 'perhs  (perhs [perhs {perhs ''perhs "perhs -perhs !perhs @perhs #perhs $perhs %perhs ^perhs &perhs *perhs )perhs _perhs =perhs +perhs ]perhs erperhs \\perhs |perhs .perhs ,perhs ;perhs :perhs ?perhs <perhs >perhs `perhs ~perhs /perhs'
  - 'perhs  "<perhs .<perhs _<perhs ,8perhs 8perhs -perhs !perhs `aperhs _?perhs `sperhs .0perhs `5perhs `&perhs "9perhs ">perhs .-perhs "7perhs "6perhs .>perhs erperhs _*perhs _|perhs 4perhs 1perhs ;perhs0 3perhs ;8perhs `<perhs `>perhs .*perhs `9perhs _/perhs'
  - xfail: non-contraction of "perhs" conflicts with contraction of "perhapss"

- - 'xl-perhapss xl-([{''"perhapss l/-perhapss l$-perhapss'
  - 'xl-p}hs xl-"<.<{''0p}hs l/-p}hs l$-p}hs'

- - 'xl(perhapss xl[perhapss xl{perhapss xl''perhapss xl"perhapss xl-=([{''"perhapss'
  - 'xl"<p}hs xl.<p}hs xl{p}hs xl''p}hs xl0p}hs xl-"7"<.<{''0p}hs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'perhapss) perhapss] perhapss} perhapss'' perhapss" perhapss- perhapss, perhapss. perhapss; perhapss: perhapss? perhapss!'
  - 'p}hs"> p}hs.> p}hs_> p}hs,0 p}hs0 p}hs- p}hs1 p}hs4 p}hs; p}hs03 p}hs8 p}hs!'

- - 'perhapss@ perhapss# perhapss$ perhapss% perhapss^ perhapss& perhapss* perhapss( perhapss_ perhapss= perhapss+ perhapss[ perhapss{ perhapss\\ perhapss| perhapss< perhapss> perhapss` perhapss~ perhapss/'
  - 'p}hs`a p}hs_? p}hs`s p}hs.0 p}hs`5 p}hs`& p}hs"9 p}hs"< p}hs.- p}hs"7 p}hs"6 p}hs.< p}hs_< p}hs_* p}hs_| p}hs`< p}hs`> p}hs."9 p}hs`9 p}hs/'
  - xfail: contraction followed by special characters is ignored

- - 'perhs) perhs] perhs} perhs'' perhs" perhs- perhs, perhs. perhs; perhs: perhs? perhs! perhs@ perhs# perhs$ perhs% perhs^ perhs& perhs* perhs( perhs_ perhs= perhs+ perhs[ perhs{ perhs\\ perhs| perhs< perhs> perhs` perhs~ perhs/'
  - 'perhs"> perhs.> perhs_> perhs,0 perhs0 perhs- perhs1 perhs4 perhs; perhs03 perhs8 perhs! perhs`a perhs_? perhs`s perhs.0 perhs`5 perhs`& perhs"9 perhs"< perhs.- perhs"7 perhs"6 perhs.< perhs_< perhs_* perhs_| perhs`< perhs`> perhs."9 perhs`9 perhs/'
  - xfail: non-contraction of "perhs" conflicts with contraction of "perhapss"}
    
- - 'perhapss-xl perhapss-([{''"xl perhapss-/xl perhapss-$xl'
  - 'p}hs-xl p}hs-"<.<{''0xl p}hs-_/xl p}hs-`sxl'

- - 'perhapss(xl perhapss[xl perhapss{xl perhapss''xl perhapss"xl perhapss=([{''"-xl perhapss([{''"-xl perhapss/-xl perhapss$-xl'
  - 'p}hs"<xl p}hs.<xl p}hs{xl p}hs''xl p}hs0xl p}hs"7"<.<{''0-xl p}hs"<.<{''0-xl p}hs/-xl p}hs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quick [quick {quick ''quick "quick -quick'
  - '"<qk .<qk _<qk ,8qk 8qk -qk'

- - '!quick @quick #quick $quick %quick ^quick &quick *quick )quick _quick =quick +quick ]quick }quick \\quick |quick .quick ,quick ;quick :quick ?quick <quick >quick `quick ~quick /quick'
  - '!qk `aqk _?qk `sqk .0qk `5qk `&qk "9qk ">qk .-qk "7qk "6qk .>qk _>qk _*qk _|qk 4qk 1qk ;qk0 3qk ;8qk `<qk `>qk .*qk `9qk _/qk'
  - xfail: contraction following special characters is ignored

- - '(qk [qk {qk ''qk "qk -qk'
  - '"<;qk .<;qk _<;qk ,8;qk 8;qk -;qk'

- - '!qk @qk #qk $qk %qk ^qk &qk *qk )qk _qk =qk +qk ]qk }qk \\qk |qk .qk ,qk ;qk :qk ?qk <qk >qk `qk ~qk /qk'
  - '!;qk `a;qk _?;qk `s;qk .0;qk `5;qk `&;qk "9;qk ">;qk .-;qk "7;qk "6;qk .>;qk _>;qk _*;qk _|;qk 4;qk 1;qk ;2qk0 3;qk ;8;qk `<;qk `>;qk .*;qk `9;qk _/;qk'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quick xl-([{''"quick l/-quick l$-quick'
  - 'xl-qk xl-"<.<{''0qk l/-qk l$-qk'

- - 'xl(quick xl[quick xl{quick xl''quick xl"quick xl-=([{''"quick'
  - 'xl"<qk xl.<qk xl{qk xl''qk xl0qk xl-"7"<.<{''0qk'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quick) quick] quick} quick'' quick" quick- quick, quick. quick; quick: quick? quick!'
  - 'qk"> qk.> qk_> qk,0 qk0 qk- qk1 qk4 qk; qk03 qk8 qk!'

- - 'quick@ quick# quick$ quick% quick^ quick& quick* quick( quick_ quick= quick+ quick[ quick{ quick\\ quick| quick< quick> quick` quick~ quick/'
  - 'qk`a qk_? qk`s qk.0 qk`5 qk`& qk"9 qk"< qk.- qk"7 qk"6 qk.< qk_< qk_* qk_| qk`< qk`> qk."9 qk`9 qk/'
  - xfail: contraction followed by special characters is ignored

- - 'qk) qk] qk} qk'' qk" qk- qk, qk. qk; qk: qk? qk!'
  - ';qk"> ;qk.> ;qk_> ;qk,0 ;qk0 ;qk- ;qk1 ;qk4 ;qk; ;qk03 ;qk8 ;qk!'

- - 'qk@ qk# qk$ qk% qk^ qk& qk* qk( qk_ qk= qk+ qk[ qk{ qk\\ qk| qk< qk> qk` qk~ qk/'
  - ';qk`a ;qk_? ;qk`s ;qk.0 ;qk`5 ;qk`& ;qk"9 ;qk"< ;qk.- ;qk"7 ;qk"6 ;qk.< ;qk_< ;qk_* ;qk_| ;qk`< ;qk`> ;qk."9 ;qk`9 ;qk/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quick-xl quick-([{''"xl quick-/xl quick-$xl'
  - 'qk-xl qk-"<.<{''0xl qk-_/xl qk-`sxl'

- - 'quick(xl quick[xl quick{xl quick''xl quick"xl quick=([{''"-xl quick([{''"-xl quick/-xl quick$-xl'
  - 'qk"<xl qk.<xl qk{xl qk''xl qk0xl qk"7"<.<{''0-xl qk"<.<{''0-xl qk/-xl qk`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'quickb quickc quickd quickf quickg quickh quickj quickk quickl quickm quickn quickp quickq quickr quicks quickt quickv quickw quickx quicky quickz'
  - 'qkb qkc qkd qkf qkg qkh qkj qkk qkl qkm qkn qkp qkq qkr qks qkt qkv qkw qkx qky qkz'

- - 'qky'
  - ';qky'

- - 'qkb qkc qkd qkf qkg qkh qkj qkk qkl qkm qkn qkp qkq qkr qks qkt qkv qkw qkx qkz qkful qkment qkness qksion qktion qkless qkance qkence qkity qkong'
  - ';qkb ;qkc ;qkd ;qkf ;qkg ;qkh ;qkj ;qkk ;qkl ;qkm ;qkn ;qkp ;qkq ;qkr ;qks ;qkt ;qkv ;qkw ;qkx ; ;qkz ;qk;l ;qk;t ;qk;s ;qk4n ;qk;n ;qk4s ;qk4e ;qk;e ;qk;y ;qk;g'
  - xfail: non-contraction of "qk" followed by letter excluding vowels has a missing grade 1 indicator due to conflict with contraction of "qk"

- - '(quicken [quicken {quicken ''quicken "quicken -quicken'
  - '"<qk5 .<qk5 _<qk5 ,8qk5 8qk5 -qk5'

- - '!quicken @quicken #quicken $quicken %quicken ^quicken &quicken *quicken )quicken _quicken =quicken +quicken ]quicken }quicken \\quicken |quicken .quicken ,quicken ;quicken :quicken ?quicken <quicken >quicken `quicken ~quicken /quicken'
  - '!qk5 `aqk5 _?qk5 `sqk5 .0qk5 `5qk5 `&qk5 "9qk5 ">qk5 .-qk5 "7qk5 "6qk5 .>qk5 _>qk5 _*qk5 _|qk5 4qk5 1qk5 ;qk50 3qk5 ;8qk5 `<qk5 `>qk5 .*qk5 `9qk5 _/qk5'
  - xfail: contraction following special characters is ignored

- - 'qken (qken [qken {qken ''qken "qken -qken !qken @qken #qken $qken %qken ^qken &qken *qken )qken _qken =qken +qken ]qken }qken \\qken |qken .qken ,qken qken :qken ?qken <qken >qken `qken ~qken /qken'
  - 'qken "<qken .<qken _<qken ,8qken 8qken -qken !qken `aqken _?qken `sqken .0qken `5qken `&qken "9qken ">qken .-qken "7qken "6qken .>qken _>qken _*qken _|qken 4qken 1qken qken0 3qken ;8qken `<qken `>qken .*qken `9qken _/qken'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quicken xl-([{''"quicken l/-quicken l$-quicken'
  - 'xl-qk5 xl-"<.<{''0qk5 l/-qk5 l$-qk5'

- - 'xl(quicken xl[quicken xl{quicken xl''quicken xl"quicken xl-=([{''"quicken'
  - 'xl"<qk5 xl.<qk5 xl{qk5 xl''qk5 xl0qk5 xl-"7"<.<{''0qk5'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quicken) quicken] quicken} quicken'' quicken" quicken- quicken, quicken. quicken; quicken: quicken? quicken!'
  - 'qk5"> qk5.> qk5_> qk5,0 qk50 qk5- qk51 qk54 qk5; qk503 qk58 qk5!'

- - 'quicken@ quicken# quicken$ quicken% quicken^ quicken& quicken* quicken( quicken_ quicken= quicken+ quicken[ quicken{ quicken\\ quicken| quicken< quicken> quicken` quicken~ quicken/'
  - 'qk5`a qk5_? qk5`s qk5.0 qk5`5 qk5`& qk5"9 qk5"< qk5.- qk5"7 qk5"6 qk5.< qk5_< qk5_* qk5_| qk5`< qk5`> qk5."9 qk5`9 qk5/'
  - xfail: contraction followed by special characters is ignored

- - 'qken) qken] qken} qken'' qken" qken- qken, qken. qken; qken: qken? qken! qken@ qken# qken$ qken% qken^ qken& qken* qken( qken_ qken= qken+ qken[ qken{ qken\\ qken| qken< qken> qken` qken~ qken/'
  - 'qken"> qken.> qken_> qken,0 qken0 qken- qken1 qken4 qken; qken03 qken8 qken! qken`a qken_? qken`s qken.0 qken`5 qken`& qken"9 qken"< qken.- qken"7 qken"6 qken.< qken_< qken_* qken_| qken`< qken`> qken."9 qken`9 qken/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quicken-xl quicken-([{''"xl quicken-/xl quicken-$xl'
  - 'qk5-xl qk5-"<.<{''0xl qk5-_/xl qk5-`sxl'

- - 'quicken(xl quicken[xl quicken{xl quicken''xl quicken"xl quicken=([{''"-xl quicken([{''"-xl quicken/-xl quicken$-xl'
  - 'qk5"<xl qk5.<xl qk5{xl qk5''xl qk50xl qk5"7"<.<{''0-xl qk5"<.<{''0-xl qk5/-xl qk5`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickens [quickens {quickens ''quickens "quickens -quickens'
  - '"<qk5s .<qk5s _<qk5s ,8qk5s 8qk5s -qk5s'

- - '!quickens @quickens #quickens $quickens %quickens ^quickens &quickens *quickens )quickens _quickens =quickens +quickens ]quickens }quickens \\quickens |quickens .quickens ,quickens ;quickens :quickens ?quickens <quickens >quickens `quickens ~quickens /quickens'
  - '!qk5s `aqk5s _?qk5s `sqk5s .0qk5s `5qk5s `&qk5s "9qk5s ">qk5s .-qk5s "7qk5s "6qk5s .>qk5s _>qk5s _*qk5s _|qk5s 4qk5s 1qk5s ;qk5s0 3qk5s ;8qk5s `<qk5s `>qk5s .*qk5s `9qk5s _/qk5s'
  - xfail: contraction following special characters is ignored

- - 'qkens (qkens [qkens {qkens ''qkens "qkens -qkens !qkens @qkens #qkens $qkens %qkens ^qkens &qkens *qkens )qkens _qkens =qkens +qkens ]qkens }qkens \\qkens |qkens .qkens ,qkens qkens :qkens ?qkens <qkens >qkens `qkens ~qkens /qkens'
  - 'qkens "<qkens .<qkens _<qkens ,8qkens 8qkens -qkens !qkens `aqkens _?qkens `sqkens .0qkens `5qkens `&qkens "9qkens ">qkens .-qkens "7qkens "6qkens .>qkens _>qkens _*qkens _|qkens 4qkens 1qkens qkens0 3qkens ;8qkens `<qkens `>qkens .*qkens `9qkens _/qkens'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickens xl-([{''"quickens l/-quickens l$-quickens'
  - 'xl-qk5s xl-"<.<{''0qk5s l/-qk5s l$-qk5s'

- - 'xl(quickens xl[quickens xl{quickens xl''quickens xl"quickens xl-=([{''"quickens'
  - 'xl"<qk5s xl.<qk5s xl{qk5s xl''qk5s xl0qk5s xl-"7"<.<{''0qk5s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickens) quickens] quickens} quickens'' quickens" quickens- quickens, quickens. quickens; quickens: quickens? quickens!'
  - 'qk5s"> qk5s.> qk5s_> qk5s,0 qk5s0 qk5s- qk5s1 qk5s4 qk5s; qk5s03 qk5s8 qk5s!'

- - 'quickens@ quickens# quickens$ quickens% quickens^ quickens& quickens* quickens( quickens_ quickens= quickens+ quickens[ quickens{ quickens\\ quickens| quickens< quickens> quickens` quickens~ quickens/'
  - 'qk5s`a qk5s_? qk5s`s qk5s.0 qk5s`5 qk5s`& qk5s"9 qk5s"< qk5s.- qk5s"7 qk5s"6 qk5s.< qk5s_< qk5s_* qk5s_| qk5s`< qk5s`> qk5s."9 qk5s`9 qk5s/'
  - xfail: contraction followed by special characters is ignored

- - 'qkens) qkens] qkens} qkens'' qkens" qkens- qkens, qkens. qkens; qkens: qkens? qkens! qkens@ qkens# qkens$ qkens% qkens^ qkens& qkens* qkens( qkens_ qkens= qkens+ qkens[ qkens{ qkens\\ qkens| qkens< qkens> qkens` qkens~ qkens/'
  - 'qkens"> qkens.> qkens_> qkens,0 qkens0 qkens- qkens1 qkens4 qkens; qkens03 qkens8 qkens! qkens`a qkens_? qkens`s qkens.0 qkens`5 qkens`& qkens"9 qkens"< qkens.- qkens"7 qkens"6 qkens.< qkens_< qkens_* qkens_| qkens`< qkens`> qkens."9 qkens`9 qkens/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickens-xl quickens-([{''"xl quickens-/xl quickens-$xl'
  - 'qk5s-xl qk5s-"<.<{''0xl qk5s-_/xl qk5s-`sxl'

- - 'quickens(xl quickens[xl quickens{xl quickens''xl quickens"xl quickens=([{''"-xl quickens([{''"-xl quickens/-xl quickens$-xl'
  - 'qk5s"<xl qk5s.<xl qk5s{xl qk5s''xl qk5s0xl qk5s"7"<.<{''0-xl qk5s"<.<{''0-xl qk5s/-xl qk5s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quicker [quicker {quicker ''quicker "quicker -quicker'
  - '"<qk} .<qk} _<qk} ,8qk} 8qk} -qk'

- - '!quicker @quicker #quicker $quicker %quicker ^quicker &quicker *quicker )quicker _quicker =quicker +quicker ]quicker }quicker \\quicker |quicker .quicker ,quicker ;quicker :quicker ?quicker <quicker >quicker `quicker ~quicker /quicker'
  - '!qk} `aqk} _?qk} `sqk} .0qk} `5qk} `&qk} "9qk} ">qk} .-qk} "7qk} "6qk} .>qk} }qk} _*qk} _|qk} 4qk} 1qk} ;qk}0 3qk} ;8qk} `<qk} `>qk} .*qk} `9qk} _/qk}'
  - xfail: contraction following special characters is ignored

- - 'qker (qker [qker {qker ''qker "qker -qker !qker @qker #qker $qker %qker ^qker &qker *qker )qker _qker =qker +qker ]qker }qker \\qker |qker .qker ,qker qker :qker ?qker <qker >qker `qker ~qker /qker'
  - 'qker "<qker .<qker _<qker ,8qker 8qker -qker !qker `aqker _?qker `sqker .0qker `5qker `&qker "9qker ">qker .-qker "7qker "6qker .>qker }qker _*qker _|qker 4qker 1qker ;qker0 3qker ;8qker `<qker `>qker .*qker `9qker _/qker'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quicker xl-([{''"quicker l/-quicker l$-quicker'
  - 'xl-qk} xl-"<.<{''0qk} l/-qk} l$-qk'

- - 'xl(quicker xl[quicker xl{quicker xl''quicker xl"quicker xl-=([{''"quicker'
  - 'xl"<qk} xl.<qk} xl{qk} xl''qk} xl0qk} xl-"7"<.<{''0qk}'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quicker) quicker] quicker} quicker'' quicker" quicker- quicker, quicker. quicker; quicker: quicker? quicker!'
  - 'qk}"> qk}.> qk}_> qk},0 qk}0 qk}- qk}1 qk}4 qk}; qk}03 qk}8 qk}!'

- - 'quicker@ quicker# quicker$ quicker% quicker^ quicker& quicker* quicker( quicker_ quicker= quicker+ quicker[ quicker{ quicker\\ quicker| quicker< quicker> quicker` quicker~ quicker/'
  - 'qk}`a qk}_? qk}`s qk}.0 qk}`5 qk}`& qk}"9 qk}"< qk}.- qk}"7 qk}"6 qk}.< qk}_< qk}_* qk}_| qk}`< qk}`> qk}."9 qk}`9 qk}/'
  - xfail: contraction followed by special characters is ignored

- - 'qker) qker] qker} qker'' qker" qker- qker, qker. qker; qker: qker? qker! qker@ qker# qker$ qker% qker^ qker& qker* qker( qker_ qker= qker+ qker[ qker{ qker\\ qker| qker< qker> qker` qker~ qker/'
  - 'qker"> qker.> qker_> qker,0 qker0 qker- qker1 qker4 qker; qker03 qker8 qker! qker`a qker_? qker`s qker.0 qker`5 qker`& qker"9 qker"< qker.- qker"7 qker"6 qker.< qker_< qker_* qker_| qker`< qker`> qker."9 qker`9 qker/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quicker-xl quicker-([{''"xl quicker-/xl quicker-$xl'
  - 'qk}-xl qk}-"<.<{''0xl qk}-_/xl qk}-`sxl'

- - 'quicker(xl quicker[xl quicker{xl quicker''xl quicker"xl quicker=([{''"-xl quicker([{''"-xl quicker/-xl quicker$-xl'
  - 'qk}"<xl qk}.<xl qk}{xl qk}''xl qk}0xl qk}"7"<.<{''0-xl qk}"<.<{''0-xl qk}/-xl qk}`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickers [quickers {quickers ''quickers "quickers -quickers'
  - '"<qk}s .<qk}s _<qk}s ,8qk}s 8qk}s -qk}s'

- - '!quickers @quickers #quickers $quickers %quickers ^quickers &quickers *quickers )quickers _quickers =quickers +quickers ]quickers }quickers \\quickers |quickers .quickers ,quickers ;quickers :quickers ?quickers <quickers >quickers `quickers ~quickers /quickers'
  - '!qk}s `aqk}s _?qk}s `sqk}s .0qk}s `5qk}s `&qk}s "9qk}s ">qk}s .-qk}s "7qk}s "6qk}s .>qk}s _>qk}s _*qk}s _|qk}s 4qk}s 1qk}s ;qk}s0 3qk}s ;8qk}s `<qk}s `>qk}s .*qk}s `9qk}s _/qk}s'
  - xfail: contraction following special characters is ignored

- - 'qkers (qkers [qkers {qkers ''qkers "qkers -qkers !qkers @qkers #qkers $qkers %qkers ^qkers &qkers *qkers )qkers _qkers =qkers +qkers ]qkers }qkers \\qkers |qkers .qkers ,qkers qkers :qkers ?qkers <qkers >qkers `qkers ~qkers /qkers'
  - 'qkers "<qkers .<qkers _<qkers ,8qkers 8qkers -qkers !qkers `aqkers _?qkers `sqkers .0qkers `5qkers `&qkers "9qkers ">qkers .-qkers "7qkers "6qkers .>qkers _>qkers _*qkers _|qkers 4qkers 1qkers ;qkers0 3qkers ;8qkers `<qkers `>qkers .*qkers `9qkers _/qkers'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickers xl-([{''"quickers l/-quickers l$-quickers'
  - 'xl-qk}s xl-"<.<{''0qk}s l/-qk}s l$-qk}s'

- - 'xl(quickers xl[quickers xl{quickers xl''quickers xl"quickers xl-=([{''"quickers'
  - 'xl"<qk}s xl.<qk}s xl{qk}s xl''qk}s xl0qk}s xl-"7"<.<{''0qk}s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickers) quickers] quickers} quickers'' quickers" quickers- quickers, quickers. quickers; quickers: quickers? quickers!'
  - 'qk}s"> qk}s.> qk}s_> qk}s,0 qk}s0 qk}s- qk}s1 qk}s4 qk}s; qk}s03 qk}s8 qk}s!'

- - 'quickers@ quickers# quickers$ quickers% quickers^ quickers& quickers* quickers( quickers_ quickers= quickers+ quickers[ quickers{ quickers\\ quickers| quickers< quickers> quickers` quickers~ quickers/'
  - 'qk}s`a qk}s_? qk}s`s qk}s.0 qk}s`5 qk}s`& qk}s"9 qk}s"< qk}s.- qk}s"7 qk}s"6 qk}s.< qk}s_< qk}s_* qk}s_| qk}s`< qk}s`> qk}s."9 qk}s`9 qk}s/'
  - xfail: contraction followed by special characters is ignored

- - 'qkers) qkers] qkers} qkers'' qkers" qkers- qkers, qkers. qkers; qkers: qkers? qkers! qkers@ qkers# qkers$ qkers% qkers^ qkers& qkers* qkers( qkers_ qkers= qkers+ qkers[ qkers{ qkers\\ qkers| qkers< qkers> qkers` qkers~ qkers/'
  - 'qkers"> qkers.> qkers_> qkers,0 qkers0 qkers- qkers1 qkers4 qkers; qkers03 qkers8 qkers! qkers`a qkers_? qkers`s qkers.0 qkers`5 qkers`& qkers"9 qkers"< qkers.- qkers"7 qkers"6 qkers.< qkers_< qkers_* qkers_| qkers`< qkers`> qkers."9 qkers`9 qkers/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickers-xl quickers-([{''"xl quickers-/xl quickers-$xl'
  - 'qk}s-xl qk}s-"<.<{''0xl qk}s-_/xl qk}s-`sxl'

- - 'quickers(xl quickers[xl quickers{xl quickers''xl quickers"xl quickers=([{''"-xl quickers([{''"-xl quickers/-xl quickers$-xl'
  - 'qk}s"<xl qk}s.<xl qk}s{xl qk}s''xl qk}s0xl qk}s"7"<.<{''0-xl qk}s"<.<{''0-xl qk}s/-xl qk}s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickest [quickest {quickest ''quickest "quickest -quickest'
  - '"<qke/ .<qke/ _<qke/ ,8qke/ 8qke/ -qke/'

- - '!quickest @quickest #quickest $quickest %quickest ^quickest &quickest *quickest )quickest _quickest =quickest +quickest ]quickest }quickest \\quickest |quickest .quickest ,quickest ;quickest :quickest ?quickest <quickest >quickest `quickest ~quickest /quickest'
  - '!qke/ `aqke/ _?qke/ `sqke/ .0qke/ `5qke/ `&qke/ "9qke/ ">qke/ .-qke/ "7qke/ "6qke/ .>qke/ _>qke/ _*qke/ _|qke/ 4qke/ 1qke/ qke/0 3qke/ ;8qke/ `<qke/ `>qke/ .*qke/ `9qke/ _/qke/'
  - xfail: contraction following special characters is ignorede/

- - 'qkest (qkest [qkest {qkest ''qkest "qkest -qkest !qkest @qkest #qkest $qkest %qkest ^qkest &qkest *qkest )qkest _qkest =qkest +qkest ]qkest }qkest \\qkest |qkest .qkest ,qkest qkest :qkest ?qkest <qkest >qkest `qkest ~qkest /qkest'
  - 'qkest "<qkest .<qkest _<qkest ,8qkest 8qkest -qkest !qkest `aqkest _?qkest `sqkest .0qkest `5qkest `&qkest "9qkest ">qkest .-qkest "7qkest "6qkest .>qkest _>qkest _*qkest _|qkest 4qkest 1qkest qkest0 3qkest ;8qkest `<qkest `>qkest .*qkest `9qkest /qkest'
  - xfail: non-contraction following special characters has a missing grade 1 indicatore/

- - 'xl-quickest xl-([{''"quickest l/-quickest l$-quickest'
  - 'xl-qke/ xl-"<.<{''0qke/ l/-qke/ l$-qke/'

- - 'xl(quickest xl[quickest xl{quickest xl''quickest xl"quickest xl-=([{''"quickest'
  - 'xl"<qke/ xl.<qke/ xl{qke/ xl''qke/ xl0qke/ xl-"7"<.<{''0qke/'
  - xfail: contraction following special characters and followed by any letter is ignorede/

- - 'quickest) quickest] quickeste/ quickest'' quickest" quickest- quickest, quickest. quickest; quickest: quickest? quickest!'
  - 'qke/"> qke/.> qke/_> qke/,0 qke/0 qke/- qke/1 qke/4 qke/; qke/03 qke/8 qke/!'

- - 'quickest@ quickest# quickest$ quickest% quickest^ quickest& quickest* quickest( quickest_ quickest= quickest+ quickest[ quickest{ quickest\\ quickest| quickest< quickest> quickest` quickest~ quickest/'
  - 'qke/`a qke/_? qke/`s qke/.0 qke/`5 qke/`& qke/"9 qke/"< qke/.- qke/"7 qke/"6 qke/.< qke/_< qke/_* qke/_| qke/`< qke/`> qke/."9 qke/`9 qke/_/'
  - xfail: contraction followed by special characters is ignorede/

- - 'qkest) qkest] qkeste/ qkest'' qkest" qkest- qkest, qkest. qkest; qkest: qkest? qkest! qkest@ qkest# qkest$ qkest% qkest^ qkest& qkest* qkest( qkest_ qkest= qkest+ qkest[ qkest{ qkest\\ qkest| qkest< qkest> qkest` qkest~ qkest/'
  - 'qkest"> qkest.> qkeste/ qkest,0 qkest0 qkest- qkest1 qkest4 qkest; qkest03 qkest8 qkest! qkest`a qkest_? qkest`s qkest.0 qkest`5 qkest`& qkest"9 qkest"< qkest.- qkest"7 qkest"6 qkest.< qkest_< qkest_* qkest_| qkest`< qkest`> qkest."9 qkest`9 qkest/'
  - xfail: non-contraction following special characters has a missing grade 1 indicatore/

- - 'quickest-xl quickest-([{''"xl quickest-/xl quickest-$xl'
  - 'qke/-xl qke/-"<.<{''0xl qke/-_/xl qke/-`sxl'

- - 'quickest(xl quickest[xl quickest{xl quickest''xl quickest"xl quickest=([{''"-xl quickest([{''"-xl quickest/-xl quickest$-xl'
  - 'qke/"<xl qke/.<xl qke/{xl qke/''xl qke/0xl qke/"7"<.<{''0-xl qke/"<.<{''0-xl qke/_/-xl qke/`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickests [quickests {quickests ''quickests "quickests -quickests'
  - '"<qke/s .<qke/s _<qke/s ,8qke/s 8qke/s -qke/s'

- - '!quickests @quickests #quickests $quickests %quickests ^quickests &quickests *quickests )quickests _quickests =quickests +quickests ]quickests }quickests \\quickests |quickests .quickests ,quickests ;quickests :quickests ?quickests <quickests >quickests'
  - '!qke/s `aqke/s _?qke/s `sqke/s .0qke/s `5qke/s `&qke/s "9qke/s ">qke/s .-qke/s "7qke/s "6qke/s .>qke/s _>qke/s _*qke/s _|qke/s 4qke/s 1qke/s qke/s0 3qke/s ;8qke/s `<qke/s `>qke/s'
  - xfail: contraction following special characters is ignorede/

- - '`quickests ~quickests /quickests'
  - '.*qke/s `9qke/s _/qke/s'
  - xfail: contraction following special characters is ignorede/

- - 'qkests (qkests [qkests {qkests ''qkests "qkests -qkests !qkests @qkests #qkests $qkests %qkests ^qkests &qkests *qkests )qkests _qkests =qkests +qkests ]qkests }qkests \\qkests |qkests .qkests ,qkests qkests :qkests ?qkests <qkests >qkests `qkests ~qkest'
  - 'qkests "<qkests .<qkests _<qkests ,8qkests 8qkests -qkests !qkests `aqkests _?qkests `sqkests .0qkests `5qkests `&qkests "9qkests ">qkests .-qkests "7qkests "6qkests .>qkests _>qkests _*qkests _|qkests 4qkests 1qkests qkests0 3qkests ;8qkests `<qkests `>qkests .*qkests `9qkest'
  - xfail: non-contraction following special characters has a missing grade 1 indicatore/

- - 'xl-quickests xl-([{''"quickests l/-quickests l$-quickests'
  - 'xl-qke/s xl-"<.<{''0qke/s l/-qke/s l$-qke/s'

- - 'xl(quickests xl[quickests xl{quickests xl''quickests xl"quickests xl-=([{''"quickests'
  - 'xl"<qke/s xl.<qke/s xl{qke/s xl''qke/s xl0qke/s xl-"7"<.<{''0qke/s'
  - xfail: contraction following special characters and followed by any letter is ignorede/

- - 'quickests) quickests] quickestse/ quickests'' quickests" quickests- quickests, quickests. quickests; quickests: quickests? quickests!'
  - 'qke/s"> qke/s.> qke/s_> qke/s,0 qke/s0 qke/s- qke/s1 qke/s4 qke/s; qke/s03 qke/s8 qke/s!'

- - 'quickests@ quickests# quickests$ quickests% quickests^ quickests& quickests* quickests( quickests_ quickests= quickests+ quickests[ quickests{ quickests\\ quickests| quickests< quickests> quickests` quickests~ quickests/'
  - 'qke/s`a qke/s_? qke/s`s qke/s.0 qke/s`5 qke/s`& qke/s"9 qke/s"< qke/s.- qke/s"7 qke/s"6 qke/s.< qke/s_< qke/s_* qke/s_| qke/s`< qke/s`> qke/s."9 qke/s`9 qke/s/'
  - xfail: contraction followed by special characters is ignorede/

- - 'qkests) qkests] qkestse/ qkests'' qkests" qkests- qkests, qkests. qkests; qkests: qkests? qkests! qkests@ qkests# qkests$ qkests% qkests^ qkests& qkests* qkests( qkests_ qkests= qkests+ qkests[ qkests{ qkests\\ qkests| qkests< qkests> qkests` qkests~ qkests/'
  - 'qkests"> qkests.> qkestse_/ qkests,0 qkests0 qkests- qkests1 qkests4 qkests; qkests03 qkests8 qkests! qkests`a qkests_? qkests`s qkests.0 qkests`5 qkests`& qkests"9 qkests"< qkests.- qkests"7 qkests"6 qkests.< qkests_< qkests_* qkests_| qkests`< qkests`> qkests."9 qkests`9 qkests/'
  - xfail: non-contraction following special characters has a missing grade 1 indicatore/

- - 'quickests-xl quickests-([{''"xl quickests-/xl quickests-$xl'
  - 'qke/s-xl qke/s-"<.<{''0xl qke/s-_/xl qke/s-`sxl'

- - 'quickests(xl quickests[xl quickests{xl quickests''xl quickests"xl quickests=([{''"-xl quickests([{''"-xl quickests/-xl quickests$-xl'
  - 'qke/s"<xl qke/s.<xl qke/s{xl qke/s''xl qke/s0xl qke/s"7"<.<{''0-xl qke/s"<.<{''0-xl qke/s/-xl qke/s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quickly [quickly {quickly ''quickly "quickly -quickly'
  - '"<qkly .<qkly _<qkly ,8qkly 8qkly -qkly'

- - '!quickly @quickly #quickly $quickly %quickly ^quickly &quickly *quickly )quickly _quickly =quickly +quickly ]quickly }quickly \\quickly |quickly .quickly ,quickly ;quickly :quickly ?quickly <quickly >quickly `quickly ~quickly /quickly'
  - '!qkly `aqkly _?qkly `sqkly .0qkly `5qkly `&qkly "9qkly ">qkly .-qkly "7qkly "6qkly .>qkly _>qkly _*qkly _|qkly 4qkly 1qkly ;qkly0 3qkly ;8qkly `<qkly `>qkly .*qkly `9qkly _/qkly'
  - xfail: contraction following special characters is ignored

- - '(qkly [qkly {qkly ''qkly "qkly -qkly'
  - '"<;qkly .<;qkly _<;qkly ,8;qkly 8;qkly -;qkly'

- - '!qkly @qkly #qkly $qkly %qkly ^qkly &qkly *qkly )qkly _qkly =qkly +qkly ]qkly }qkly \\qkly |qkly .qkly ,qkly ;qkly :qkly ?qkly <qkly >qkly `qkly ~qkly /qkly'
  - '!;qkly `a;qkly _?;qkly `s;qkly .0;qkly `5;qkly `&;qkly "9;qkly ">;qkly .-;qkly "7;qkly "6;qkly .>;qkly _>;qkly _*;qkly _|;qkly 4;qkly 1;qkly ;2qkly0 3;qkly ;8;qkly `<;qkly `>;qkly .*;qkly `9;qkly _/;qkly'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quickly xl-([{''"quickly l/-quickly l$-quickly'
  - 'xl-qkly xl-"<.<{''0qkly l/-qkly l$-qkly'

- - 'xl(quickly xl[quickly xl{quickly xl''quickly xl"quickly xl-=([{''"quickly'
  - 'xl"<qkly xl.<qkly xl{qkly xl''qkly xl0qkly xl-"7"<.<{''0qkly'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quickly) quickly] quickly} quickly'' quickly" quickly- quickly, quickly. quickly; quickly: quickly? quickly!'
  - 'qkly"> qkly.> qkly_> qkly,0 qkly0 qkly- qkly1 qkly4 qkly; qkly03 qkly8 qkly!'

- - 'quickly@ quickly# quickly$ quickly% quickly^ quickly& quickly* quickly( quickly_ quickly= quickly+ quickly[ quickly{ quickly\\ quickly| quickly< quickly> quickly` quickly~ quickly/'
  - 'qkly`a qkly_? qkly`s qkly.0 qkly`5 qkly`& qkly"9 qkly"< qkly.- qkly"7 qkly"6 qkly.< qkly_< qkly_* qkly_| qkly`< qkly`> qkly."9 qkly`9 qkly/'
  - xfail: contraction followed by special characters is ignored

- - 'qkly) qkly] qkly} qkly'' qkly" qkly- qkly, qkly. qkly; qkly: qkly? qkly!'
  - ';qkly"> ;qkly.> ;qkly_> ;qkly,0 ;qkly0 ;qkly- ;qkly1 ;qkly4 ;qkly; ;qkly03 ;qkly8 ;qkly!'

- - 'qkly@ qkly# qkly$ qkly% qkly^ qkly& qkly* qkly( qkly_ qkly= qkly+ qkly[ qkly{ qkly\\ qkly| qkly< qkly> qkly` qkly~ qkly/'
  - ';qkly`a ;qkly_? ;qkly`s ;qkly.0 ;qkly`5 ;qkly`& ;qkly"9 ;qkly"< ;qkly.- ;qkly"7 ;qkly"6 ;qkly.< ;qkly_< ;qkly_* ;qkly_| ;qkly`< ;qkly`> ;qkly."9 ;qkly`9 ;qkly/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quickly-xl quickly-([{''"xl quickly-/xl quickly-$xl'
  - 'qkly-xl qkly-"<.<{''0xl qkly-_/xl qkly-`sxl'

- - 'quickly(xl quickly[xl quickly{xl quickly''xl quickly"xl quickly=([{''"-xl quickly([{''"-xl quickly/-xl quickly$-xl'
  - 'qkly"<xl qkly.<xl qkly{xl qkly''xl qkly0xl qkly"7"<.<{''0-xl qkly"<.<{''0-xl qkly/-xl qkly`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unquick [unquick {unquick ''unquick "unquick -unquick'
  - '"<unqk .<unqk _<unqk ,8unqk 8unqk -unqk'

- - '!unquick @unquick #unquick $unquick %unquick ^unquick &unquick *unquick )unquick _unquick =unquick +unquick ]unquick }unquick \\unquick |unquick .unquick ,unquick ;unquick :unquick ?unquick <unquick >unquick `unquick ~unquick /unquick'
  - '!unqk `aunqk _?unqk `sunqk .0unqk `5unqk `&unqk "9unqk ">unqk .-unqk "7unqk "6unqk .>unqk _>unqk _*unqk _|unqk 4unqk 1unqk ;unqk0 3unqk ;8unqk `<unqk `>unqk .*unqk `9unqk _/unqk'
  - xfail: contraction following special characters is ignored

- - '(unqk [unqk {unqk ''unqk "unqk -unqk'
  - '"<;unqk .<;unqk _<;unqk ,8;unqk 8;unqk -;unqk'

- - '!unqk @unqk #unqk $unqk %unqk ^unqk &unqk *unqk )unqk _unqk =unqk +unqk ]unqk }unqk \\unqk |unqk .unqk ,unqk ;unqk :unqk ?unqk <unqk >unqk `unqk ~unqk /unqk'
  - '!;unqk `a;unqk _?;unqk `s;unqk .0;unqk `5;unqk `&;unqk "9;unqk ">;unqk .-;unqk "7;unqk "6;unqk .>;unqk _>;unqk _*;unqk _|;unqk 4;unqk 1;unqk ;2unqk0 3;unqk ;8;unqk `<;unqk `>;unqk .*;unqk `9;unqk _/;unqk'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unquick xl-([{''"unquick l/-unquick l$-unquick'
  - 'xl-unqk xl-"<.<{''0unqk l/-unqk l$-unqk'

- - 'xl(unquick xl[unquick xl{unquick xl''unquick xl"unquick xl-=([{''"unquick'
  - 'xl"<unqk xl.<unqk xl{unqk xl''unqk xl0unqk xl-"7"<.<{''0unqk'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unquick) unquick] unquick} unquick'' unquick" unquick- unquick, unquick. unquick; unquick: unquick? unquick!'
  - 'unqk"> unqk.> unqk_> unqk,0 unqk0 unqk- unqk1 unqk4 unqk; unqk03 unqk8 unqk!'

- - 'unquick@ unquick# unquick$ unquick% unquick^ unquick& unquick* unquick( unquick_ unquick= unquick+ unquick[ unquick{ unquick\\ unquick| unquick< unquick> unqk` unqk~ unqk/'
  - 'unqk`a unqk_? unqk`s unqk.0 unqk`5 unqk`& unqk"9 unqk"< unqk.- unqk"7 unqk"6 unqk.< unqk_< unqk_* unqk_| unqk`< unqk`> unquick."9 unquick`9 unquick/'
  - xfail: contraction followed by special characters is ignored

- - 'unqk) unqk] unqk} unqk'' unqk" unqk- unqk, unqk. unqk; unqk: unqk? unqk!'
  - ';unqk"> ;unqk.> ;unqk_> ;unqk,0 ;unqk0 ;unqk- ;unqk1 ;unqk4 ;unqk; ;unqk03 ;unqk8 ;unqk!'

- - 'unqk@ unqk# unqk$ unqk% unqk^ unqk& unqk* unqk( unqk_ unqk= unqk+ unqk[ unqk{ unqk\\ unqk| unqk< unqk> unqk` unqk~ unqk/'
  - ';unqk`a ;unqk_? ;unqk`s ;unqk.0 ;unqk`5 ;unqk`& ;unqk"9 ;unqk"< ;unqk.- ;unqk"7 ;unqk"6 ;unqk.< ;unqk_< ;unqk_* ;unqk_| ;unqk`< ;unqk`> ;unqk."9 ;unqk`9 ;unqk/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unquick-xl unquick-([{''"xl unquick-/xl unquick-$xl'
  - 'unqk-xl unqk-"<.<{''0xl unqk-_/xl unqk-`sxl'

- - 'unquick(xl unquick[xl unquick{xl unquick''xl unquick"xl unquick=([{''"-xl unquick([{''"-xl unquick/-xl unquick$-xl'
  - 'unqk"<xl unqk.<xl unqk{xl unqk''xl unqk0xl unqk"7"<.<{''0-xl unqk"<.<{''0-xl unqk/-xl unqk`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(quite [quite {quite ''quite "quite -quite'
  - '"<q .<q _<q ,8q 8q -q'

- - '!quite @quite #quite $quite %quite ^quite &quite *quite )quite _quite =quite +quite ]quite }quite \\quite |quite .quite ,quite ;quite :quite ?quite <quite >quite `quite ~quite /quite'
  - '!q `aq _?q `sq .0q `5q `&q "9q ">q .-q "7q "6q .>q _>q _*q _|q 4q 1q ;q0 3q ;8q `<q `>q .*q `9q _/q'
  - xfail: contraction following special characters is ignored

- - '(q [q {q ''q "q -q'
  - '"<;q .<;q _<;q ,8;q 8;q -;q'

- - '!q @q #q $q %q ^q &q *q )q _q =q +q ]q }q \\q |q .q ,q ;q :q ?q <q >q `q ~q /q'
  - '!;q `a;q _?;q `s;q .0;q `5;q `&;q "9;q ">;q .-;q "7;q "6;q .>;q _>;q _*;q _|;q 4;q 1;q ;2q0 3;q ;8;q `<;q `>;q .*;q `9;q _/;q'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-quite xl-([{''"quite xl/-quite xl$-quite'
  - 'xl-q xl-"<.<{''0q xl_/-q xl`s-q'

- - 'xl(quite xl[quite xl{quite xl''quite xl"quite xl-=([{''"quite'
  - 'xl"<q xl.<q xl{q xl''q xl0q xl-"7"<.<{''0q'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'quite) quite] quite} quite'' quite" quite- quite, quite. quite; quite: quite? quite!'
  - 'q"> q.> q_> q,0 q0 q- q1 q4 q; q03 q8 q!'

- - 'quite@ quite# quite$ quite% quite^ quite& quite* quite( quite_ quite= quite+ quite[ quite{ quite\\ quite| quite< quite> quite` quite~ quite/'
  - 'q`a q_? q`s q.0 q`5 q`& q"9 q"< q.- q"7 q"6 q.< q_< q_* q_| q`< q`> q."9 q`9 q/'
  - xfail: contraction followed by special characters is ignored

- - 'q) q] q} q'' q" q- q, q. q; q: q? q!'
  - ';q"> ;q.> ;q_> ;q,0 ;q0 ;q- ;q1 ;q4 ;q; ;q03 ;q8 ;q!'

- - 'q@ q# q$ q% q^ q& q* q( q_ q= q+ q[ q{ q\\ q| q< q> q` q~ q/'
  - ';q`a ;q_? ;q`s ;q.0 ;q`5 ;q`& ;q"9 ;q"< ;q.- ;q"7 ;q"6 ;q.< ;q_< ;q_* ;q_| ;q`< ;q`> ;q."9 ;q`9 ;q/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'quite-xl quite-([{''"xl quite-/xl quite-$xl'
  - 'q-xl q-"<.<{''0xl q-_/xl q-`sxl'

- - 'quite(xl quite[xl quite{xl quite''xl quite"xl quite=([{''"-xl quite([{''"-xl quite/-xl quite$-xl'
  - 'q"<xl q.<xl q{xl q''xl q0xl q"7"<.<{''0-xl q"<.<{''0-xl q/-xl q`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rather [rather {rather ''rather "rather -rather'
  - '"<r .<r _<r ,8r 8r -r'

- - '!rather @rather #rather $rather %rather ^rather &rather *rather )rather _rather =rather +rather ]rather }rather \\rather |rather .rather ,rather ;rather :rather ?rather <rather >rather `rather ~rather /rather'
  - '!r `ar _?r `sr .0r `5r `&r "9r ">r .-r "7r "6r .>r }r _*r _|r 4r 1r ;r0 3r ;8r `<r `>r .*r `9r _/r'
  - xfail: contraction following special characters is ignored

- - '(r [r {r ''r "r -r'
  - '"<;r .<;r _<;r ,8;r 8;r -;r'

- - '!r @r #r $r %r ^r &r *r )r _r =r +r ]r }r \\r |r .r ,r ;r :r ?r <r >r `r ~r /r'
  - '!;r `a;r _?;r `s;r .0;r `5;r `&;r "9;r ">;r .-;r "7;r "6;r .>;r _>;r _*;r _|;r 4;r 1;r ;2r0 3;r ;8;r `<;r `>;r .*;r `9;r _/;r'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rather xl-([{''"rather xl/-rather xl$-rather'
  - 'xl-r xl-"<.<{''0r xl_/-r xl`s-r'

- - 'xl(rather xl[rather xl{rather xl''rather xl"rather xl-=([{''"rather'
  - 'xl"<r xl.<r xl{r xl''r xl0r xl-"7"<.<{''0r'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rather) rather] rather} rather'' rather" rather- rather, rather. rather; rather: rather? rather!'
  - 'r"> r.> r_> r,0 r0 r- r1 r4 r; r03 r8 r!'

- - 'rather@ rather# rather$ rather% rather^ rather& rather* rather( rather_ rather= rather+ rather[ rather{ rather\\ rather| rather< rather> rather` rather~ rather/'
  - 'r`a r_? r`s r.0 r`5 r`& r"9 r"< r.- r"7 r"6 r.< r_< r_* r_| r`< r`> r."9 r`9 r/'
  - xfail: contraction followed by special characters is ignored

- - 'r) r] r} r'' r" r- r, r. r; r: r? r!'
  - ';r"> ;r.> ;r_> ;r,0 ;r0 ;r- ;r1 ;r4 ;r; ;r03 ;r8 ;r!'

- - 'r@ r# r$ r% r^ r& r* r( r_ r= r+ r[ r{ r\\ r| r< r> r` r~ r/'
  - ';r`a ;r_? ;r`s ;r.0 ;r`5 ;r`& ;r"9 ;r"< ;r.- ;r"7 ;r"6 ;r.< ;r_< ;r_* ;r_| ;r`< ;r`> ;r."9 ;r`9 ;r/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rather-xl rather-([{''"xl rather-/xl rather-$xl'
  - 'r-xl r-"<.<{''0xl r-_/xl r-`sxl'

- - 'rather(xl rather[xl rather{xl rather''xl rather"xl rather=([{''"-xl rather([{''"-xl rather/-xl rather$-xl'
  - 'r"<xl r.<xl r{xl r''xl r0xl r"7"<.<{''0-xl r"<.<{''0-xl r/-xl r`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receive [receive {receive ''receive "receive -receive'
  - '"<rcv .<rcv _<rcv ,8rcv 8rcv -rcv'

- - '!receive @receive #receive $receive %receive ^receive &receive *receive )receive _receive =receive +receive ]receive }receive \\receive |receive .receive ,receive ;receive :receive ?receive <receive >receive `receive ~receive /receive'
  - '!rcv `arcv _?rcv `srcv .0rcv `5rcv `&rcv "9rcv ">rcv .-rcv "7rcv "6rcv .>rcv _>rcv _*rcv _|rcv 4rcv 1rcv ;rcv0 3rcv ;8rcv `<rcv `>rcv ;8rcv .*rcv `9rcv _/rcv'
  - xfail: contraction following special characters is ignored

- - '(rcv [rcv {rcv ''rcv "rcv -rcv'
  - '"<;rcv .<;rcv _<;rcv ,8;rcv 8;rcv -;rcv'

- - '!rcv @rcv #rcv $rcv %rcv ^rcv &rcv *rcv )rcv _rcv =rcv +rcv ]rcv }rcv \\rcv |rcv .rcv ,rcv ;rcv :rcv ?rcv <rcv >rcv ?rcv `rcv ~rcv /rcv'
  - '!;rcv `a;rcv _?;rcv `s;rcv .0;rcv `5;rcv `&;rcv "9;rcv ">;rcv .-;rcv "7;rcv "6;rcv .>;rcv _>;rcv _*;rcv _|;rcv 4;rcv 1;rcv ;2rcv0 3;rcv ;8;rcv `<;rcv `>;rcv .*;rcv `9;rcv _/;rcv'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receive xl-([{''"receive l/-receive l$-receive'
  - 'xl-rcv xl-"<.<{''0rcv l/-rcv l$-rcv'

- - 'xl(receive xl[receive xl{receive xl''receive xl"receive xl-=([{''"receive'
  - 'xl"<rcv xl.<rcv xl{rcv xl''rcv xl0rcv xl-"7"<.<{''0rcv'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receive) receive] receive} receive'' receive" receive- receive, receive. receive; receive: receive? receive!'
  - 'rcv"> rcv.> rcv_> rcv,0 rcv0 rcv- rcv1 rcv4 rcv; rcv03 rcv8 rcv!'

- - 'receive@ receive# receive$ receive% receive^ receive& receive* receive( receive_ receive= receive+ receive[ receive{ receive\\ receive| receive< receive> receive` receive~ receive/'
  - 'rcv`a rcv_? rcv`s rcv.0 rcv`5 rcv`& rcv"9 rcv"< rcv.- rcv"7 rcv"6 rcv.< rcv_< rcv_* rcv_| rcv`< rcv`> rcv."9 rcv`9 rcv/'
  - xfail: contraction followed by special characters is ignored

- - 'rcv) rcv] rcv} rcv'' rcv" rcv- rcv, rcv. rcv; rcv: rcv? rcv!'
  - ';rcv"> ;rcv.> ;rcv_> ;rcv,0 ;rcv0 ;rcv- ;rcv1 ;rcv4 ;rcv; ;rcv03 ;rcv8 ;rcv!'

- - 'rcv@ rcv# rcv$ rcv% rcv^ rcv& rcv* rcv( rcv_ rcv= rcv+ rcv[ rcv{ rcv\\ rcv| rcv< rcv> rcv` rcv~ rcv/'
  - ';rcv`a ;rcv_? ;rcv`s ;rcv.0 ;rcv`5 ;rcv`& ;rcv"9 ;rcv"< ;rcv.- ;rcv"7 ;rcv"6 ;rcv.< ;rcv_< ;rcv_* ;rcv_| ;rcv`< ;rcv`> ;rcv."9 ;rcv`9 ;rcv/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receive-xl receive-([{''"xl receive-/xl receive-$xl'
  - 'rcv-xl rcv-"<.<{''0xl rcv-_/xl rcv-`sxl'

- - 'receive(xl receive[xl receive{xl receive''xl receive"xl receive=([{''"-xl receive([{''"-xl receive/-xl receive$-xl'
  - 'rcv"<xl rcv.<xl rcv{xl rcv''xl rcv0xl rcv"7"<.<{''0-xl rcv"<.<{''0-xl rcv/-xl rcv`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(received [received {received ''received "received -received'
  - '"<rcvd .<rcvd _<rcvd ,8rcvd 8rcvd -rcvd'

- - '!received @received #received $received %received ^received &received *received )received _received =received +received ]received }received \\received |received .received ,received ;received :received ?received <received >received `received ~received /received'
  - '!rcvd `arcvd _?rcvd $rcvd .0rcvd `5rcvd `&rcvd "9rcvd ">rcvd .-rcvd "7rcvd "6rcvd .>rcvd _>rcvd _*rcvd _|rcvd 4rcvd 1rcvd ;rcvd0 3rcvd ;8rcvd `<rcvd `>rcvd .*rcvd `9rcvd _/rcvd'
  - xfail: contraction following special characters is ignored

- - '(rcvd [rcvd {rcvd ''rcvd "rcvd -rcvd'
  - '"<;rcvd .<;rcvd _<;rcvd ,8;rcvd 8;rcvd -;rcvd'

- - '!rcvd @rcvd #rcvd $rcvd %rcvd ^rcvd &rcvd *rcvd )rcvd _rcvd =rcvd +rcvd ]rcvd }rcvd \\rcvd |rcvd .rcvd ,rcvd ;rcvd :rcvd ?rcvd <rcvd >rcvd `rcvd ~rcvd /rcvd'
  - '!;rcvd `a;rcvd _?;rcvd `s;rcvd .0;rcvd `5;rcvd `&;rcvd "9;rcvd ">;rcvd .-;rcvd "7;rcvd "6;rcvd .>;rcvd _>;rcvd _*;rcvd _|;rcvd 4;rcvd 1;rcvd ;2rcvd0 3;rcvd ;8;rcvd `<;rcvd `>;rcvd .*;rcvd `9;rcvd _/;rcvd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-received xl-([{''"received l/-received l$-received'
  - 'xl-rcvd xl-"<.<{''0rcvd l/-rcvd l$-rcvd'

- - 'xl(received xl[received xl{received xl''received xl"received xl-=([{''"received'
  - 'xl"<rcvd xl.<rcvd xl{rcvd xl''rcvd xl0rcvd xl-"7"<.<{''0rcvd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'received) received] received} received'' received" received- received, received. received; received: received? received!'
  - 'rcvd"> rcvd.> rcvd_> rcvd,0 rcvd0 rcvd- rcvd1 rcvd4 rcvd; rcvd03 rcvd8 rcvd!'

- - 'received@ received# received$ received% received^ received& received* received( received_ received= received+ received[ received{ received\\ received| received< received> received` received~ received/'
  - 'rcvd`a rcvd_? rcvd`s rcvd.0 rcvd`5 rcvd`& rcvd"9 rcvd"< rcvd.- rcvd"7 rcvd"6 rcvd.< rcvd_< rcvd_* rcvd_| rcvd`< rcvd`> rcvd."9 rcvd`9 rcvd/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvd) rcvd] rcvd} rcvd'' rcvd" rcvd- rcvd, rcvd. rcvd; rcvd: rcvd? rcvd!'
  - ';rcvd"> ;rcvd.> ;rcvd_> ;rcvd,0 ;rcvd0 ;rcvd- ;rcvd1 ;rcvd4 ;rcvd; ;rcvd03 ;rcvd8 ;rcvd!'

- - 'rcvd@ rcvd# rcvd$ rcvd% rcvd^ rcvd& rcvd* rcvd( rcvd_ rcvd= rcvd+ rcvd[ rcvd{ rcvd\\ rcvd| rcvd< rcvd> rcvd` rcvd~ rcvd/'
  - ';rcvd`a ;rcvd_? ;rcvd`s ;rcvd.0 ;rcvd`5 ;rcvd`& ;rcvd"9 ;rcvd"< ;rcvd.- ;rcvd"7 ;rcvd"6 ;rcvd.< ;rcvd_< ;rcvd_* ;rcvd_| ;rcvd`< ;rcvd`> ;rcvd."9 ;rcvd`9 ;rcvd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'received-xl received-([{''"xl received-/xl received-$xl'
  - 'rcvd-xl rcvd-"<.<{''0xl rcvd-_/xl rcvd-`sxl'

- - 'received(xl received[xl received{xl received''xl received"xl received=([{''"-xl received([{''"-xl received/-xl received$-xl'
  - 'rcvd"<xl rcvd.<xl rcvd{xl rcvd''xl rcvd0xl rcvd"7"<.<{''0-xl rcvd"<.<{''0-xl rcvd/-xl rcvd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receiving [receiving {receiving ''receiving "receiving -receiving'
  - '"<rcvg .<rcvg _<rcvg ,8rcvg 8rcvg -rcvg'

- - '!receiving @receiving #receiving $receiving %receiving ^receiving &receiving *receiving )receiving _receiving =receiving +receiving ]receiving }receiving \\receiving |receiving .receiving ,receiving ;receiving :receiving ?receiving <receiving >receiving'
  - '!rcvg `arcvg _?rcvg `srcvg .0rcvg `5rcvg `&rcvg "9rcvg ">rcvg .-rcvg "7rcvg +rcvg .>rcvg _>rcvg _*rcvg _|rcvg 4rcvg 1rcvg ;rcvg0 3rcvg ;8rcvg `<rcvg `>rcvg'
  - xfail: contraction following special characters is ignored

- - '`receiving ~receiving /receiving'
  - '.*rcvg `9rcvg _/rcvg'
  - xfail: contraction following special characters is ignored

- - '(rcvg [rcvg {rcvg ''rcvg "rcvg -rcvg'
  - '"<;rcvg .<;rcvg _<;rcvg ,8;rcvg 8;rcvg -;rcvg'

- - '!rcvg @rcvg #rcvg $rcvg %rcvg ^rcvg &rcvg *rcvg )rcvg _rcvg =rcvg +rcvg ]rcvg }rcvg \\rcvg |rcvg .rcvg ,rcvg ;rcvg :rcvg .rcvg <rcvg >rcvg ?rcvg `rcvg ~rcvg /rcvg'
  - '!;rcvg `a;rcvg _?;rcvg `s;rcvg .0;rcvg `5;rcvg `&;rcvg "9;rcvg ">;rcvg .-;rcvg "7;rcvg "6;rcvg .>;rcvg _>;rcvg _*;rcvg _|;rcvg 4;rcvg 1;rcvg ;2rcvg0 3;rcvg ;8;rcvg `<;rcvg `>;rcvg .*;rcvg `9;rcvg _/;rcvg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receiving xl-([{''"receiving l/-receiving l$-receiving'
  - 'xl-rcvg xl-"<.<{''0rcvg l/-rcvg l$-rcvg'

- - 'xl(receiving xl[receiving xl{receiving xl''receiving xl"receiving xl-=([{''"receiving'
  - 'xl"<rcvg xl.<rcvg xl{rcvg xl''rcvg xl0rcvg xl-"7"<.<{''0rcvg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receiving) receiving] receiving} receiving'' receiving" receiving- receiving, receiving. receiving; receiving: receiving? receiving!'
  - 'rcvg"> rcvg.> rcvg_> rcvg,0 rcvg0 rcvg- rcvg1 rcvg4 rcvg; rcvg03 rcvg8 rcvg!'

- - 'receiving@ receiving# receiving$ receiving% receiving^ receiving& receiving* receiving( receiving_ receiving= receiving+ receiving[ receiving{ receiving\\ receiving| receiving< receiving> receiving` receiving~ receiving/'
  - 'rcvg`a rcvg_? rcvg`s rcvg.0 rcvg`5 rcvg`& rcvg"9 rcvg"< rcvg.- rcvg"7 rcvg+ rcvg.< rcvg_< rcvg_* rcvg_| rcvg`< rcvg`> rcvg."9 rcvg`9 rcvg/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvg) rcvg] rcvg} rcvg'' rcvg" rcvg- rcvg, rcvg. rcvg; rcvg: rcvg? rcvg!'
  - ';rcvg"> ;rcvg.> ;rcvg_> ;rcvg,0 ;rcvg0 ;rcvg- ;rcvg1 ;rcvg4 ;rcvg; ;rcvg03 ;rcvg8 ;rcvg!'

- - 'rcvg@ rcvg# rcvg$ rcvg% rcvg^ rcvg& rcvg* rcvg( rcvg_ rcvg= rcvg+ rcvg[ rcvg{ rcvg\\ rcvg| rcvg< rcvg> rcvg` rcvg~ rcvg/'
  - ';rcvg`a ;rcvg_? ;rcvg`s ;rcvg.0 ;rcvg`5 ;rcvg`& ;rcvg"9 ;rcvg"< ;rcvg.- ;rcvg"7 ;rcvg"6 ;rcvg.< ;rcvg_< ;rcvg_* ;rcvg_| ;rcvg`< ;rcvg`> ;rcvg."9 ;rcvg`9 ;rcvg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receiving-xl receiving-([{''"xl receiving-/xl receiving-$xl'
  - 'rcvg-xl rcvg-"<.<{''0xl rcvg-_/xl rcvg-`sxl'

- - 'receiving(xl receiving[xl receiving{xl receiving''xl receiving"xl receiving=([{''"-xl receiving([{''"-xl receiving/-xl receiving$-xl'
  - 'rcvg"<xl rcvg.<xl rcvg{xl rcvg''xl rcvg0xl rcvg"7"<.<{''0-xl rcvg"<.<{''0-xl rcvg/-xl rcvg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receiver [receiver {receiver ''receiver "receiver -receiver'
  - '"<rcvr .<rcvr _<rcvr ,8rcvr 8rcvr -rcvr'

- - '!receiver @receiver #receiver $receiver %receiver ^receiver &receiver *receiver )receiver _receiver =receiver +receiver ]receiver }receiver \\receiver |receiver .receiver ,receiver ;receiver :receiver ?receiver <receiver >receiver `receiver ~receiver /receiver'
  - '!rcvr `arcvr _?rcvr `srcvr .0rcvr `5rcvr `&rcvr "9rcvr ">rcvr .-rcvr "7rcvr "6rcvr .>rcvr }rcvr _*rcvr _|rcvr 4rcvr 1rcvr ;rcvr0 3rcvr ;8rcvr `<rcvr `>rcvr .*rcvr `9rcvr _/rcvr'
  - xfail: contraction following special characters is ignored

- - '(rcvr [rcvr {rcvr ''rcvr "rcvr -rcvr'
  - '"<;rcvr .<;rcvr _<;rcvr ,8;rcvr 8;rcvr -;rcvr'

- - '!rcvr @rcvr #rcvr $rcvr %rcvr ^rcvr &rcvr *rcvr )rcvr _rcvr =rcvr +rcvr ]rcvr }rcvr \\rcvr |rcvr .rcvr ,rcvr ;rcvr :rcvr ?rcvr <rcvr >rcvr `rcvr ~rcvr /rcvr'
  - '!;rcvr `a;rcvr _?;rcvr `s;rcvr .0;rcvr `5;rcvr `&;rcvr "9;rcvr ">;rcvr .-;rcvr "7;rcvr "6;rcvr .>;rcvr _>;rcvr _*;rcvr _|;rcvr 4;rcvr 1;rcvr ;2rcvr0 3;rcvr ;8;rcvr `<;rcvr `>;rcvr .*;rcvr `9;rcvr _/;rcvr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receiver xl-([{''"receiver l/-receiver l$-receiver'
  - 'xl-rcvr xl-"<.<{''0rcvr l/-rcvr l$-rcvr'

- - 'xl(receiver xl[receiver xl{receiver xl''receiver xl"receiver xl-=([{''"receiver'
  - 'xl"<rcvr xl.<rcvr xl{rcvr xl''rcvr xl0rcvr xl-"7"<.<{''0rcvr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receiver) receiver] receiver} receiver'' receiver" receiver- receiver, receiver. receiver; receiver: receiver? receiver!'
  - 'rcvr"> rcvr.> rcvr_> rcvr,0 rcvr0 rcvr- rcvr1 rcvr4 rcvr; rcvr03 rcvr8 rcvr!'

- - 'receiver@ receiver# receiver$ receiver% receiver^ receiver& receiver* receiver( receiver_ receiver= receiver+ receiver[ receiver{ receiver\\ receiver| receiver< receiver> receiver` receiver~ receiver/'
  - 'rcvr`a rcvr_? rcvr`s rcvr.0 rcvr`5 rcvr`& rcvr"9 rcvr"< rcvr.- rcvr"7 rcvr"6 rcvr.< rcvr_< rcvr_* rcvr_| rcvr`< rcvr`> rcvr."9 rcvr`9 rcvr/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvr) rcvr] rcvr} rcvr'' rcvr" rcvr- rcvr, rcvr. rcvr; rcvr: rcvr? rcvr!'
  - ';rcvr"> ;rcvr.> ;rcvr_> ;rcvr,0 ;rcvr0 ;rcvr- ;rcvr1 ;rcvr4 ;rcvr; ;rcvr03 ;rcvr8 ;rcvr!'

- - 'rcvr@ rcvr# rcvr$ rcvr% rcvr^ rcvr& rcvr* rcvr( rcvr_ rcvr= rcvr+ rcvr[ rcvr{ rcvr\\ rcvr| rcvr< rcvr> rcvr` rcvr~ rcvr/'
  - ';rcvr`a ;rcvr_? ;rcvr`s ;rcvr.0 ;rcvr`5 ;rcvr`& ;rcvr"9 ;rcvr"< ;rcvr.- ;rcvr"7 ;rcvr"6 ;rcvr.< ;rcvr_< ;rcvr_* ;rcvr_| ;rcvr`< ;rcvr`> ;rcvr."9 ;rcvr`9 ;rcvr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receiver-xl receiver-([{''"xl receiver-/xl receiver-$xl'
  - 'rcvr-xl rcvr-"<.<{''0xl rcvr-_/xl rcvr-`sxl'

- - 'receiver(xl receiver[xl receiver{xl receiver''xl receiver"xl receiver=([{''"-xl receiver([{''"-xl receiver/-xl receiver$-xl'
  - 'rcvr"<xl rcvr.<xl rcvr{xl rcvr''xl rcvr0xl rcvr"7"<.<{''0-xl rcvr"<.<{''0-xl rcvr/-xl rcvr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receivers [receivers {receivers ''receivers "receivers -receivers'
  - '"<rcvrs .<rcvrs _<rcvrs ,8rcvrs 8rcvrs -rcvrs'

- - '!receivers @receivers #receivers $receivers %receivers ^receivers &receivers *receivers )receivers _receivers =receivers +receivers ]receivers }receivers \\receivers |receivers .receivers ,receivers ;receivers :receivers ?receivers <receivers >receivers'
  - '!rcvrs `arcvrs _?rcvrs `srcvrs .0rcvrs `5rcvrs `&rcvrs "9rcvrs ">rcvrs .-rcvrs "7rcvrs "6rcvrs .>rcvrs _>rcvrs _*rcvrs _|rcvrs 4rcvrs 1rcvrs ;rcvrs0 3rcvrs ;8rcvrs `<rcvrs `>rcvrs'
  - xfail: contraction following special characters is ignored

- - '`receivers ~receivers /receivers'
  - '.*rcvrs `9rcvrs _/rcvrs'
  - xfail: contraction following special characters is ignored

- - 'rcvrs (rcvrs [rcvrs {rcvrs ''rcvrs "rcvrs -rcvrs !rcvrs @rcvrs #rcvrs $rcvrs %rcvrs ^rcvrs &rcvrs *rcvrs )rcvrs _rcvrs =rcvrs +rcvrs ]rcvrs }rcvrs \\rcvrs |rcvrs .rcvrs ,rcvrs ;rcvrs :rcvrs ?rcvrs <rcvrs >rcvrs `rcvrs ~rcvrs /rcvrs'
  - ';rcvrs "<;rcvrs .<;rcvrs _<;rcvrs ,8;rcvrs 8;rcvrs -;rcvrs !;rcvrs `a;rcvrs _?;rcvrs `s;rcvrs .0;rcvrs `5;rcvrs `&;rcvrs "9;rcvrs ">;rcvrs .-;rcvrs "7;rcvrs "6;rcvrs .>;rcvrs _>;rcvrs _*;rcvrs _|;rcvrs 4;rcvrs 1;rcvrs ;2rcvrs0 3;rcvrs ;8;rcvrs `<;rcvrs `>;rcvrs .*;rcvrs `9;rcvrs _/;rcvrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receivers xl-([{''"receivers l/-receivers l$-receivers'
  - 'xl-rcvrs xl-"<.<{''0rcvrs l/-rcvrs l$-rcvrs'

- - 'xl(receivers xl[receivers xl{receivers xl''receivers xl"receivers xl-=([{''"receivers'
  - 'xl"<rcvrs xl.<rcvrs xl{rcvrs xl''rcvrs xl0rcvrs xl-"7"<.<{''0rcvrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receivers) receivers] receivers} receivers'' receivers" receivers- receivers, receivers. receivers; receivers: receivers? receivers!'
  - 'rcvrs"> rcvrs.> rcvrs_> rcvrs,0 rcvrs0 rcvrs- rcvrs1 rcvrs4 rcvrs; rcvrs03 rcvrs8 rcvrs!'

- - 'receivers@ receivers# receivers$ receivers% receivers^ receivers& receivers* receivers( receivers_ receivers= receivers+ receivers[ receivers{ receivers\\ receivers| receivers< receivers> receivers` receivers~ receivers/'
  - 'rcvrs`a rcvrs_? rcvrs`s rcvrs.0 rcvrs`5 rcvrs`& rcvrs"9 rcvrs"< rcvrs.- rcvrs"7 rcvrs"6 rcvrs.< rcvrs_< rcvrs_* rcvrs_| rcvrs`< rcvrs`> rcvrs."9 rcvrs`9 rcvrs/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvrs) rcvrs] rcvrs} rcvrs'' rcvrs" rcvrs- rcvrs, rcvrs. rcvrs; rcvrs: rcvrs? rcvrs! rcvrs@ rcvrs# rcvrs$ rcvrs% rcvrs^ rcvrs& rcvrs* rcvrs( rcvrs_ rcvrs= rcvrs+ rcvrs[ rcvrs{ rcvrs\\ rcvrs| rcvrs< rcvrs> rcvrs` rcvrs~ rcvrs/'
  - ';rcvrs"> ;rcvrs.> ;rcvrs_> ;rcvrs,0 ;rcvrs0 ;rcvrs- ;rcvrs1 ;rcvrs4 ;rcvrs; ;rcvrs03 ;rcvrs8 ;rcvrs! ;rcvrs`a ;rcvrs_? ;rcvrs`s ;rcvrs.0 ;rcvrs`5 ;rcvrs`& ;rcvrs"9 ;rcvrs"< ;rcvrs.- ;rcvrs"7 ;rcvrs"6 ;rcvrs.< ;rcvrs_< ;rcvrs_* ;rcvrs_| ;rcvrs`< ;rcvrs`> ;rcvrs."9 ;rcvrs`9 ;rcvrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receivers-xl receivers-([{''"xl receivers-/xl receivers-$xl'
  - 'rcvrs-xl rcvrs-"<.<{''0xl rcvrs-_/xl rcvrs-`sxl'

- - 'receivers(xl receivers[xl receivers{xl receivers''xl receivers"xl receivers=([{''"-xl receivers([{''"-xl receivers/-xl receivers$-xl'
  - 'rcvrs"<xl rcvrs.<xl rcvrs{xl rcvrs''xl rcvrs0xl rcvrs"7"<.<{''0-xl rcvrs"<.<{''0-xl rcvrs/-xl rcvrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(receives [receives {receives ''receives "receives -receives'
  - '"<rcvs .<rcvs _<rcvs ,8rcvs 8rcvs -rcvs'

- - '!receives @receives #receives $receives %receives ^receives &receives *receives )receives _receives =receives +receives ]receives }receives \\receives |receives .receives ,receives ;receives :receives ?receives <receives >receives `receives ~receives /receives'
  - '!rcvs `arcvs _?rcvs `srcvs .0rcvs `5rcvs `&rcvs "9rcvs ">rcvs .-rcvs "7rcvs "6rcvs .>rcvs _>rcvs _*rcvs _|rcvs 4rcvs 1rcvs ;rcvs0 3rcvs ;8rcvs `<rcvs `>rcvs .*rcvs `9rcvs _/rcvs'
  - xfail: contraction following special characters is ignored

- - 'rcvs  (rcvs [rcvs {rcvs ''rcvs "rcvs -rcvs !rcvs @rcvs #rcvs $rcvs %rcvs ^rcvs &rcvs *rcvs )rcvs _rcvs =rcvs +rcvs ]rcvs }rcvs \\rcvs |rcvs .rcvs ,rcvs ;rcvs :rcvs ?rcvs <rcvs >rcvs `rcvs ~rcvs /rcvs'
  - ';rcvs "<;rcvs .<;rcvs _<;rcvs ,8;rcvs 8;rcvs -;rcvs !;rcvs `a;rcvs _?;rcvs `s;rcvs .0;rcvs `5;rcvs `&;rcvs "9;rcvs ">;rcvs .-;rcvs "7;rcvs "6;rcvs .>;rcvs _>;rcvs _*;rcvs _|;rcvs 4;rcvs 1;rcvs ;2rcvs0 3;rcvs ;8;rcvs `<;rcvs `>;rcvs .*;rcvs `9;rcvs _/;rcvs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-receives xl-([{''"receives l/-receives l$-receives'
  - 'xl-rcvs xl-"<.<{''0rcvs l/-rcvs l$-rcvs'

- - 'xl(receives xl[receives xl{receives xl''receives xl"receives xl-=([{''"receives'
  - 'xl"<rcvs xl.<rcvs xl{rcvs xl''rcvs xl0rcvs xl-"7"<.<{''0rcvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'receives) receives] receives} receives'' receives" receives- receives, receives. receives; receives: receives? receives!'
  - 'rcvs"> rcvs.> rcvs_> rcvs,0 rcvs0 rcvs- rcvs1 rcvs4 rcvs; rcvs03 rcvs8 rcvs!'

- - 'receives@ receives# receives$ receives% receives^ receives& receives* receives( receives_ receives= receives+ receives[ receives{ receives\\ receives| receives< receives> receives` receives~ receives/'
  - 'rcvs`a rcvs_? rcvs`s rcvs.0 rcvs`5 rcvs`& rcvs"9 rcvs"< rcvs.- rcvs"7 rcvs"6 rcvs.< rcvs_< rcvs_* rcvs_| rcvs`< rcvs`> rcvs."9 rcvs`9 rcvs/'
  - xfail: contraction followed by special characters is ignored

- - 'rcvs) rcvs] rcvs} rcvs'' rcvs" rcvs- rcvs, rcvs. rcvs; rcvs: rcvs? rcvs! rcvs@ rcvs# rcvs$ rcvs% rcvs^ rcvs& rcvs* rcvs( rcvs_ rcvs= rcvs+ rcvs[ rcvs{ rcvs\\ rcvs| rcvs< rcvs> rcvs` rcvs~ rcvs/'
  - ';rcvs"> ;rcvs.> ;rcvs_> ;rcvs,0 ;rcvs0 ;rcvs- ;rcvs1 ;rcvs4 ;rcvs; ;rcvs03 ;rcvs8 ;rcvs! ;rcvs`a ;rcvs_? ;rcvs`s ;rcvs.0 ;rcvs`5 ;rcvs`& ;rcvs"9 ;rcvs"< ;rcvs.- ;rcvs"7 ;rcvs"6 ;rcvs.< ;rcvs_< ;rcvs_* ;rcvs_| ;rcvs`< ;rcvs`> ;rcvs."9 ;rcvs`9 ;rcvs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'receives-xl receives-([{''"xl receives-/xl receives-$xl'
  - 'rcvs-xl rcvs-"<.<{''0xl rcvs-_/xl rcvs-`sxl'

- - 'receives(xl receives[xl receives{xl receives''xl receives"xl receives=([{''"-xl receives([{''"-xl receives/-xl receives$-xl'
  - 'rcvs"<xl rcvs.<xl rcvs{xl rcvs''xl rcvs0xl rcvs"7"<.<{''0-xl rcvs"<.<{''0-xl rcvs/-xl rcvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoice [rejoice {rejoice ''rejoice "rejoice -rejoice'
  - '"<rjc .<rjc _<rjc ,8rjc 8rjc -rjc'

- - '!rejoice @rejoice #rejoice $rejoice %rejoice ^rejoice &rejoice *rejoice )rejoice _rejoice =rejoice +rejoice ]rejoice }rejoice \\rejoice |rejoice .rejoice ,rejoice ;rejoice :rejoice ?rejoice <rejoice >rejoice `rejoice ~rejoice /rejoice'
  - '!rjc `arjc _?rjc `srjc .0rjc `5rjc `&rjc "9rjc ">rjc .-rjc "7rjc "6rjc .>rjc _>rjc _*rjc _|rjc 4rjc 1rjc ;rjc0 3rjc ;8rjc `<rjc `>rjc ;8rjc .*rjc `9rjc _/rjc'
  - xfail: contraction following special characters is ignored

- - '(rjc [rjc {rjc ''rjc "rjc -rjc'
  - '"<;rjc .<;rjc _<;rjc ,8;rjc 8;rjc -;rjc'

- - '!rjc @rjc #rjc $rjc %rjc ^rjc &rjc *rjc )rjc _rjc =rjc +rjc ]rjc }rjc \\rjc |rjc .rjc ,rjc ;rjc :rjc ?rjc <rjc >rjc ?rjc `rjc ~rjc /rjc'
  - '!;rjc `a;rjc _?;rjc `s;rjc .0;rjc `5;rjc `&;rjc "9;rjc ">;rjc .-;rjc "7;rjc "6;rjc .>;rjc _>;rjc _*;rjc _|;rjc 4;rjc 1;rjc ;2rjc0 3;rjc ;8;rjc `<;rjc `>;rjc .*;rjc `9;rjc _/;rjc'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoice xl-([{''"rejoice l/-rejoice l$-rejoice'
  - 'xl-rjc xl-"<.<{''0rjc l/-rjc l$-rjc'

- - 'xl(rejoice xl[rejoice xl{rejoice xl''rejoice xl"rejoice xl-=([{''"rejoice'
  - 'xl"<rjc xl.<rjc xl{rjc xl''rjc xl0rjc xl-"7"<.<{''0rjc'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoice) rejoice] rejoice} rejoice'' rejoice" rejoice- rejoice, rejoice. rejoice; rejoice: rejoice? rejoice!'
  - 'rjc"> rjc.> rjc_> rjc,0 rjc0 rjc- rjc1 rjc4 rjc; rjc03 rjc8 rjc!'

- - 'rejoice@ rejoice# rejoice$ rejoice% rejoice^ rejoice& rejoice* rejoice( rejoice_ rejoice= rejoice+ rejoice[ rejoice{ rejoice\\ rejoice| rejoice< rejoice> rejoice` rejoice~ rejoice/'
  - 'rjc`a rjc_? rjc`s rjc.0 rjc`5 rjc`& rjc"9 rjc"< rjc.- rjc"7 rjc"6 rjc.< rjc_< rjc_* rjc_| rjc`< rjc`> rjc."9 rjc`9 rjc/'
  - xfail: contraction followed by special characters is ignored

- - 'rjc) rjc] rjc} rjc'' rjc" rjc- rjc, rjc. rjc; rjc: rjc? rjc!'
  - ';rjc"> ;rjc.> ;rjc_> ;rjc,0 ;rjc0 ;rjc- ;rjc1 ;rjc4 ;rjc; ;rjc03 ;rjc8 ;rjc!'

- - 'rjc@ rjc# rjc$ rjc% rjc^ rjc& rjc* rjc( rjc_ rjc= rjc+ rjc[ rjc{ rjc\\ rjc| rjc< rjc> rjc` rjc~ rjc/'
  - ';rjc`a ;rjc_? ;rjc`s ;rjc.0 ;rjc`5 ;rjc`& ;rjc"9 ;rjc"< ;rjc.- ;rjc"7 ;rjc"6 ;rjc.< ;rjc_< ;rjc_* ;rjc_| ;rjc`< ;rjc`> ;rjc."9 ;rjc`9 ;rjc/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoice-xl rejoice-([{''"xl rejoice-/xl rejoice-$xl'
  - 'rjc-xl rjc-"<.<{''0xl rjc-_/xl rjc-`sxl'

- - 'rejoice(xl rejoice[xl rejoice{xl rejoice''xl rejoice"xl rejoice=([{''"-xl rejoice([{''"-xl rejoice/-xl rejoice$-xl'
  - 'rjc"<xl rjc.<xl rjc{xl rjc''xl rjc0xl rjc"7"<.<{''0-xl rjc"<.<{''0-xl rjc/-xl rjc`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoiced [rejoiced {rejoiced ''rejoiced "rejoiced -rejoiced'
  - '"<rjcd .<rjcd _<rjcd ,8rjcd 8rjcd -rjcd'

- - '!rejoiced @rejoiced #rejoiced $rejoiced %rejoiced ^rejoiced &rejoiced *rejoiced )rejoiced _rejoiced =rejoiced +rejoiced ]rejoiced }rejoiced \\rejoiced |rejoiced .rejoiced ,rejoiced ;rejoiced :rejoiced ?rejoiced <rejoiced >rejoiced `rejoiced ~rejoiced /rejoiced'
  - '!rjcd `arjcd _?rjcd $rjcd .0rjcd `5rjcd `&rjcd "9rjcd ">rjcd .-rjcd "7rjcd "6rjcd .>rjcd _>rjcd _*rjcd _|rjcd 4rjcd 1rjcd ;rjcd0 3rjcd ;8rjcd `<rjcd `>rjcd .*rjcd `9rjcd _/rjcd'
  - xfail: contraction following special characters is ignored

- - '(rjcd [rjcd {rjcd ''rjcd "rjcd -rjcd'
  - '"<;rjcd .<;rjcd _<;rjcd ,8;rjcd 8;rjcd -;rjcd'

- - '!rjcd @rjcd #rjcd $rjcd %rjcd ^rjcd &rjcd *rjcd )rjcd _rjcd =rjcd +rjcd ]rjcd }rjcd \\rjcd |rjcd .rjcd ,rjcd ;rjcd :rjcd ?rjcd <rjcd >rjcd `rjcd ~rjcd /rjcd'
  - '!;rjcd `a;rjcd _?;rjcd `s;rjcd .0;rjcd `5;rjcd `&;rjcd "9;rjcd ">;rjcd .-;rjcd "7;rjcd "6;rjcd .>;rjcd _>;rjcd _*;rjcd _|;rjcd 4;rjcd 1;rjcd ;2rjcd0 3;rjcd ;8;rjcd `<;rjcd `>;rjcd .*;rjcd `9;rjcd _/;rjcd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoiced xl-([{''"rejoiced l/-rejoiced l$-rejoiced'
  - 'xl-rjcd xl-"<.<{''0rjcd l/-rjcd l$-rjcd'

- - 'xl(rejoiced xl[rejoiced xl{rejoiced xl''rejoiced xl"rejoiced xl-=([{''"rejoiced'
  - 'xl"<rjcd xl.<rjcd xl{rjcd xl''rjcd xl0rjcd xl-"7"<.<{''0rjcd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoiced) rejoiced] rejoiced} rejoiced'' rejoiced" rejoiced- rejoiced, rejoiced. rejoiced; rejoiced: rejoiced? rejoiced!'
  - 'rjcd"> rjcd.> rjcd_> rjcd,0 rjcd0 rjcd- rjcd1 rjcd4 rjcd; rjcd03 rjcd8 rjcd!'

- - 'rejoiced@ rejoiced# rejoiced$ rejoiced% rejoiced^ rejoiced& rejoiced* rejoiced( rejoiced_ rejoiced= rejoiced+ rejoiced[ rejoiced{ rejoiced\\ rejoiced| rejoiced< rejoiced> rejoiced` rejoiced~ rejoiced/'
  - 'rjcd`a rjcd_? rjcd`s rjcd.0 rjcd`5 rjcd`& rjcd"9 rjcd"< rjcd.- rjcd"7 rjcd"6 rjcd.< rjcd_< rjcd_* rjcd_| rjcd`< rjcd`> rjcd."9 rjcd`9 rjcd/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcd) rjcd] rjcd} rjcd'' rjcd" rjcd- rjcd, rjcd. rjcd; rjcd: rjcd? rjcd!'
  - ';rjcd"> ;rjcd.> ;rjcd_> ;rjcd,0 ;rjcd0 ;rjcd- ;rjcd1 ;rjcd4 ;rjcd; ;rjcd03 ;rjcd8 ;rjcd!'

- - 'rjcd@ rjcd# rjcd$ rjcd% rjcd^ rjcd& rjcd* rjcd( rjcd_ rjcd= rjcd+ rjcd[ rjcd{ rjcd\\ rjcd| rjcd< rjcd> rjcd` rjcd~ rjcd/'
  - ';rjcd`a ;rjcd_? ;rjcd`s ;rjcd.0 ;rjcd`5 ;rjcd`& ;rjcd"9 ;rjcd"< ;rjcd.- ;rjcd"7 ;rjcd"6 ;rjcd.< ;rjcd_< ;rjcd_* ;rjcd_| ;rjcd`< ;rjcd`> ;rjcd."9 ;rjcd`9 ;rjcd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoiced-xl rejoiced-([{''"xl rejoiced-/xl rejoiced-$xl'
  - 'rjcd-xl rjcd-"<.<{''0xl rjcd-_/xl rjcd-`sxl'

- - 'rejoiced(xl rejoiced[xl rejoiced{xl rejoiced''xl rejoiced"xl rejoiced=([{''"-xl rejoiced([{''"-xl rejoiced/-xl rejoiced$-xl'
  - 'rjcd"<xl rjcd.<xl rjcd{xl rjcd''xl rjcd0xl rjcd"7"<.<{''0-xl rjcd"<.<{''0-xl rjcd/-xl rjcd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicing [rejoicing {rejoicing ''rejoicing "rejoicing -rejoicing'
  - '"<rjcg .<rjcg _<rjcg ,8rjcg 8rjcg -rjcg'

- - '!rejoicing @rejoicing #rejoicing $rejoicing %rejoicing ^rejoicing &rejoicing *rejoicing )rejoicing _rejoicing =rejoicing +rejoicing ]rejoicing }rejoicing \\rejoicing |rejoicing .rejoicing ,rejoicing ;rejoicing :rejoicing ?rejoicing <rejoicing >rejoicing'
  - '!rjcg `arjcg _?rjcg `srjcg .0rjcg `5rjcg `&rjcg "9rjcg ">rjcg .-rjcg "7rjcg +rjcg .>rjcg _>rjcg _*rjcg _|rjcg 4rjcg 1rjcg ;rjcg0 3rjcg ;8rjcg `<rjcg `>rjcg'
  - xfail: contraction following special characters is ignored

- - '`rejoicing ~rejoicing /rejoicing'
  - '.*rjcg `9rjcg _/rjcg'
  - xfail: contraction following special characters is ignored

- - '(rjcg [rjcg {rjcg ''rjcg "rjcg -rjcg'
  - '"<;rjcg .<;rjcg _<;rjcg ,8;rjcg 8;rjcg -;rjcg'

- - '!rjcg @rjcg #rjcg $rjcg %rjcg ^rjcg &rjcg *rjcg )rjcg _rjcg =rjcg +rjcg ]rjcg }rjcg \\rjcg |rjcg .rjcg ,rjcg ;rjcg :rjcg ?rjcg <rjcg >rjcg `rjcg ~rjcg /rjcg'
  - '!;rjcg `a;rjcg _?;rjcg `s;rjcg .0;rjcg `5;rjcg `&;rjcg "9;rjcg ">;rjcg .-;rjcg "7;rjcg "6;rjcg .>;rjcg _>;rjcg _*;rjcg _|;rjcg 4;rjcg 1;rjcg ;2rjcg0 3;rjcg ;8;rjcg `<;rjcg `>;rjcg .*;rjcg `9;rjcg _/;rjcg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicing xl-([{''"rejoicing l/-rejoicing l$-rejoicing'
  - 'xl-rjcg xl-"<.<{''0rjcg l/-rjcg l$-rjcg'

- - 'xl(rejoicing xl[rejoicing xl{rejoicing xl''rejoicing xl"rejoicing xl-=([{''"rejoicing'
  - 'xl"<rjcg xl.<rjcg xl{rjcg xl''rjcg xl0rjcg xl-"7"<.<{''0rjcg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicing) rejoicing] rejoicing} rejoicing'' rejoicing" rejoicing- rejoicing, rejoicing. rejoicing; rejoicing: rejoicing? rejoicing!'
  - 'rjcg"> rjcg.> rjcg_> rjcg,0 rjcg0 rjcg- rjcg1 rjcg4 rjcg; rjcg03 rjcg8 rjcg!'

- - 'rejoicing@ rejoicing# rejoicing$ rejoicing% rejoicing^ rejoicing& rejoicing* rejoicing( rejoicing_ rejoicing= rejoicing+ rejoicing[ rejoicing{ rejoicing\\ rejoicing| rejoicing< rejoicing> rejoicing` rejoicing~ rejoicing/'
  - 'rjcg`a rjcg_? rjcg`s rjcg.0 rjcg`5 rjcg`& rjcg"9 rjcg"< rjcg.- rjcg"7 rjcg+ rjcg.< rjcg_< rjcg_* rjcg_| rjcg`< rjcg`> rjcg."9 rjcg`9 rjcg/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcg) rjcg] rjcg} rjcg'' rjcg" rjcg- rjcg, rjcg. rjcg; rjcg: rjcg? rjcg!'
  - ';rjcg"> ;rjcg.> ;rjcg_> ;rjcg,0 ;rjcg0 ;rjcg- ;rjcg1 ;rjcg4 ;rjcg; ;rjcg03 ;rjcg8 ;rjcg!'

- - 'rjcg@ rjcg# rjcg$ rjcg% rjcg^ rjcg& rjcg* rjcg( rjcg_ rjcg= rjcg+ rjcg[ rjcg{ rjcg\\ rjcg| rjcg< rjcg> rjcg` rjcg~ rjcg/'
  - ';rjcg`a ;rjcg_? ;rjcg`s ;rjcg.0 ;rjcg`5 ;rjcg`& ;rjcg"9 ;rjcg"< ;rjcg.- ;rjcg"7 ;rjcg"6 ;rjcg.< ;rjcg_< ;rjcg_* ;rjcg_| ;rjcg`< ;rjcg`> ;rjcg."9 ;rjcg`9 ;rjcg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicing-xl rejoicing-([{''"xl rejoicing-/xl rejoicing-$xl'
  - 'rjcg-xl rjcg-"<.<{''0xl rjcg-_/xl rjcg-`sxl'

- - 'rejoicing(xl rejoicing[xl rejoicing{xl rejoicing''xl rejoicing"xl rejoicing=([{''"-xl rejoicing([{''"-xl rejoicing/-xl rejoicing$-xl'
  - 'rjcg"<xl rjcg.<xl rjcg{xl rjcg''xl rjcg0xl rjcg"7"<.<{''0-xl rjcg"<.<{''0-xl rjcg/-xl rjcg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicingly [rejoicingly {rejoicingly ''rejoicingly "rejoicingly -rejoicingly'
  - '"<rjcgly .<rjcgly _<rjcgly ,8rjcgly 8rjcgly -rjcgly'

- - '!rejoicingly @rejoicingly #rejoicingly $rejoicingly %rejoicingly ^rejoicingly &rejoicingly *rejoicingly )rejoicingly _rejoicingly =rejoicingly +rejoicingly ]rejoicingly }rejoicingly \\rejoicingly |rejoicingly .rejoicingly ,rejoicingly ;rejoicingly :rejoicingly'
  - '!rjcgly `arjcgly _?rjcgly `srjcgly .0rjcgly `5rjcgly `&rjcgly "9rjcgly ">rjcgly .-rjcgly "7rjcgly +rjcgly .>rjcgly _>rjcgly _*rjcgly _|rjcgly 4rjcgly 1rjcgly ;rjcgly0 3rjcgly'
  - xfail: contraction following special characters is ignored

- - '?rejoicingly <rejoicingly >rejoicingly `rejoicingly ~rejoicingly /rejoicingly'
  - ';8rjcgly `<rjcgly `>rjcgly .*rjcgly `9rjcgly _/rjcgly'
  - xfail: contraction following special characters is ignored

- - '(rjcgly [rjcgly {rjcgly ''rjcgly "rjcgly -rjcgly'
  - '"<;rjcgly .<;rjcgly _<;rjcgly ,8;rjcgly 8;rjcgly -;rjcgly'

- - '!rjcgly @rjcgly #rjcgly $rjcgly %rjcgly ^rjcgly &rjcgly *rjcgly )rjcgly _rjcgly =rjcgly +rjcgly ]rjcgly }rjcgly \\rjcgly |rjcgly .rjcgly ,rjcgly ;rjcgly :rjcgly ?rjcgly <rjcgly >rjcgly `rjcgly ~rjcgly /rjcgly'
  - '!;rjcgly `a;rjcgly _?;rjcgly `s;rjcgly .0;rjcgly `5;rjcgly `&;rjcgly "9;rjcgly ">;rjcgly .-;rjcgly "7;rjcgly "6;rjcgly .>;rjcgly _>;rjcgly _*;rjcgly _|;rjcgly 4;rjcgly 1;rjcgly ;2rjcgly0 3;rjcgly ;8;rjcgly `<;rjcgly `>;rjcgly .*;rjcgly `9;rjcgly _/;rjcgly'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicingly xl-([{''"rejoicingly l/-rejoicingly l$-rejoicingly'
  - 'xl-rjcgly xl-"<.<{''0rjcgly l/-rjcgly l$-rjcgly'

- - 'xl(rejoicingly xl[rejoicingly xl{rejoicingly xl''rejoicingly xl"rejoicingly xl-=([{''"rejoicingly'
  - 'xl"<rjcgly xl.<rjcgly xl{rjcgly xl''rjcgly xl0rjcgly xl-"7"<.<{''0rjcgly'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicingly) rejoicingly] rejoicingly} rejoicingly'' rejoicingly" rejoicingly- rejoicingly, rejoicingly. rejoicingly; rejoicingly: rejoicingly? rejoicingly!'
  - 'rjcgly"> rjcgly.> rjcgly_> rjcgly,0 rjcgly0 rjcgly- rjcgly1 rjcgly4 rjcgly; rjcgly03 rjcgly8 rjcgly!'

- - 'rejoicingly@ rejoicingly# rejoicingly$ rejoicingly% rejoicingly^ rejoicingly& rejoicingly* rejoicingly( rejoicingly_ rejoicingly= rejoicingly+ rejoicingly[ rejoicingly{ rejoicingly\\ rejoicingly| rejoicingly< rejoicingly> rejoicingly` rejoicingly~ rejoicingly/'
  - 'rjcgly`a rjcgly_? rjcgly`s rjcgly.0 rjcgly`5 rjcgly`& rjcgly"9 rjcgly"< rjcgly.- rjcgly"7 rjcgly+ rjcgly.< rjcgly_< rjcgly_* rjcgly_| rjcgly`< rjcgly`> rjcgly."9 rjcgly`9 rjcgly/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcgly) rjcgly] rjcgly} rjcgly'' rjcgly" rjcgly- rjcgly, rjcgly. rjcgly; rjcgly: rjcgly? rjcgly!'
  - ';rjcgly"> ;rjcgly.> ;rjcgly_> ;rjcgly,0 ;rjcgly0 ;rjcgly- ;rjcgly1 ;rjcgly4 ;rjcgly; ;rjcgly03 ;rjcgly8 ;rjcgly!'

- - 'rjcgly@ rjcgly# rjcgly$ rjcgly% rjcgly^ rjcgly& rjcgly* rjcgly( rjcgly_ rjcgly= rjcgly+ rjcgly[ rjcgly{ rjcgly\\ rjcgly| rjcgly< rjcgly> rjcgly` rjcgly~ rjcgly/'
  - ';rjcgly`a ;rjcgly_? ;rjcgly`s ;rjcgly.0 ;rjcgly`5 ;rjcgly`& ;rjcgly"9 ;rjcgly"< ;rjcgly.- ;rjcgly"7 ;rjcgly"6 ;rjcgly.< ;rjcgly_< ;rjcgly_* ;rjcgly_| ;rjcgly`< ;rjcgly`> ;rjcgly."9 ;rjcgly`9 ;rjcgly/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicingly-xl rejoicingly-([{''"xl rejoicingly-/xl rejoicingly-$xl'
  - 'rjcgly-xl rjcgly-"<.<{''0xl rjcgly-_/xl rjcgly-`sxl'

- - 'rejoicingly(xl rejoicingly[xl rejoicingly{xl rejoicingly''xl rejoicingly"xl rejoicingly=([{''"-xl rejoicingly([{''"-xl rejoicingly/-xl rejoicingly$-xl'
  - 'rjcgly"<xl rjcgly.<xl rjcgly{xl rjcgly''xl rjcgly0xl rjcgly"7"<.<{''0-xl rjcgly"<.<{''0-xl rjcgly/-xl rjcgly`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicinglys [rejoicinglys {rejoicinglys ''rejoicinglys "rejoicinglys -rejoicinglys'
  - '"<rjcglys .<rjcglys _<rjcglys ,8rjcglys 8rjcglys -rjcglys'

- - '!rejoicinglys @rejoicinglys #rejoicinglys $rejoicinglys %rejoicinglys ^rejoicinglys &rejoicinglys *rejoicinglys )rejoicinglys _rejoicinglys =rejoicinglys +rejoicinglys ]rejoicinglys }rejoicinglys \\rejoicinglys |rejoicinglys .rejoicinglys ,rejoicinglys'
  - '!rjcglys `arjcglys _?rjcglys `srjcglys .0rjcglys `5rjcglys `&rjcglys "9rjcglys ">rjcglys .-rjcglys "7rjcglys +rjcglys .>rjcglys _>rjcglys _*rjcglys _|rjcglys 4rjcglys 1rjcglys'
  - xfail: contraction following special characters is ignored

- - ';rejoicinglys :rejoicinglys ?rejoicinglys <rejoicinglys >rejoicinglys `rejoicinglys ~rejoicinglys /rejoicinglys'
  - ';rjcglys0 3rjcglys ;8rjcglys `<rjcglys `>rjcglys .*rjcglys `9rjcglys _/rjcglys'
  - xfail: contraction following special characters is ignored

- - 'rjcgly (rjcglys [rjcglys {rjcglys ''rjcglys "rjcglys -rjcglys !rjcglys @rjcglys #rjcglys $rjcglys %rjcglys ^rjcglys &rjcglys *rjcglys )rjcglys _rjcglys =rjcglys +rjcglys ]rjcglys }rjcglys \\rjcglys |rjcglys .rjcglys ,rjcglys ;rjcglys'
  - ';rjcgly "<;rjcglys .<;rjcglys _<;rjcglys ,8;rjcglys 8;rjcglys -;rjcglys !;rjcglys `a;rjcglys _?;rjcglys `s;rjcglys .0;rjcglys `5;rjcglys `&;rjcglys "9;rjcglys ">;rjcglys .-;rjcglys "7;rjcglys "6;rjcglys .>;rjcglys _>;rjcglys _*;rjcglys _|;rjcglys 4;rjcglys 1;rjcglys ;2rjcglys'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - ':rjcglys ?rjcglys <rjcglys >rjcglys `rjcglys ~rjcglys /rjcglys'
  - '8 3;rjcglys ;8;rjcglys `<;rjcglys `>;rjcglys .*;rjcglys `9;rjcglys _/;rjcglys'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicinglys xl-([{''"rejoicinglys l/-rejoicinglys l$-rejoicinglys'
  - 'xl-rjcglys xl-"<.<{''0rjcglys l/-rjcglys l$-rjcglys'

- - 'xl(rejoicinglys xl[rejoicinglys xl{rejoicinglys xl''rejoicinglys xl"rejoicinglys xl-=([{''"rejoicinglys'
  - 'xl"<rjcglys xl.<rjcglys xl{rjcglys xl''rjcglys xl0rjcglys xl-"7"<.<{''0rjcglys'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicinglys) rejoicinglys] rejoicinglys} rejoicinglys'' rejoicinglys" rejoicinglys- rejoicinglys, rejoicinglys. rejoicinglys; rejoicinglys: rejoicinglys? rejoicinglys!'
  - 'rjcglys"> rjcglys.> rjcglys_> rjcglys,0 rjcglys0 rjcglys- rjcglys1 rjcglys4 rjcglys; rjcglys03 rjcglys8 rjcglys!'

- - 'rejoicinglys@ rejoicinglys# rejoicinglys$ rejoicinglys% rejoicinglys^ rejoicinglys& rejoicinglys* rejoicinglys( rejoicinglys_ rejoicinglys= rejoicinglys+ rejoicinglys[ rejoicinglys{ rejoicinglys\\ rejoicinglys| rejoicinglys< rejoicinglys> rejoicinglys`'
  - 'rjcglys`a rjcglys_? rjcglys`s rjcglys.0 rjcglys`5 rjcglys`& rjcglys"9 rjcglys"< rjcglys.- rjcglys"7 rjcglys+ rjcglys.< rjcglys_< rjcglys_* rjcglys_| rjcglys`< rjcglys`> rjcglys.*'
  - xfail: contraction followed by special characters is ignored

- - 'rejoicinglys~ rejoicinglys/'
  - 'rjcglys`9 rjcglys/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcglys) rjcglys] rjcglys} rjcglys'' rjcglys" rjcglys- rjcglys, rjcglys. rjcglys; rjcglys: rjcglys? rjcglys! rjcglys@ rjcglys# rjcglys$ rjcglys% rjcglys^ rjcglys& rjcglys* rjcglys( rjcglys_ rjcglys= rjcglys+ rjcglys[ rjcglys{ rjcglys\\'
  - ';rjcglys"> ;rjcglys.> ;rjcglys_> ;rjcglys,0 ;rjcglys0 ;rjcglys- ;rjcglys1 ;rjcglys4 ;rjcglys; ;rjcglys03 ;rjcglys8 ;rjcglys! ;rjcglys`a ;rjcglys_? ;rjcglys`s ;rjcglys.0 ;rjcglys`5 ;rjcglys`& ;rjcglys"9 ;rjcglys"< ;rjcglys.- ;rjcglys"7 ;rjcglys"6 ;rjcglys.< ;rjcglys_< ;rjcglys_*'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rjcglys| rjcglys< rjcglys> rjcglys` rjcglys~ rjcglys/'
  - ';rjcglys_| ;rjcglys`< ;rjcglys`> ;rjcglys."9 ;rjcglys`9 ;rjcglys/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicinglys-xl rejoicinglys-([{''"xl rejoicinglys-/xl rejoicinglys-$xl'
  - 'rjcglys-xl rjcglys-"<.<{''0xl rjcglys-_/xl rjcglys-`sxl'

- - 'rejoicinglys(xl rejoicinglys[xl rejoicinglys{xl rejoicinglys''xl rejoicinglys"xl rejoicinglys=([{''"-xl rejoicinglys([{''"-xl rejoicinglys/-xl rejoicinglys$-xl'
  - 'rjcglys"<xl rjcglys.<xl rjcglys{xl rjcglys''xl rjcglys0xl rjcglys"7"<.<{''0-xl rjcglys"<.<{''0-xl rjcglys/-xl rjcglys`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicer [rejoicer {rejoicer ''rejoicer "rejoicer -rejoicer'
  - '"<rjcr .<rjcr _<rjcr ,8rjcr 8rjcr -rjcr'

- - '!rejoicer @rejoicer #rejoicer $rejoicer %rejoicer ^rejoicer &rejoicer *rejoicer )rejoicer _rejoicer =rejoicer +rejoicer ]rejoicer }rejoicer \\rejoicer |rejoicer .rejoicer ,rejoicer ;rejoicer :rejoicer ?rejoicer <rejoicer >rejoicer `rejoicer ~rejoicer /rejoicer'
  - '!rjcr `arjcr _?rjcr `srjcr .0rjcr `5rjcr `&rjcr "9rjcr ">rjcr .-rjcr "7rjcr "6rjcr .>rjcr }rjcr _*rjcr _|rjcr 4rjcr 1rjcr ;rjcr0 3rjcr ;8rjcr `<rjcr `>rjcr .*rjcr `9rjcr _/rjcr'
  - xfail: contraction following special characters is ignored

- - '(rjcr [rjcr {rjcr ''rjcr "rjcr -rjcr'
  - '"<;rjcr .<;rjcr _<;rjcr ,8;rjcr 8;rjcr -;rjcr'

- - '!rjcr @rjcr #rjcr $rjcr %rjcr ^rjcr &rjcr *rjcr )rjcr _rjcr =rjcr +rjcr ]rjcr }rjcr \\rjcr |rjcr .rjcr ,rjcr ;rjcr :rjcr ?rjcr <rjcr >rjcr `rjcr ~rjcr /rjcr'
  - '!;rjcr `a;rjcr _?;rjcr `s;rjcr .0;rjcr `5;rjcr `&;rjcr "9;rjcr ">;rjcr .-;rjcr "7;rjcr "6;rjcr .>;rjcr _>;rjcr _*;rjcr _|;rjcr 4;rjcr 1;rjcr ;2rjcr0 3;rjcr ;8;rjcr `<;rjcr `>;rjcr .*;rjcr `9;rjcr _/;rjcr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicer xl-([{''"rejoicer l/-rejoicer l$-rejoicer'
  - 'xl-rjcr xl-"<.<{''0rjcr l/-rjcr l$-rjcr'

- - 'xl(rejoicer xl[rejoicer xl{rejoicer xl''rejoicer xl"rejoicer xl-=([{''"rejoicer'
  - 'xl"<rjcr xl.<rjcr xl{rjcr xl''rjcr xl0rjcr xl-"7"<.<{''0rjcr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicer) rejoicer] rejoicer} rejoicer'' rejoicer" rejoicer- rejoicer, rejoicer. rejoicer; rejoicer: rejoicer? rejoicer!'
  - 'rjcr"> rjcr.> rjcr_> rjcr,0 rjcr0 rjcr- rjcr1 rjcr4 rjcr; rjcr03 rjcr8 rjcr!'

- - 'rejoicer@ rejoicer# rejoicer$ rejoicer% rejoicer^ rejoicer& rejoicer* rejoicer( rejoicer_ rejoicer= rejoicer+ rejoicer[ rejoicer{ rejoicer\\ rejoicer| rejoicer< rejoicer> rejoicer` rejoicer~ rejoicer/'
  - 'rjcr`a rjcr_? rjcr`s rjcr.0 rjcr`5 rjcr`& rjcr"9 rjcr"< rjcr.- rjcr"7 rjcr"6 rjcr.< rjcr_< rjcr_* rjcr_| rjcr`< rjcr`> rjcr."9 rjcr`9 rjcr/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcr) rjcr] rjcr} rjcr'' rjcr" rjcr- rjcr, rjcr. rjcr; rjcr: rjcr? rjcr!'
  - ';rjcr"> ;rjcr.> ;rjcr_> ;rjcr,0 ;rjcr0 ;rjcr- ;rjcr1 ;rjcr4 ;rjcr; ;rjcr03 ;rjcr8 ;rjcr!'

- - 'rjcr@ rjcr# rjcr$ rjcr% rjcr^ rjcr& rjcr* rjcr( rjcr_ rjcr= rjcr+ rjcr[ rjcr{ rjcr\\ rjcr| rjcr< rjcr> rjcr` rjcr~ rjcr/'
  - ';rjcr`a ;rjcr_? ;rjcr`s ;rjcr.0 ;rjcr`5 ;rjcr`& ;rjcr"9 ;rjcr"< ;rjcr.- ;rjcr"7 ;rjcr"6 ;rjcr.< ;rjcr_< ;rjcr_* ;rjcr_| ;rjcr`< ;rjcr`> ;rjcr."9 ;rjcr`9 ;rjcr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicer-xl rejoicer-([{''"xl rejoicer-/xl rejoicer-$xl'
  - 'rjcr-xl rjcr-"<.<{''0xl rjcr-_/xl rjcr-`sxl'

- - 'rejoicer(xl rejoicer[xl rejoicer{xl rejoicer''xl rejoicer"xl rejoicer=([{''"-xl rejoicer([{''"-xl rejoicer/-xl rejoicer$-xl'
  - 'rjcr"<xl rjcr.<xl rjcr{xl rjcr''xl rjcr0xl rjcr"7"<.<{''0-xl rjcr"<.<{''0-xl rjcr/-xl rjcr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoicers [rejoicers {rejoicers ''rejoicers "rejoicers -rejoicers'
  - '"<rjcrs .<rjcrs _<rjcrs ,8rjcrs 8rjcrs -rjcrs'

- - '!rejoicers @rejoicers #rejoicers $rejoicers %rejoicers ^rejoicers &rejoicers *rejoicers )rejoicers _rejoicers =rejoicers +rejoicers ]rejoicers }rejoicers \\rejoicers |rejoicers .rejoicers ,rejoicers ;rejoicers :rejoicers ?rejoicers <rejoicers >rejoicers'
  - '!rjcrs `arjcrs _?rjcrs `srjcrs .0rjcrs `5rjcrs `&rjcrs "9rjcrs ">rjcrs .-rjcrs "7rjcrs "6rjcrs .>rjcrs _>rjcrs _*rjcrs _|rjcrs 4rjcrs 1rjcrs ;rjcrs0 3rjcrs ;8rjcrs `<rjcrs `>rjcrs'
  - xfail: contraction following special characters is ignored

- - '`rejoicers ~rejoicers /rejoicers'
  - '.*rjcrs `9rjcrs _/rjcrs'
  - xfail: contraction following special characters is ignored

- - 'rjcrs (rjcrs [rjcrs {rjcrs ''rjcrs "rjcrs -rjcrs !rjcrs @rjcrs #rjcrs $rjcrs %rjcrs ^rjcrs &rjcrs *rjcrs )rjcrs _rjcrs =rjcrs +rjcrs ]rjcrs }rjcrs \\rjcrs |rjcrs .rjcrs ,rjcrs ;rjcrs :rjcrs ?rjcrs <rjcrs >rjcrs `rjcrs ~rjcrs /rjcrs'
  - ';rjcrs "<;rjcrs .<;rjcrs _<;rjcrs ,8;rjcrs 8;rjcrs -;rjcrs !;rjcrs `a;rjcrs _?;rjcrs `s;rjcrs .0;rjcrs `5;rjcrs `&;rjcrs "9;rjcrs ">;rjcrs .-;rjcrs "7;rjcrs "6;rjcrs .>;rjcrs _>;rjcrs _*;rjcrs _|;rjcrs 4;rjcrs 1;rjcrs ;2rjcrs0 3;rjcrs ;8;rjcrs `<;rjcrs `>;rjcrs .*;rjcrs `9;rjcrs _/;rjcrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoicers xl-([{''"rejoicers l/-rejoicers l$-rejoicers'
  - 'xl-rjcrs xl-"<.<{''0rjcrs l/-rjcrs l$-rjcrs'

- - 'xl(rejoicers xl[rejoicers xl{rejoicers xl''rejoicers xl"rejoicers xl-=([{''"rejoicers'
  - 'xl"<rjcrs xl.<rjcrs xl{rjcrs xl''rjcrs xl0rjcrs xl-"7"<.<{''0rjcrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoicers) rejoicers] rejoicers} rejoicers'' rejoicers" rejoicers- rejoicers, rejoicers. rejoicers; rejoicers: rejoicers? rejoicers!'
  - 'rjcrs"> rjcrs.> rjcrs_> rjcrs,0 rjcrs0 rjcrs- rjcrs1 rjcrs4 rjcrs; rjcrs03 rjcrs8 rjcrs!'

- - 'rejoicers@ rejoicers# rejoicers$ rejoicers% rejoicers^ rejoicers& rejoicers* rejoicers( rejoicers_ rejoicers= rejoicers+ rejoicers[ rejoicers{ rejoicers\\ rejoicers| rejoicers< rejoicers> rejoicers` rejoicers~ rejoicers/'
  - 'rjcrs`a rjcrs_? rjcrs`s rjcrs.0 rjcrs`5 rjcrs`& rjcrs"9 rjcrs"< rjcrs.- rjcrs"7 rjcrs"6 rjcrs.< rjcrs_< rjcrs_* rjcrs_| rjcrs`< rjcrs`> rjcrs."9 rjcrs`9 rjcrs/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcrs) rjcrs] rjcrs} rjcrs'' rjcrs" rjcrs- rjcrs, rjcrs. rjcrs; rjcrs: rjcrs? rjcrs! rjcrs@ rjcrs# rjcrs$ rjcrs% rjcrs^ rjcrs& rjcrs* rjcrs( rjcrs_ rjcrs= rjcrs+ rjcrs[ rjcrs{ rjcrs\\ rjcrs| rjcrs< rjcrs> rjcrs` rjcrs~ rjcrs/'
  - ';rjcrs"> ;rjcrs.> ;rjcrs_> ;rjcrs,0 ;rjcrs0 ;rjcrs- ;rjcrs1 ;rjcrs4 ;rjcrs; ;rjcrs03 ;rjcrs8 ;rjcrs! ;rjcrs`a ;rjcrs_? ;rjcrs`s ;rjcrs.0 ;rjcrs`5 ;rjcrs`& ;rjcrs"9 ;rjcrs"< ;rjcrs.- ;rjcrs"7 ;rjcrs"6 ;rjcrs.< ;rjcrs_< ;rjcrs_* ;rjcrs_| ;rjcrs`< ;rjcrs`> ;rjcrs."9 ;rjcrs`9 ;rjcrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoicers-xl rejoicers-([{''"xl rejoicers-/xl rejoicers-$xl'
  - 'rjcrs-xl rjcrs-"<.<{''0xl rjcrs-_/xl rjcrs-`sxl'

- - 'rejoicers(xl rejoicers[xl rejoicers{xl rejoicers''xl rejoicers"xl rejoicers=([{''"-xl rejoicers([{''"-xl rejoicers/-xl rejoicers$-xl'
  - 'rjcrs"<xl rjcrs.<xl rjcrs{xl rjcrs''xl rjcrs0xl rjcrs"7"<.<{''0-xl rjcrs"<.<{''0-xl rjcrs/-xl rjcrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(rejoices [rejoices {rejoices ''rejoices "rejoices -rejoices'
  - '"<rjcs .<rjcs _<rjcs ,8rjcs 8rjcs -rjcs'

- - '!rejoices @rejoices #rejoices $rejoices %rejoices ^rejoices &rejoices *rejoices )rejoices _rejoices =rejoices +rejoices ]rejoices }rejoices \\rejoices |rejoices .rejoices ,rejoices ;rejoices :rejoices ?rejoices <rejoices >rejoices `rejoices ~rejoices /rejoices'
  - '!rjcs `arjcs _?rjcs `srjcs .0rjcs `5rjcs `&rjcs "9rjcs ">rjcs .-rjcs "7rjcs "6rjcs .>rjcs _>rjcs _*rjcs _|rjcs 4rjcs 1rjcs ;rjcs0 3rjcs ;8rjcs `<rjcs `>rjcs .*rjcs `9rjcs _/rjcs'
  - xfail: contraction following special characters is ignored

- - 'rjcs (rjcs [rjcs {rjcs ''rjcs "rjcs -rjcs !rjcs @rjcs #rjcs $rjcs %rjcs ^rjcs &rjcs *rjcs )rjcs _rjcs =rjcs +rjcs ]rjcs }rjcs \\rjcs |rjcs .rjcs ,rjcs ;rjcs :rjcs ?rjcs <rjcs >rjcs `rjcs ~rjcs /rjcs'
  - 'rjcs "<;rjcs .<;rjcs _<;rjcs ,8;rjcs 8;rjcs -;rjcs !;rjcs `a;rjcs _?;rjcs `s;rjcs .0;rjcs `5;rjcs `&;rjcs "9;rjcs ">;rjcs .-;rjcs "7;rjcs "6;rjcs .>;rjcs _>;rjcs _*;rjcs _|;rjcs 4;rjcs 1;rjcs ;2rjcs0 3;rjcs ;8;rjcs `<;rjcs `>;rjcs .*;rjcs `9;rjcs _/;rjcs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-rejoices xl-([{''"rejoices l/-rejoices l$-rejoices'
  - 'xl-rjcs xl-"<.<{''0rjcs l/-rjcs l$-rjcs'

- - 'xl(rejoices xl[rejoices xl{rejoices xl''rejoices xl"rejoices xl-=([{''"rejoices'
  - 'xl"<rjcs xl.<rjcs xl{rjcs xl''rjcs xl0rjcs xl-"7"<.<{''0rjcs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'rejoices) rejoices] rejoices} rejoices'' rejoices" rejoices- rejoices, rejoices. rejoices; rejoices: rejoices? rejoices!'
  - 'rjcs"> rjcs.> rjcs_> rjcs,0 rjcs0 rjcs- rjcs1 rjcs4 rjcs; rjcs03 rjcs8 rjcs!'

- - 'rejoices@ rejoices# rejoices$ rejoices% rejoices^ rejoices& rejoices* rejoices( rejoices_ rejoices= rejoices+ rejoices[ rejoices{ rejoices\\ rejoices| rejoices< rejoices> rejoices` rejoices~ rejoices/'
  - 'rjcs`a rjcs_? rjcs`s rjcs.0 rjcs`5 rjcs`& rjcs"9 rjcs"< rjcs.- rjcs"7 rjcs"6 rjcs.< rjcs_< rjcs_* rjcs_| rjcs`< rjcs`> rjcs."9 rjcs`9 rjcs/'
  - xfail: contraction followed by special characters is ignored

- - 'rjcs) rjcs] rjcs} rjcs'' rjcs" rjcs- rjcs, rjcs. rjcs; rjcs: rjcs? rjcs! rjcs@ rjcs# rjcs$ rjcs% rjcs^ rjcs& rjcs* rjcs( rjcs_ rjcs= rjcs+ rjcs[ rjcs{ rjcs\\ rjcs| rjcs< rjcs> rjcs` rjcs~ rjcs/'
  - ';rjcs"> ;rjcs.> ;rjcs_> ;rjcs,0 ;rjcs0 ;rjcs- ;rjcs1 ;rjcs4 ;rjcs; ;rjcs03 ;rjcs8 ;rjcs! ;rjcs`a ;rjcs_? ;rjcs`s ;rjcs.0 ;rjcs`5 ;rjcs`& ;rjcs"9 ;rjcs"< ;rjcs.- ;rjcs"7 ;rjcs"6 ;rjcs.< ;rjcs_< ;rjcs_* ;rjcs_| ;rjcs`< ;rjcs`> ;rjcs."9 ;rjcs`9 ;rjcs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'rejoices-xl rejoices-([{''"xl rejoices-/xl rejoices-$xl'
  - 'rjcs-xl rjcs-"<.<{''0xl rjcs-_/xl rjcs-`sxl'

- - 'rejoices(xl rejoices[xl rejoices{xl rejoices''xl rejoices"xl rejoices=([{''"-xl rejoices([{''"-xl rejoices/-xl rejoices$-xl'
  - 'rjcs"<xl rjcs.<xl rjcs{xl rjcs''xl rjcs0xl rjcs"7"<.<{''0-xl rjcs"<.<{''0-xl rjcs/-xl rjcs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoice [unrejoice {unrejoice ''unrejoice "unrejoice -unrejoice'
  - '"<unrjc .<unrjc _<unrjc ,8unrjc 8unrjc -unrjc'

- - '!unrejoice @unrejoice #unrejoice $unrejoice %unrejoice ^unrejoice &unrejoice *unrejoice )unrejoice _unrejoice =unrejoice +unrejoice ]unrejoice }unrejoice \\unrejoice |unrejoice .unrejoice ,unrejoice ;unrejoice :unrejoice ?unrejoice <unrejoice >unrejoice'
  - '!unrjc `aunrjc _?unrjc `sunrjc .0unrjc `5unrjc `&unrjc "9unrjc ">unrjc .-unrjc "7unrjc "6unrjc .>unrjc _>unrjc _*unrjc _|unrjc 4unrjc 1unrjc ;unrjc0 3unrjc ;8unrjc `<unrjc `>unrjc'
  - xfail: contraction following special characters is ignored

- - '`unrejoice ~unrejoice /unrejoice'
  - '.*unrjc `9unrjc _/unrjc'
  - xfail: contraction following special characters is ignored

- - '(unrjc [unrjc {unrjc ''unrjc "unrjc -unrjc'
  - '"<;unrjc .<;unrjc _<;unrjc ,8;unrjc 8;unrjc -;unrjc'

- - '!unrjc @unrjc #unrjc $unrjc %unrjc ^unrjc &unrjc *unrjc )unrjc _unrjc =unrjc +unrjc ]unrjc }unrjc \\unrjc |unrjc .unrjc ,unrjc ;unrjc :unrjc ?unrjc <unrjc >unrjc `unrjc ~unrjc /unrjc'
  - '!;unrjc `a;unrjc _?;unrjc `s;unrjc .0;unrjc `5;unrjc `&;unrjc "9;unrjc ">;unrjc .-;unrjc "7;unrjc "6;unrjc .>;unrjc _>;unrjc _*;unrjc _|;unrjc 4;unrjc 1;unrjc ;2unrjc0 3;unrjc ;8;unrjc `<;unrjc `>;unrjc .*;unrjc `9;unrjc _/;unrjc'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoice xl-([{''"unrejoice xl/-unrejoice xl$-unrejoice'
  - 'xl-unrjc xl-"<.<{''0unrjc xl_/-unrjc xl`s-unrjc'

- - 'xl(unrejoice xl[unrejoice xl{unrejoice xl''unrejoice xl"unrejoice xl-=([{''"unrejoice'
  - 'xl"<unrjc xl.<unrjc xl{unrjc xl''unrjc xl0unrjc xl-"7"<.<{''0unrjc'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoice) unrejoice] unrejoice} unrejoice'' unrejoice" unrejoice- unrejoice, unrejoice. unrejoice; unrejoice: unrejoice? unrejoice!'
  - 'unrjc"> unrjc.> unrjc_> unrjc,0 unrjc0 unrjc- unrjc1 unrjc4 unrjc; unrjc03 unrjc8 unrjc!'

- - 'unrejoice@ unrejoice# unrejoice$ unrejoice% unrejoice^ unrejoice& unrejoice* unrejoice( unrejoice_ unrejoice= unrejoice+ unrejoice[ unrejoice{ unrejoice\\ unrejoice| unrejoice< unrejoice> unrejoice` unrejoice~ unrejoice/'
  - 'unrjc`a unrjc_? unrjc`s unrjc.0 unrjc`5 unrjc`& unrjc"9 unrjc"< unrjc.- unrjc"7 unrjc"6 unrjc.< unrjc_< unrjc_* unrjc_| unrjc`< unrjc`> unrjc."9 unrjc`9 unrjc/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjc) unrjc] unrjc} unrjc'' unrjc" unrjc- unrjc, unrjc. unrjc; unrjc: unrjc? unrjc!'
  - ';unrjc"> ;unrjc.> ;unrjc_> ;unrjc,0 ;unrjc0 ;unrjc- ;unrjc1 ;unrjc4 ;unrjc; ;unrjc03 ;unrjc8 ;unrjc!'

- - 'unrjc@ unrjc# unrjc$ unrjc% unrjc^ unrjc& unrjc* unrjc( unrjc_ unrjc= unrjc+ unrjc[ unrjc{ unrjc\\ unrjc| unrjc< unrjc> unrjc` unrjc~ unrjc/'
  - ';unrjc`a ;unrjc_? ;unrjc`s ;unrjc.0 ;unrjc`5 ;unrjc`& ;unrjc"9 ;unrjc"< ;unrjc.- ;unrjc"7 ;unrjc"6 ;unrjc.< ;unrjc_< ;unrjc_* ;unrjc_| ;unrjc`< ;unrjc`> ;unrjc."9 ;unrjc`9 ;unrjc/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoice-xl unrejoice-([{''"xl unrejoice-/xl unrejoice-$xl'
  - 'unrjc-xl unrjc-"<.<{''0xl unrjc-_/xl unrjc-`sxl'

- - 'unrejoice(xl unrejoice[xl unrejoice{xl unrejoice''xl unrejoice"xl unrejoice=([{''"-xl unrejoice([{''"-xl unrejoice/-xl unrejoice$-xl'
  - 'unrjc"<xl unrjc.<xl unrjc{xl unrjc''xl unrjc0xl unrjc"7"<.<{''0-xl unrjc"<.<{''0-xl unrjc/-xl unrjc`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoiced [unrejoiced {unrejoiced ''unrejoiced "unrejoiced -unrejoiced'
  - '"<unrjcd .<unrjcd _<unrjcd ,8unrjcd 8unrjcd -unrjcd'

- - '!unrejoiced @unrejoiced #unrejoiced $unrejoiced %unrejoiced ^unrejoiced &unrejoiced *unrejoiced )unrejoiced _unrejoiced =unrejoiced +unrejoiced ]unrejoiced }unrejoiced \\unrejoiced |unrejoiced .unrejoiced ,unrejoiced ;unrejoiced :unrejoiced ?unrejoiced'
  - '!unrjcd `aunrjcd _?unrjcd $unrjcd .0unrjcd `5unrjcd `&unrjcd "9unrjcd ">unrjcd .-unrjcd "7unrjcd "6unrjcd .>unrjcd _>unrjcd _*unrjcd _|unrjcd 4unrjcd 1unrjcd ;unrjcd0 3unrjcd ;8unrjcd'
  - xfail: contraction following special characters is ignored

- - '<unrejoiced >unrejoiced `unrejoiced ~unrejoiced /unrejoiced'
  - '`<unrjcd `>unrjcd .*unrjcd `9unrjcd _/unrjcd'
  - xfail: contraction following special characters is ignored

- - '(unrjcd [unrjcd {unrjcd ''unrjcd "unrjcd -unrjcd'
  - '"<;unrjcd .<;unrjcd _<;unrjcd ,8;unrjcd 8;unrjcd -;unrjcd'

- - '!unrjcd @unrjcd #unrjcd $unrjcd %unrjcd ^unrjcd &unrjcd *unrjcd )unrjcd _unrjcd =unrjcd +unrjcd ]unrjcd }unrjcd \\unrjcd |unrjcd .unrjcd ,unrjcd ;unrjcd :unrjcd ?unrjcd <unrjcd >unrjcd `unrjcd ~unrjcd /unrjcd'
  - '!;unrjcd `a;unrjcd _?;unrjcd `s;unrjcd .0;unrjcd `5;unrjcd `&;unrjcd "9;unrjcd ">;unrjcd .-;unrjcd "7;unrjcd "6;unrjcd .>;unrjcd _>;unrjcd _*;unrjcd _|;unrjcd 4;unrjcd 1;unrjcd ;2unrjcd0 3;unrjcd ;8;unrjcd `<;unrjcd `>;unrjcd .*;unrjcd `9;unrjcd _/;unrjcd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoiced xl-([{''"unrejoiced xl/-unrejoiced xl$-unrejoiced'
  - 'xl-unrjcd xl-"<.<{''0unrjcd xl_/-unrjcd xl$-unrjcd'

- - 'xl(unrejoiced xl[unrejoiced xl{unrejoiced xl''unrejoiced xl"unrejoiced xl-=([{''"unrejoiced'
  - 'xl"<unrjcd xl.<unrjcd xl{unrjcd xl''unrjcd xl0unrjcd xl-"7"<.<{''0unrjcd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoiced) unrejoiced] unrejoiced} unrejoiced'' unrejoiced" unrejoiced- unrejoiced, unrejoiced. unrejoiced; unrejoiced: unrejoiced? unrejoiced!'
  - 'unrjcd"> unrjcd.> unrjcd_> unrjcd,0 unrjcd0 unrjcd- unrjcd1 unrjcd4 unrjcd; unrjcd03 unrjcd8 unrjcd!'

- - 'unrejoiced@ unrejoiced# unrejoiced$ unrejoiced% unrejoiced^ unrejoiced& unrejoiced* unrejoiced( unrejoiced_ unrejoiced= unrejoiced+ unrejoiced[ unrejoiced{ unrejoiced\\ unrejoiced| unrejoiced< unrejoiced> unrejoiced` unrejoiced~ unrejoiced/'
  - 'unrjcd`a unrjcd_? unrjcd`s unrjcd.0 unrjcd`5 unrjcd`& unrjcd"9 unrjcd"< unrjcd.- unrjcd"7 unrjcd"6 unrjcd.< unrjcd_< unrjcd_* unrjcd_| unrjcd`< unrjcd`> unrjcd."9 unrjcd`9 unrjcd/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcd) unrjcd] unrjcd} unrjcd'' unrjcd" unrjcd- unrjcd, unrjcd. unrjcd; unrjcd: unrjcd? unrjcd!'
  - ';unrjcd"> ;unrjcd.> ;unrjcd_> ;unrjcd,0 ;unrjcd0 ;unrjcd- ;unrjcd1 ;unrjcd4 ;unrjcd; ;unrjcd03 ;unrjcd8 ;unrjcd!'

- - 'unrjcd@ unrjcd# unrjcd$ unrjcd% unrjcd^ unrjcd& unrjcd* unrjcd( unrjcd_ unrjcd= unrjcd+ unrjcd[ unrjcd{ unrjcd\\ unrjcd| unrjcd< unrjcd> unrjcd` unrjcd~ unrjcd/'
  - ';unrjcd`a ;unrjcd_? ;unrjcd`s ;unrjcd.0 ;unrjcd`5 ;unrjcd`& ;unrjcd"9 ;unrjcd"< ;unrjcd.- ;unrjcd"7 ;unrjcd"6 ;unrjcd.< ;unrjcd_< ;unrjcd_* ;unrjcd_| ;unrjcd`< ;unrjcd`> ;unrjcd."9 ;unrjcd`9 ;unrjcd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoiced-xl unrejoiced-([{''"xl unrejoiced-/xl unrejoiced-$xl'
  - 'unrjcd-xl unrjcd-"<.<{''0xl unrjcd-_/xl unrjcd-`sxl'

- - 'unrejoiced(xl unrejoiced[xl unrejoiced{xl unrejoiced''xl unrejoiced"xl unrejoiced=([{''"-xl unrejoiced([{''"-xl unrejoiced/-xl unrejoiced$-xl'
  - 'unrjcd"<xl unrjcd.<xl unrjcd{xl unrjcd''xl unrjcd0xl unrjcd"7"<.<{''0-xl unrjcd"<.<{''0-xl unrjcd/-xl unrjcd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoicing [unrejoicing {unrejoicing ''unrejoicing "unrejoicing -unrejoicing'
  - '"<unrjcg .<unrjcg _<unrjcg ,8unrjcg 8unrjcg -unrjcg'

- - '!unrejoicing @unrejoicing #unrejoicing $unrejoicing %unrejoicing ^unrejoicing &unrejoicing *unrejoicing )unrejoicing _unrejoicing =unrejoicing +unrejoicing ]unrejoicing }unrejoicing \\unrejoicing |unrejoicing .unrejoicing ,unrejoicing ;unrejoicing :unrejoicing'
  - '!unrjcg `aunrjcg _?unrjcg `sunrjcg .0unrjcg `5unrjcg `&unrjcg "9unrjcg ">unrjcg .-unrjcg "7unrjcg +unrjcg .>unrjcg _>unrjcg _*unrjcg _|unrjcg 4unrjcg 1unrjcg ;unrjcg0 3unrjcg'
  - xfail: contraction following special characters is ignored

- - '?unrejoicing <unrejoicing >unrejoicing `unrejoicing ~unrejoicing /unrejoicing'
  - ';8unrjcg `<unrjcg `>unrjcg .*unrjcg `9unrjcg _/unrjcg'
  - xfail: contraction following special characters is ignored

- - '(unrjcg [unrjcg {unrjcg ''unrjcg "unrjcg -unrjcg'
  - '"<;unrjcg .<;unrjcg _<;unrjcg ,8;unrjcg 8;unrjcg -;unrjcg'

- - '!unrjcg @unrjcg #unrjcg $unrjcg %unrjcg ^unrjcg &unrjcg *unrjcg )unrjcg _unrjcg =unrjcg +unrjcg ]unrjcg }unrjcg \\unrjcg |unrjcg .unrjcg ,unrjcg ;unrjcg :unrjcg ?unrjcg <unrjcg >unrjcg `unrjcg ~unrjcg /unrjcg'
  - '!;unrjcg `a;unrjcg _?;unrjcg `s;unrjcg .0;unrjcg `5;unrjcg `&;unrjcg "9;unrjcg ">;unrjcg .-;unrjcg "7;unrjcg "6;unrjcg .>;unrjcg _>;unrjcg _*;unrjcg _|;unrjcg 4;unrjcg 1;unrjcg ;2unrjcg0 3;unrjcg ;8;unrjcg `<;unrjcg `>;unrjcg .*;unrjcg `9;unrjcg _/;unrjcg'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoicing xl-([{''"unrejoicing xl/-unrejoicing xl$-unrejoicing'
  - 'xl-unrjcg xl-"<.<{''0unrjcg xl_/-unrjcg xl`s-unrjcg'

- - 'xl(unrejoicing xl[unrejoicing xl{unrejoicing xl''unrejoicing xl"unrejoicing xl-=([{''"unrejoicing'
  - 'xl"<unrjcg xl.<unrjcg xl{unrjcg xl''unrjcg xl0unrjcg xl-"7"<.<{''0unrjcg'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoicing) unrejoicing] unrejoicing} unrejoicing'' unrejoicing" unrejoicing- unrejoicing, unrejoicing. unrejoicing; unrejoicing: unrejoicing? unrejoicing!'
  - 'unrjcg"> unrjcg.> unrjcg_> unrjcg,0 unrjcg0 unrjcg- unrjcg1 unrjcg4 unrjcg; unrjcg03 unrjcg8 unrjcg!'

- - 'unrejoicing@ unrejoicing# unrejoicing$ unrejoicing% unrejoicing^ unrejoicing& unrejoicing* unrejoicing( unrejoicing_ unrejoicing= unrejoicing+ unrejoicing[ unrejoicing{ unrejoicing\\ unrejoicing| unrejoicing< unrejoicing> unrejoicing` unrejoicing~ unrejoicing/'
  - 'unrjcg`a unrjcg_? unrjcg`s unrjcg.0 unrjcg`5 unrjcg`& unrjcg"9 unrjcg"< unrjcg.- unrjcg"7 unrjcg+ unrjcg.< unrjcg_< unrjcg_* unrjcg_| unrjcg`< unrjcg`> unrjcg."9 unrjcg`9 unrjcg/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcg) unrjcg] unrjcg} unrjcg'' unrjcg" unrjcg- unrjcg, unrjcg. unrjcg; unrjcg: unrjcg? unrjcg!'
  - ';unrjcg"> ;unrjcg.> ;unrjcg_> ;unrjcg,0 ;unrjcg0 ;unrjcg- ;unrjcg1 ;unrjcg4 ;unrjcg; ;unrjcg03 ;unrjcg8 ;unrjcg!'

- - 'unrjcg@ unrjcg# unrjcg$ unrjcg% unrjcg^ unrjcg& unrjcg* unrjcg( unrjcg_ unrjcg= unrjcg+ unrjcg[ unrjcg{ unrjcg\\ unrjcg| unrjcg< unrjcg> unrjcg` unrjcg~ unrjcg/'
  - ';unrjcg`a ;unrjcg_? ;unrjcg`s ;unrjcg.0 ;unrjcg`5 ;unrjcg`& ;unrjcg"9 ;unrjcg"< ;unrjcg.- ;unrjcg"7 ;unrjcg"6 ;unrjcg.< ;unrjcg_< ;unrjcg_* ;unrjcg_| ;unrjcg`< ;unrjcg`> ;unrjcg."9 ;unrjcg`9 ;unrjcg/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoicing-xl unrejoicing-([{''"xl unrejoicing-/xl unrejoicing-$xl'
  - 'unrjcg-xl unrjcg-"<.<{''0xl unrjcg-_/xl unrjcg-`sxl'

- - 'unrejoicing(xl unrejoicing[xl unrejoicing{xl unrejoicing''xl unrejoicing"xl unrejoicing=([{''"-xl unrejoicing([{''"-xl unrejoicing/-xl unrejoicing$-xl'
  - 'unrjcg"<xl unrjcg.<xl unrjcg{xl unrjcg''xl unrjcg0xl unrjcg"7"<.<{''0-xl unrjcg"<.<{''0-xl unrjcg/-xl unrjcg`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unrejoices [unrejoices {unrejoices ''unrejoices "unrejoices -unrejoices'
  - '"<unrjcs .<unrjcs _<unrjcs ,8unrjcs 8unrjcs -unrjcs'

- - '!unrejoices @unrejoices #unrejoices $unrejoices %unrejoices ^unrejoices &unrejoices *unrejoices )unrejoices _unrejoices =unrejoices +unrejoices ]unrejoices }unrejoices \\unrejoices |unrejoices .unrejoices ,unrejoices ;unrejoices :unrejoices ?unrejoices'
  - '!unrjcs `aunrjcs _?unrjcs `sunrjcs .0unrjcs `5unrjcs `&unrjcs "9unrjcs ">unrjcs .-unrjcs "7unrjcs "6unrjcs .>unrjcs _>unrjcs _*unrjcs _|unrjcs 4unrjcs 1unrjcs ;unrjcs0 3unrjcs ;8unrjcs'
  - xfail: contraction following special characters is ignored

- - '<unrejoices >unrejoices `unrejoices ~unrejoices /unrejoices'
  - '`<unrjcs `>unrjcs .*unrjcs `9unrjcs _/unrjcs'
  - xfail: contraction following special characters is ignored

- - 'unrjcs (unrjcs [unrjcs {unrjcs ''unrjcs "unrjcs -unrjcs !unrjcs @unrjcs #unrjcs $unrjcs %unrjcs ^unrjcs &unrjcs *unrjcs )unrjcs _unrjcs =unrjcs +unrjcs ]unrjcs }unrjcs \\unrjcs |unrjcs .unrjcs ,unrjcs ;unrjcs :unrjcs ?unrjcs <unrjcs >unrjcs `unrjcs ~unrjcs /unrjc'
  - ';unrjcs "<;unrjcs .<;unrjcs _<;unrjcs ,8;unrjcs 8;unrjcs -;unrjcs !;unrjcs `a;unrjcs _?;unrjcs `s;unrjcs .0;unrjcs `5;unrjcs `&;unrjcs "9;unrjcs ">;unrjcs .-;unrjcs "7;unrjcs "6;unrjcs .>;unrjcs _>;unrjcs _*;unrjcs _|;unrjcs 4;unrjcs 1;unrjcs ;2unrjcs0 3;unrjcs ;8;unrjcs `<;unrjcs `>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unrejoices xl-([{''"unrejoices xl/-unrejoices xl$-unrejoices'
  - 'xl-unrjcs xl-"<.<{''0unrjcs xl_/-unrjcs xl`s-unrjcs'

- - 'xl(unrejoices xl[unrejoices xl{unrejoices xl''unrejoices xl"unrejoices xl-=([{''"unrejoices'
  - 'xl"<unrjcs xl.<unrjcs xl{unrjcs xl''unrjcs xl0unrjcs xl-"7"<.<{''0unrjcs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unrejoices) unrejoices] unrejoices} unrejoices'' unrejoices" unrejoices- unrejoices, unrejoices. unrejoices; unrejoices: unrejoices? unrejoices!'
  - 'unrjcs"> unrjcs.> unrjcs_> unrjcs,0 unrjcs0 unrjcs- unrjcs1 unrjcs4 unrjcs; unrjcs03 unrjcs8 unrjcs!'

- - 'unrejoices@ unrejoices# unrejoices$ unrejoices% unrejoices^ unrejoices& unrejoices* unrejoices( unrejoices_ unrejoices= unrejoices+ unrejoices[ unrejoices{ unrejoices\\ unrejoices| unrejoices< unrejoices> unrejoices` unrejoices~ unrejoices/'
  - 'unrjcs`a unrjcs_? unrjcs`s unrjcs.0 unrjcs`5 unrjcs`& unrjcs"9 unrjcs"< unrjcs.- unrjcs"7 unrjcs"6 unrjcs.< unrjcs_< unrjcs_* unrjcs_| unrjcs`< unrjcs`> unrjcs."9 unrjcs`9 unrjcs/'
  - xfail: contraction followed by special characters is ignored

- - 'unrjcs) unrjcs] unrjcs} unrjcs'' unrjcs" unrjcs- unrjcs, unrjcs. unrjcs; unrjcs: unrjcs? unrjcs! unrjcs@ unrjcs# unrjcs$ unrjcs% unrjcs^ unrjcs& unrjcs* unrjcs( unrjcs_ unrjcs= unrjcs+ unrjcs[ unrjcs{ unrjcs\\ unrjcs| unrjcs< unrjcs> unrjcs` unrjcs~ unrjcs/'
  - ';unrjcs"> ;unrjcs.> ;unrjcs_> ;unrjcs,0 ;unrjcs0 ;unrjcs- ;unrjcs1 ;unrjcs4 ;unrjcs; ;unrjcs03 ;unrjcs8 ;unrjcs! ;unrjcs`a ;unrjcs_? ;unrjcs`s ;unrjcs.0 ;unrjcs`5 ;unrjcs`& ;unrjcs"9 ;unrjcs"< ;unrjcs.- ;unrjcs"7 ;unrjcs"6 ;unrjcs.< ;unrjcs_< ;unrjcs_* ;unrjcs_| ;unrjcs`< ;unrjcs>'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unrejoices-xl unrejoices-([{''"xl unrejoices-/xl unrejoices-$xl'
  - 'unrjcs-xl unrjcs-"<.<{''0xl unrjcs-_/xl unrjcs-`sxl'

- - 'unrejoices(xl unrejoices[xl unrejoices{xl unrejoices''xl unrejoices"xl unrejoices=([{''"-xl unrejoices([{''"-xl unrejoices/-xl unrejoices$-xl'
  - 'unrjcs"<xl unrjcs.<xl unrjcs{xl unrjcs''xl unrjcs0xl unrjcs"7"<.<{''0-xl unrjcs"<.<{''0-xl unrjcs/-xl unrjcs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(said [said {said ''said "said -said'
  - '"<sd .<sd _<sd ,8sd 8sd -sd'

- - '!said @said #said $said %said ^said &said *said )said _said =said +said ]said }said \\said |said .said ,said ;said :said ?said <said >said `said ~said /said'
  - '!sd `asd _?sd `ssd .0sd `5sd `&sd "9sd ">sd .-sd "7sd "6sd .>sd _>sd _*sd _|sd 4sd 1sd ;sd0 3sd ;8sd `<sd `>sd ;8sd .*sd `9sd _/sd'
  - xfail: contraction following special characters is ignored

- - '(sd [sd {sd ''sd "sd -sd'
  - '"<;sd .<;sd _<;sd ,8;sd 8;sd -;sd'

- - '!sd @sd #sd $sd %sd ^sd &sd *sd )sd _sd =sd +sd ]sd }sd \\sd |sd .sd ,sd ;sd :sd ?sd <sd >sd ?sd `sd ~sd /sd'
  - '!;sd `a;sd _?;sd `s;sd .0;sd `5;sd `&;sd "9;sd ">;sd .-;sd "7;sd "6;sd .>;sd _>;sd _*;sd _|;sd 4;sd 1;sd ;2sd0 3;sd ;8;sd `<;sd `>;sd .*;sd `9;sd _/;sd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-said xl-([{''"said l/-said l$-said'
  - 'xl-sd xl-"<.<{''0sd l/-sd l$-sd'

- - 'xl(said xl[said xl{said xl''said xl"said xl-=([{''"said'
  - 'xl"<sd xl.<sd xl{sd xl''sd xl0sd xl-"7"<.<{''0sd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'said) said] said} said'' said" said- said, said. said; said: said? said!'
  - 'sd"> sd.> sd_> sd,0 sd0 sd- sd1 sd4 sd; sd03 sd8 sd!'

- - 'said@ said# said$ said% said^ said& said* said( said_ said= said+ said[ said{ said\\ said| said< said> said` said~ said/'
  - 'sd`a sd_? sd`s sd.0 sd`5 sd`& sd"9 sd"< sd.- sd"7 sd"6 sd.< sd_< sd_* sd_| sd`< sd`> sd."9 sd`9 sd/'
  - xfail: contraction followed by special characters is ignored

- - 'sd) sd] sd} sd'' sd" sd- sd, sd. sd; sd: sd? sd!'
  - ';sd"> ;sd.> ;sd_> ;sd,0 ;sd0 ;sd- ;sd1 ;sd4 ;sd; ;sd03 ;sd8 ;sd!'

- - 'sd@ sd# sd$ sd% sd^ sd& sd* sd( sd_ sd= sd+ sd[ sd{ sd\\ sd| sd< sd> sd` sd~ sd/'
  - ';sd`a ;sd_? ;sd`s ;sd.0 ;sd`5 ;sd`& ;sd"9 ;sd"< ;sd.- ;sd"7 ;sd"6 ;sd.< ;sd_< ;sd_* ;sd_| ;sd`< ;sd`> ;sd."9 ;sd`9 ;sd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'said-xl said-([{''"xl said-/xl said-$xl'
  - 'sd-xl sd-"<.<{''0xl sd-_/xl sd-`sxl'

- - 'said(xl said[xl said{xl said''xl said"xl said=([{''"-xl said([{''"-xl said/-xl said$-xl'
  - 'sd"<xl sd.<xl sd{xl sd''xl sd0xl sd"7"<.<{''0-xl sd"<.<{''0-xl sd/-xl sd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(saids [saids {saids ''saids "saids -saids'
  - '"<sds .<sds _<sds ,8sds 8sds -sds'

- - '!saids @saids #saids $saids %saids ^saids &saids *saids )saids _saids =saids +saids ]saids }saids \\saids |saids .saids ,saids ;saids :saids ?saids <saids >saids `saids ~saids /saids'
  - '!sds `asds _?sds `ssds .0sds `5sds `&sds "9sds ">sds .-sds "7sds "6sds .>sds _>sds _*sds _|sds 4sds 1sds ;sds0 3sds ;8sds `<sds `>sds ;8sds .*sds `9sds _/sds'
  - xfail: contraction following special characters is ignored

- - 'sds  (sds [sds {sds ''sds "sds -sds !sds @sds #sds $sds %sds ^sds &sds *sds )sds _sds =sds +sds ]sds }sds \\sds |sds .sds ,sds ;sds :sds ?sds <sds >sds ?sds `sds ~sds /sds'
  - ';sds  "<;sds .<;sds _<;sds ,8;sds 8;sds -;sds !;sds `a;sds _?;sds `s;sds .0;sds `5;sds `&;sds "9;sds ">;sds .-;sds "7;sds "6;sds .>;sds _>;sds _*;sds _|;sds 4;sds 1;sds ;2sds0 3;sds ;8;sds `<;sds `>;sds .*;sds `9;sds _/;sds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-saids xl-([{''"saids l/-saids l$-saids'
  - 'xl-sds xl-"<.<{''0sds l/-sds l$-sds'

- - 'xl(saids xl[saids xl{saids xl''saids xl"saids xl-=([{''"saids'
  - 'xl"<sds xl.<sds xl{sds xl''sds xl0sds xl-"7"<.<{''0sds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'saids) saids] saids} saids'' saids" saids- saids, saids. saids; saids: saids? saids!'
  - 'sds"> sds.> sds_> sds,0 sds0 sds- sds1 sds4 sds; sds03 sds8 sds!'

- - 'saids@ saids# saids$ saids% saids^ saids& saids* saids( saids_ saids= saids+ saids[ saids{ saids\\ saids| saids< saids> saids` saids~ saids/'
  - 'sds`a sds_? sds`s sds.0 sds`5 sds`& sds"9 sds"< sds.- sds"7 sds"6 sds.< sds_< sds_* sds_| sds`< sds`> sds."9 sds`9 sds/'
  - xfail: contraction followed by special characters is ignored

- - 'sds) sds] sds} sds'' sds" sds- sds, sds. sds; sds: sds? sds! sds@ sds# sds$ sds% sds^ sds& sds* sds( sds_ sds= sds+ sds[ sds{ sds\\ sds| sds< sds> sds` sds~ sds/'
  - ';sds"> ;sds.> ;sds_> ;sds,0 ;sds0 ;sds- ;sds1 ;sds4 ;sds; ;sds03 ;sds8 ;sds! ;sds`a ;sds_? ;sds`s ;sds.0 ;sds`5 ;sds`& ;sds"9 ;sds"< ;sds.- ;sds"7 ;sds"6 ;sds.< ;sds_< ;sds_* ;sds_| ;sds`< ;sds`> ;sds."9 ;sds`9 ;sds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'saids-xl saids-([{''"xl saids-/xl saids-$xl'
  - 'sds-xl sds-"<.<{''0xl sds-_/xl sds-`sxl'

- - 'saids(xl saids[xl saids{xl saids''xl saids"xl saids=([{''"-xl saids([{''"-xl saids/-xl saids$-xl'
  - 'sds"<xl sds.<xl sds{xl sds''xl sds0xl sds"7"<.<{''0-xl sds"<.<{''0-xl sds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - 'resaid (resaid [resaid {resaid ''resaid "resaid -resaid !resaid @resaid #resaid $resaid %resaid ^resaid &resaid *resaid )resaid _resaid =resaid +resaid ]resaid }resaid \\resaid |resaid .resaid ,resaid ;resaid :resaid ?resaid <resaid >resaid `resaid ~resaid /resaid'
  - 'resd "<resd .<resd _<resd ,8resd 8resd -resd !resd `aresd _?resd `sresd .0resd `5resd `&resd "9resd ">resd .-resd "7resd "6resd .>resd _>resd _*resd _|resd 4resd 1resd ;resd0 3resd ;8resd `<resd `>resd ;8resd .*resd `9resd _/resd'
  - xfail: contraction following special characters is ignored

- - 'resd resd (resd [resd {resd ''resd "resd -resd !resd @resd #resd $resd %resd ^resd &resd *resd )resd _resd =resd +resd ]resd }resd \\resd |resd .resd ,resd ;resd :resd ?resd <resd >resd ?resd `resd ~resd /resd'
  - ';resd ;resd "<;resd .<;resd _<;resd ,8;resd 8;resd -;resd !;resd `a;resd _?;resd `s;resd .0;resd `5;resd `&;resd "9;resd ">;resd .-;resd "7;resd "6;resd .>;resd _>;resd _*;resd _|;resd 4;resd 1;resd ;2resd0 3;resd ;8;resd `<;resd `>;resd .*;resd `9;resd _/;resd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-resaid xl-([{''"resaid l/-resaid l$-resaid xl(resaid xl[resaid xl{resaid xl''resaid xl"resaid xl-=([{''"resaid'
  - 'xl-resd xl-"<.<{''0resd l/-resd l$-resd xl"<resd xl.<resd xl{resd xl''resd xl0resd xl-"7"<.<{''0resd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'resaid) resaid] resaid} resaid'' resaid" resaid- resaid, resaid. resaid; resaid: resaid? resaid! resaid@ resaid# resaid$ resaid% resaid^ resaid& resaid* resaid( resaid_ resaid= resaid+ resaid[ resaid{ resaid\\ resaid| resaid< resaid> resaid` resaid~ resaid/'
  - 'resd"> resd.> resd_> resd,0 resd0 resd- resd1 resd4 resd; resd03 resd8 resd! resd`a resd_? resd`s resd.0 resd`5 resd`& resd"9 resd"< resd.- resd"7 resd"6 resd.< resd_< resd_* resd_| resd`< resd`> resd."9 resd`9 resd/'
  - xfail: contraction followed by special characters is ignored

- - 'resd) resd] resd} resd'' resd" resd- resd, resd. resd; resd: resd? resd! resd@ resd# resd$ resd% resd^ resd& resd* resd( resd_ resd= resd+ resd[ resd{ resd\\ resd| resd< resd> resd` resd~ resd/'
  - ';resd"> ;resd.> ;resd_> ;resd,0 ;resd0 ;resd- ;resd1 ;resd4 ;resd; ;resd03 ;resd8 ;resd! ;resd`a ;resd_? ;resd`s ;resd.0 ;resd`5 ;resd`& ;resd"9 ;resd"< ;resd.- ;resd"7 ;resd"6 ;resd.< ;resd_< ;resd_* ;resd_| ;resd`< ;resd`> ;resd."9 ;resd`9 ;resd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'resaid-xl resaid-([{''"xl resaid-/xl resaid-$xl resaid(xl resaid[xl resaid{xl resaid''xl resaid"xl resaid=([{''"-xl resaid([{''"-xl resaid/-xl resaid$-xl'
  - 'resd-xl resd-"<.<{''0xl resd-_/xl resd-`sxl resd"<xl resd.<xl resd{xl resd''xl resd0xl resd"7"<.<{''0-xl resd"<.<{''0-xl resd/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unsaid [unsaid {unsaid ''unsaid "unsaid -unsaid'
  - '"<unsd .<unsd _<unsd ,8unsd 8unsd -unsd'

- - '!unsaid @unsaid #unsaid $unsaid %unsaid ^unsaid &unsaid *unsaid )unsaid _unsaid =unsaid +unsaid ]unsaid }unsaid \\unsaid |unsaid .unsaid ,unsaid ;unsaid :unsaid ?unsaid <unsaid >unsaid `unsaid ~unsaid /unsaid'
  - '!unsd `aunsd _?unsd `sunsd .0unsd `5unsd `&unsd "9unsd ">unsd .-unsd "7unsd "6unsd .>unsd _>unsd _*unsd _|unsd 4unsd 1unsd ;unsd0 3unsd ;8unsd `<unsd `>unsd ;8unsd .*unsd `9unsd _/unsd'
  - xfail: contraction following special characters is ignored

- - 'unsd (unsd [unsd {unsd ''unsd "unsd -unsd !unsd @unsd #unsd $unsd %unsd ^unsd &unsd *unsd )unsd _unsd =unsd +unsd ]unsd }unsd \\unsd |unsd .unsd ,unsd ;unsd :unsd ?unsd <unsd >unsd ?unsd `unsd ~unsd /unsd'
  - ';unsd "<;unsd .<;unsd _<;unsd ,8;unsd 8;unsd -;unsd !;unsd `a;unsd _?;unsd `s;unsd .0;unsd `5;unsd `&;unsd "9;unsd ">;unsd .-;unsd "7;unsd "6;unsd .>;unsd _>;unsd _*;unsd _|;unsd 4;unsd 1;unsd ;2unsd0 3;unsd ;8;unsd `<;unsd `>;unsd .*;unsd `9;unsd _/;unsd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unsaid xl-([{''"unsaid l/-unsaid l$-unsaid'
  - 'xl-unsd xl-"<.<{''0unsd l/-unsd l$-unsd'

- - 'xl(unsaid xl[unsaid xl{unsaid xl''unsaid xl"unsaid xl-=([{''"unsaid'
  - 'xl"<unsd xl.<unsd xl{unsd xl''unsd xl0unsd xl-"7"<.<{''0unsd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unsaid) unsaid] unsaid} unsaid'' unsaid" unsaid- unsaid, unsaid. unsaid; unsaid: unsaid? unsaid!'
  - 'unsd"> unsd.> unsd_> unsd,0 unsd0 unsd- unsd1 unsd4 unsd; unsd03 unsd8 unsd!'

- - 'unsaid@ unsaid# unsaid$ unsaid% unsaid^ unsaid& unsaid* unsaid( unsaid_ unsaid= unsaid+ unsaid[ unsaid{ unsaid\\ unsaid| unsaid< unsaid> unsaid` unsaid~ unsaid/'
  - 'unsd`a unsd_? unsd`s unsd.0 unsd`5 unsd`& unsd"9 unsd"< unsd.- unsd"7 unsd"6 unsd.< unsd_< unsd_* unsd_| unsd`< unsd`> unsd."9 unsd`9 unsd/'
  - xfail: contraction followed by special characters is ignored

- - 'unsd) unsd] unsd} unsd'' unsd" unsd- unsd, unsd. unsd; unsd: unsd? unsd! unsd@ unsd# unsd$ unsd% unsd^ unsd& unsd* unsd( unsd_ unsd= unsd+ unsd[ unsd{ unsd\\ unsd| unsd< unsd> unsd` unsd~ unsd/'
  - ';unsd"> ;unsd.> ;unsd_> ;unsd,0 ;unsd0 ;unsd- ;unsd1 ;unsd4 ;unsd; ;unsd03 ;unsd8 ;unsd! ;unsd`a ;unsd_? ;unsd`s ;unsd.0 ;unsd`5 ;unsd`& ;unsd"9 ;unsd"< ;unsd.- ;unsd"7 ;unsd"6 ;unsd.< ;unsd_< ;unsd_* ;unsd_| ;unsd`< ;unsd`> ;unsd."9 ;unsd`9 ;unsd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unsaid-xl unsaid-([{''"xl unsaid-/xl unsaid-$xl'
  - 'unsd-xl unsd-"<.<{''0xl unsd-_/xl unsd-`sxl'

- - 'unsaid(xl unsaid[xl unsaid{xl unsaid''xl unsaid"xl unsaid=([{''"-xl unsaid([{''"-xl unsaid/-xl unsaid$-xl'
  - 'unsd"<xl unsd.<xl unsd{xl unsd''xl unsd0xl unsd"7"<.<{''0-xl unsd"<.<{''0-xl unsd/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(unsaids [unsaids {unsaids ''unsaids "unsaids -unsaids'
  - '"<unsds .<unsds _<unsds ,8unsds 8unsds -unsds'

- - '!unsaids @unsaids #unsaids $unsaids %unsaids ^unsaids &unsaids *unsaids )unsaids _unsaids =unsaids +unsaids ]unsaids }unsaids \\unsaids |unsaids .unsaids ,unsaids ;unsaids :unsaids ?unsaids <unsaids >unsaids `unsaids ~unsaids /unsaids'
  - '!unsds `aunsds _?unsds `sunsds .0unsds `5unsds `&unsds "9unsds ">unsds .-unsds "7unsds "6unsds .>unsds _>unsds _*unsds _|unsds 4unsds 1unsds ;unsds0 3unsds ;8unsds `<unsds `>unsds ;8unsds .*unsds `9unsds _/unsds'
  - xfail: contraction following special characters is ignored

- - 'unsds (unsds [unsds {unsds ''unsds "unsds -unsds !unsds @unsds #unsds $unsds %unsds ^unsds &unsds *unsds )unsds _unsds =unsds +unsds ]unsds }unsds \\unsds |unsds .unsds ,unsds ;unsds :unsds ?unsds <unsds >unsds ?unsds `unsds ~unsds /unsds'
  - ';unsds "<;unsds .<;unsds _<;unsds ,8;unsds 8;unsds -;unsds !;unsds `a;unsds _?;unsds `s;unsds .0;unsds `5;unsds `&;unsds "9;unsds ">;unsds .-;unsds "7;unsds "6;unsds .>;unsds _>;unsds _*;unsds _|;unsds 4;unsds 1;unsds ;2unsds0 3;unsds ;8;unsds `<;unsds `>;unsds .*;unsds `9;unsds _/;unsds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-unsaids xl-([{''"unsaids l/-unsaids l$-unsaids'
  - 'xl-unsds xl-"<.<{''0unsds l/-unsds l$-unsds'

- - 'xl(unsaids xl[unsaids xl{unsaids xl''unsaids xl"unsaids xl-=([{''"unsaids'
  - 'xl"<unsds xl.<unsds xl{unsds xl''unsds xl0unsds xl-"7"<.<{''0unsds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'unsaids) unsaids] unsaids} unsaids'' unsaids" unsaids- unsaids, unsaids. unsaids; unsaids: unsaids? unsaids!'
  - 'unsds"> unsds.> unsds_> unsds,0 unsds0 unsds- unsds1 unsds4 unsds; unsds03 unsds8 unsds!'

- - 'unsaids@ unsaids# unsaids$ unsaids% unsaids^ unsaids& unsaids* unsaids( unsaids_ unsaids= unsaids+ unsaids[ unsaids{ unsaids\\ unsaids| unsaids< unsaids> unsaids` unsaids~ unsaids/'
  - 'unsds`a unsds_? unsds`s unsds.0 unsds`5 unsds`& unsds"9 unsds"< unsds.- unsds"7 unsds"6 unsds.< unsds_< unsds_* unsds_| unsds`< unsds`> unsds."9 unsds`9 unsds/'
  - xfail: contraction followed by special characters is ignored

- - 'unsds) unsds] unsds} unsds'' unsds" unsds- unsds, unsds. unsds; unsds: unsds? unsds! unsds@ unsds# unsds$ unsds% unsds^ unsds& unsds* unsds( unsds_ unsds= unsds+ unsds[ unsds{ unsds\\ unsds| unsds< unsds> unsds` unsds~ unsds/'
  - ';unsds"> ;unsds.> ;unsds_> ;unsds,0 ;unsds0 ;unsds- ;unsds1 ;unsds4 ;unsds; ;unsds03 ;unsds8 ;unsds! ;unsds`a ;unsds_? ;unsds`s ;unsds.0 ;unsds`5 ;unsds`& ;unsds"9 ;unsds"< ;unsds.- ;unsds"7 ;unsds"6 ;unsds.< ;unsds_< ;unsds_* ;unsds_| ;unsds`< ;unsds`> ;unsds."9 ;unsds`9 ;unsds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'unsaids-xl unsaids-([{''"xl unsaids-/xl unsaids-$xl'
  - 'unsds-xl unsds-"<.<{''0xl unsds-_/xl unsds-`sxl'

- - 'unsaids(xl unsaids[xl unsaids{xl unsaids''xl unsaids"xl unsaids=([{''"-xl unsaids([{''"-xl unsaids/-xl unsaids$-xl'
  - 'unsds"<xl unsds.<xl unsds{xl unsds''xl unsds0xl unsds"7"<.<{''0-xl unsds"<.<{''0-xl unsds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(shall [shall {shall ''shall "shall -shall'
  - '"<% .<% _<% ,8% 8% -%'

- - '!shall @shall #shall $shall %shall ^shall &shall *shall )shall _shall =shall +shall ]shall }shall \\shall |shall .shall ,shall ;shall :shall ?shall <shall >shall `shall ~shall /shall'
  - '!% `a% _?% `s% .0% `5% `&% "9% ">% .-% "7% "6% .>% _>% _*% _|% 4% 1% ;%0 3% ;8% `<% `>% .*% `9% _/%'
  - xfail: contraction following special characters is ignored

- - '(sh [sh {sh ''sh "sh -sh'
  - '"<sh .<sh _<sh ,8sh 8sh -sh'

- - '!sh @sh #sh $sh %sh ^sh &sh *sh )sh _sh =sh +sh ]sh }sh \\sh |sh .sh ,sh ;sh :sh ?sh <sh >sh `sh ~sh /sh'
  - '!sh `ash _?sh `ssh %sh `5sh `&sh "9sh ">sh .-sh "7sh "6sh .>sh _>sh _*sh _|sh 4sh 1sh ;sh0 3sh ;8sh `<sh `>sh .*sh `9sh _/sh'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-shall xl-([{''"shall l/-shall l$-shall'
  - 'xl-% xl-"<.<{''0% l/-% l$-%'

- - 'xl(shall xl[shall xl{shall xl''shall xl"shall xl-=([{''"shall'
  - 'xl"<% xl.<% xl{% xl''% xl0% xl-"7"<.<{''0%'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'shall) shall] shall} shall'' shall" shall- shall, shall. shall; shall: shall? shall!'
  - '%"> %.> %_> %,0 %0 %- %1 %4 %; %03 %8 %!'

- - 'shall@ shall# shall$ shall% shall^ shall& shall* shall( shall_ shall= shall+ shall[ shall{ shall\\ shall| shall< shall> shall` shall~ shall/'
  - '%`a %_? %`s %.0 %`5 %`& %"9 %"< %.- %"7 %"6 %.< %_< %_* %_| %`< %`> %."9 %`9 %/'
  - xfail: contraction followed by special characters is ignored

- - 'sh) sh] sh} sh'' sh" sh- sh, sh. sh; sh: sh? sh!'
  - 'sh"> sh.> sh_> sh,0 sh0 sh- sh1 sh4 sh; sh03 sh8 sh!'

- - 'sh@ sh# sh$ sh% sh^ sh& sh* sh( sh_ sh= sh+ sh[ sh{ sh\\ sh| sh< sh> sh` sh~ sh/'
  - 'sh`a sh_? sh`s sh% sh`5 sh`& sh"9 sh"< sh.- sh"7 sh"6 sh.< sh_< sh_* sh_| sh`< sh`> sh."9 sh`9 sh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'shall-xl shall-([{''"xl shall-/xl shall-$xl'
  - '%-xl %-"<.<{''0xl %-_/xl %-`sxl'

- - 'shall(xl shall[xl shall{xl shall''xl shall"xl shall=([{''"-xl shall([{''"-xl shall/-xl shall$-xl'
  - '%"<xl %.<xl %{xl %''xl %0xl %"7"<.<{''0-xl %"<.<{''0-xl %/-xl %`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(should [should {should ''should "should -should'
  - '"<%d .<%d _<%d ,8%d 8%d -%d'

- - '!should @should #should $should %should ^should &should *should )should _should =should +should ]should }should \\should |should .should ,should ;should :should ?should <should >should `should ~should /should'
  - '!%d `a%d _?%d `s%d .0%d `5%d `&%d "9%d ">%d .-%d "7%d "6%d .>%d _>%d _*%d _|%d 4%d 1%d ;%d0 3%d ;8%d `<%d `>%d ;8%d .*%d `9%d _/%d'
  - xfail: contraction following special characters is ignored

- - '(shd [shd {shd ''shd "shd -shd'
  - '"<shd .<shd _<shd ,8shd 8shd -shd'

- - '!shd @shd #shd $shd %shd ^shd &shd *shd )shd _shd =shd +shd ]shd }shd \\shd |shd .shd ,shd ;shd :shd ?shd <shd >shd `shd ~shd /shd'
  - '!shd `ashd _?shd `sshd .0shd `5shd `&shd "9shd ">shd .-shd "7shd "6shd .>shd _>shd _*shd _|shd 4shd 1shd ;shd0 3shd ;8shd `<shd `>shd .*shd `9shd _/shd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-should xl-([{''"should l/-should l$-should'
  - 'xl-%d xl-"<.<{''0%d l/-%d l$-%d'

- - 'xl(should xl[should xl{should xl''should xl"should xl-=([{''"should'
  - 'xl"<%d xl.<%d xl{%d xl''%d xl0%d xl-"7"<.<{''0%d'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'should) should] should} should'' should" should- should, should. should; should: should? should!'
  - '%d"> %d.> %d_> %d,0 %d0 %d- %d1 %d4 %d; %d03 %d8 %d!'

- - 'should@ should# should$ should% should^ should& should* should( should_ should= should+ should[ should{ should\\ should| should< should> should` should~ should/'
  - '%d`a %d_? %d`s %d% %d`5 %d`& %d"9 %d"< %d.- %d"7 %d"6 %d.< %d_< %d_* %d_| %d`< %d`> %d."9 %d`9 %d/'
  - xfail: contraction followed by special characters is ignored

- - 'shd) shd] shd} shd'' shd" shd- shd, shd. shd; shd: shd? shd!'
  - 'shd"> shd.> shd_> shd,0 shd0 shd- shd1 shd4 shd; shd03 shd8 shd!'

- - 'shd@ shd# shd$ shd% shd^ shd& shd* shd( shd_ shd= shd+ shd[ shd{ shd\\ shd| shd< shd> shd` shd~ shd/'
  - 'shd`a shd_? shd`s shd% shd`5 shd`& shd"9 shd"< shd.- shd"7 shd"6 shd.< shd_< shd_* shd_| shd`< shd`> shd."9 shd`9 shd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'should-xl should-([{''"xl should-/xl should-$xl'
  - '%d-xl %d-"<.<{''0xl %d-_/xl %d-`sxl'

- - 'should(xl should[xl should{xl should''xl should"xl should=([{''"-xl should([{''"-xl should/-xl should$-xl'
  - '%d"<xl %d.<xl %d{xl %d''xl %d0xl %d"7"<.<{''0-xl %d"<.<{''0-xl %d/-xl %d`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(shoulds [shoulds {shoulds ''shoulds "shoulds -shoulds'
  - '"<%ds .<%ds _<%ds ,8%ds 8%ds -%ds'

- - '!shoulds @shoulds #shoulds $shoulds %shoulds ^shoulds &shoulds *shoulds )shoulds _shoulds =shoulds +shoulds ]shoulds }shoulds \\shoulds |shoulds .shoulds ,shoulds ;shoulds :shoulds ?shoulds <shoulds >shoulds `shoulds ~shoulds /shoulds'
  - '!%ds `a%ds _?%ds `s%ds .0%ds `5%ds `&%ds "9%ds ">%ds .-%ds "7%ds "6%ds .>%ds _>%ds _*%ds _|%ds 4%ds 1%ds ;%ds0 3%ds ;8%ds `<%ds `>%ds ;8%ds .*%ds `9%ds _/%ds'
  - xfail: contraction following special characters is ignored

- - 'shds (shds [shds {shds ''shds "shds -shds !shds @shds #shds $shds %shds ^shds &shds *shds )shds _shds =shds +shds ]shds }shds \\shds |shds .shds ,shds ;shds :shds ?shds <shds >shds `shds ~shds /shds'
  - 'shds "<shds .<shds _<shds ,8shds 8shds -shds !shds `ashds _?shds `sshds %shds `5shds `&shds "9shds ">shds .-shds "7shds "6shds .>shds _>shds _*shds _|shds 4shds 1shds ;shds0 3shds ;8shds `<shds `>shds .*shds `9shds _/shds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-shoulds xl-([{''"shoulds l/-shoulds l$-shoulds'
  - 'xl-%ds xl-"<.<{''0%ds l/-%ds l$-%ds'

- - 'xl(shoulds xl[shoulds xl{shoulds xl''shoulds xl"shoulds xl-=([{''"shoulds'
  - 'xl"<%ds xl.<%ds xl{%ds xl''%ds xl0%ds xl-"7"<.<{''0%ds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'shoulds) shoulds] shoulds} shoulds'' shoulds" shoulds- shoulds, shoulds. shoulds; shoulds: shoulds? shoulds!'
  - '%ds"> %ds.> %ds_> %ds,0 %ds0 %ds- %ds1 %ds4 %ds; %ds03 %ds8 %ds!'

- - 'shoulds@ shoulds# shoulds$ shoulds% shoulds^ shoulds& shoulds* shoulds( shoulds_ shoulds= shoulds+ shoulds[ shoulds{ shoulds\\ shoulds| shoulds< shoulds> shoulds` shoulds~ shoulds/'
  - '%ds`a %ds_? %ds`s %ds% %ds`5 %ds`& %ds"9 %ds"< %ds.- %ds"7 %ds"6 %ds.< %ds_< %ds_* %ds_| %ds`< %ds`> %ds."9 %ds`9 %ds/'
  - xfail: contraction followed by special characters is ignored

- - 'shds) shds] shds} shds'' shds" shds- shds, shds. shds; shds: shds? shds! shds@ shds# shds$ shds% shds^ shds& shds* shds( shds_ shds= shds+ shds[ shds{ shds\\ shds| shds< shds> shds` shds~ shds/'
  - 'shds"> shds.> shds_> shds,0 shds0 shds- shds1 shds4 shds; shds03 shds8 shds! shds`a shds_? shds`s shds% shds`5 shds`& shds"9 shds"< shds.- shds"7 shds"6 shds.< shds_< shds_* shds_| shds`< shds`> shds."9 shds`9 shds/'
  - xfail: non-contraction of "shds" conflicts with contraction of "shoulds"

- - 'shoulds-xl shoulds-([{''"xl shoulds-/xl shoulds-$xl'
  - '%ds-xl %ds-"<.<{''0xl %ds-_/xl %ds-`sxl'

- - 'shoulds(xl shoulds[xl shoulds{xl shoulds''xl shoulds"xl shoulds=([{''"-xl shoulds([{''"-xl shoulds/-xl shoulds$-xl'
  - '%ds"<xl %ds.<xl %ds{xl %ds''xl %ds0xl %ds"7"<.<{''0-xl %ds"<.<{''0-xl %ds/-xl %ds`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(so [so {so ''so "so -so'
  - '"<s .<s _<s ,8s 8s -s'

- - '!so @so #so $so %so ^so &so *so )so _so =so +so ]so }so \\so |so .so ,so ;so :so ?so <so >so `so ~so /so'
  - '!s `as _?s `ss .0s `5s `&s "9s ">s .-s "7s "6s .>s _>s _*s _|s 4s 1s ;s0 3s ;8s `<s `>s .*s `9s _/s'
  - xfail: contraction following special characters is ignored

- - '(s [s {s ''s "s -s'
  - '"<;s .<;s _<;s ,8;s 8;s -;s'

- - '!s @s #s $s %s ^s &s *s )s _s =s +s ]s }s \\s |s .s ,s ;s :s ?s <s >s `s ~s /s'
  - '!;s `a;s _?;s `s;s .0;s `5;s `&;s "9;s ">;s .-;s "7;s "6;s .>;s _>;s _*;s _|;s 4;s 1;s ;2s0 3;s ;8;s `<;s `>;s .*;s `9;s _/;s'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-so xl-([{''"so xl/-so xl$-so'
  - 'xl-s xl-"<.<{''0s xl_/-s xl`s-s'

- - 'xl(so xl[so xl{so xl''so xl"so xl-=([{''"so'
  - 'xl"<s xl.<s xl{s xl''s xl0s xl-"7"<.<{''0s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'so) so] so} so'' so" so- so, so. so; so: so? so!'
  - 's"> s.> s_> s,0 s0 s- s1 s4 s; s03 s8 s!'

- - 'so@ so# so$ so% so^ so& so* so( so_ so= so+ so[ so{ so\\ so| so< so> so` so~ so/'
  - 's`a s_? s`s s.0 s`5 s`& s"9 s"< s.- s"7 s"6 s.< s_< s_* s_| s`< s`> s."9 s`9 s/'
  - xfail: contraction followed by special characters is ignored

- - 's) s] s} s'' s" s- s, s. s; s: s? s!'
  - ';s"> ;s.> ;s_> ;s,0 ;s0 ;s- ;s1 ;s4 ;s; ;s03 ;s8 ;s!'

- - 's@ s# s$ s% s^ s& s* s( s_ s= s+ s[ s{ s\\ s| s< s> s` s~ s/'
  - ';s`a ;s_? ;s`s ;s.0 ;s`5 ;s`& ;s"9 ;s"< ;s.- ;s"7 ;s"6 ;s.< ;s_< ;s_* ;s_| ;s`< ;s`> ;s."9 ;s`9 ;s/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'so-xl so-([{''"xl so-/xl so-$xl'
  - 's-xl s-"<.<{''0xl s-_/xl s-`sxl'

- - 'so(xl so[xl so{xl so''xl so"xl so=([{''"-xl so([{''"-xl so/-xl so$-xl'
  - 's"<xl s.<xl s{xl s''xl s0xl s"7"<.<{''0-xl s"<.<{''0-xl s/-xl s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(still [still {still ''still "still -still'
  - '"</ .</ _</ ,8/ 8/ -/'

- - '!still @still #still $still %still ^still &still *still )still _still =still +still ]still }still \\still |still .still ,still ;still :still ?still <still >still `still ~still /still'
  - '!/ `a/ _?/ `s/ .0/ `5/ `&/ "9/ ">/ .-/ "7/ "6/ .>/ _>/ _*/ _|/ 4/ 1/ ;/0 3/ ;8/ `</ `>/ .*/ `9/ _//'
  - xfail: contraction following special characters is ignored

- - '(st [st {st ''st "st -st'
  - '"<st .<st _<st ,8st 8st -st'

- - '!st @st #st $st /st ^st &st *st )st _st =st +st ]st }st \\st |st .st ,st ;st :st ?st <st >st `st ~st /st'
  - '!st `ast _?st `sst /st `5st `&st "9st ">st .-st "7st "6st .>st _>st _*st _|st 4st 1st ;st0 3st ;8st `<st `>st .*st `9st /st'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-still xl-([{''"still l/-still l$-still'
  - 'xl-/ xl-"<.<{''0/ l/-/ l$-/'

- - 'xl(still xl[still xl{still xl''still xl"still xl-=([{''"still'
  - 'xl"</ xl.</ xl{/ xl''/ xl0/ xl-"7"<.<{''0/'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'still) still] still} still'' still" still- still, still. still; still: still? still!'
  - '/"> /.> /_> /,0 /0 /- /1 /4 /; /03 /8 /!'

- - 'still@ still# still$ still% still^ still& still* still( still_ still= still+ still[ still{ still\\ still| still< still> still` still~ still/'
  - '/`a /_? /`s /.0 /`5 /`& /"9 /"< /.- /"7 /"6 /.< /_< /_* /_| /`< /`> /."9 /`9 //'
  - xfail: contraction followed by special characters is ignored

- - 'st) st] st} st'' st" st- st, st. st; st: st? st!'
  - 'st"> st.> st_> st,0 st0 st- st1 st4 st; st03 st8 st!'

- - 'st@ st# st$ st% st^ st& st* st( st_ st= st+ st[ st{ st\\ st| st< st> st` st~ st/'
  - 'st`a st_? st`s st.0 st`5 st`& st"9 st"< st.- st"7 st"6 st.< st_< st_* st_| st`< st`> st."9 st`9 st/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'still-xl still-([{''"xl still-/xl still-$xl'
  - '/-xl /-"<.<{''0xl /-/xl /-`sxl'

- - 'still(xl still[xl still{xl still''xl still"xl still=([{''"-xl still([{''"-xl still/-xl still$-xl'
  - '/"<xl /.<xl /{xl /''xl /0xl /"7"<.<{''0-xl /"<.<{''0-xl //-xl /`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(such [such {such ''such "such -such'
  - '"<s* .<s* _<s* ,8s* 8s* -s*'

- - '!such @such #such $such %such ^such &such *such )such _such =such +such ]such }such \\such |such .such ,such ;such :such ?such <such >such `such ~such /such'
  - '!s* `as* _?s* `ss* .0s* `5s* `&s* *s* ">s* .-s* "7s* "6s* .>s* _>s* _*s* _|s* 4s* 1s* ;s*0 3s* ;8s* `<s* `>s* ;8s* .*s* `9s* _/s*'
  - xfail: contraction following special characters is ignored

- - '(sch [sch {sch ''sch "sch -sch'
  - '"<sch .<sch _<sch ,8sch 8sch -sch'

- - '!sch @sch #sch $sch %sch ^sch &sch *sch )sch _sch =sch +sch ]sch }sch \\sch |sch .sch ,sch ;sch :sch ?sch <sch >sch `sch ~sch /sch'
  - '!sch `asch _?sch `ssch .0sch `5sch `&sch *sch ">sch .-sch "7sch "6sch .>sch _>sch _*sch _|sch 4sch 1sch ;sch0 3sch ;8sch `<sch `>sch .*sch `9sch _/sch'

- - 'xl-such xl-([{''"such l/-such l$-such'
  - 'xl-s* xl-"<.<{''0s* l/-s* l$-s*'

- - 'xl(such xl[such xl{such xl''such xl"such xl-=([{''"such'
  - 'xl"<s* xl.<s* xl{s* xl''s* xl0s* xl-"7"<.<{''0s*'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'such) such] such} such'' such" such- such, such. such; such: such? such!'
  - 's*"> s*.> s*_> s*,0 s*0 s*- s*1 s*4 s*; s*03 s*8 s*!'

- - 'such@ such# such$ such% such^ such& such* such( such_ such= such+ such[ such{ such\\ such| such< such> such` such~ such/'
  - 's*`a s*_? s*`s s*.0 s*`5 s*`& s*"9 s*"< s*.- s*"7 s*"6 s*.< s*_< s*_* s*_| s*`< s*`> s*."9 s*`9 s*/'
  - xfail: contraction followed by special characters is ignored

- - 'sch) sch] sch} sch'' sch" sch- sch, sch. sch; sch: sch? sch!'
  - 'sch"> sch.> sch_> sch,0 sch0 sch- sch1 sch4 sch; sch03 sch8 sch!'

- - 'sch@ sch# sch$ sch% sch^ sch& sch* sch( sch_ sch= sch+ sch[ sch{ sch\\ sch| sch< sch> sch` sch~ sch/'
  - 'sch`a sch_? sch`s sch.0 sch`5 sch`& sch"9 sch"< sch.- sch"7 sch"6 sch.< sch_< sch_* sch_| sch`< sch`> sch."9 sch`9 sch/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'such-xl such-([{''"xl such-/xl such-$xl'
  - 's*-xl s*-"<.<{''0xl s*-_/xl s*-`sxl'

- - 'such(xl such[xl such{xl such''xl such"xl such=([{''"-xl such([{''"-xl such/-xl such$-xl'
  - 's*"<xl s*.<xl s*{xl s*''xl s*0xl s*"7"<.<{''0-xl s*"<.<{''0-xl s*/-xl s*`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(suchs [suchs {suchs ''suchs "suchs -suchs'
  - '"<s*s .<s*s _<s*s ,8s*s 8s*s -s*s'

- - '!suchs @suchs #suchs $suchs %suchs ^suchs &suchs *suchs )suchs _suchs =suchs +suchs ]suchs }suchs \\suchs |suchs .suchs ,suchs ;suchs :suchs ?suchs <suchs >suchs `suchs ~suchs /suchs'
  - '!s*s `as*s _?s*s `ss*s .0s*s `5s*s `&s*s "9s*s ">s*s .-s*s "7s*s "6s*s .>s*s _>s*s _*s*s _|s*s 4s*s 1s*s ;s*s0 3s*s ;8s*s `<s*s `>s*s ;8s*s .*s*s `9s*s _/s*s'
  - xfail: contraction following special characters is ignored

- - 'schs (schs [schs {schs ''schs "schs -schs !schs @schs #schs $schs %schs ^schs &schs *schs )schs _schs =schs +schs ]schs }schs \\schs |schs .schs ,schs ;schs :schs ?schs <schs >schs `schs ~schs /schs'
  - 'schs "<schs .<schs _<schs ,8schs 8schs -schs !schs `aschs _?schs `sschs .0schs `5schs `&schs "9schs ">schs .-schs "7schs "6schs .>schs _>schs _*schs _|schs 4schs 1schs ;schs0 3schs ;8schs `<schs `>schs .*schs `9schs _/schs'
  - xfail: non-contraction of "schs" conflicts witcv contraction of "suchs"

- - 'xl-suchs xl-([{''"suchs l/-suchs l$-suchs'
  - 'xl-s*s xl-"<.<{''0s*s l/-s*s l$-s*s'

- - 'xl(suchs xl[suchs xl{suchs xl''suchs xl"suchs xl-=([{''"suchs'
  - 'xl"<s*s xl.<s*s xl{s*s xl''s*s xl0s*s xl-"7"<.<{''0s*s'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'suchs) suchs] suchs} suchs'' suchs" suchs- suchs, suchs. suchs; suchs: suchs? suchs!'
  - 's*s"> s*s.> s*s_> s*s,0 s*s0 s*s- s*s1 s*s4 s*s; s*s03 s*s8 s*s!'

- - 'suchs@ suchs# suchs$ suchs% suchs^ suchs& suchs* suchs( suchs_ suchs= suchs+ suchs[ suchs{ suchs\\ suchs| suchs< suchs> suchs` suchs~ suchs/'
  - 's*s`a s*s_? s*s`s s*s.0 s*s`5 s*s`& s*s"9 s*s"< s*s.- s*s"7 s*s"6 s*s.< s*s_< s*s_* s*s_| s*s`< s*s`> s*s."9 s*s`9 s*s/'
  - xfail: contraction followed by special characters is ignored

- - 'schs) schs] schs} schs'' schs" schs- schs, schs. schs; schs: schs? schs! schs@ schs# schs$ schs% schs^ schs& schs* schs( schs_ schs= schs+ schs[ schs{ schs\\ schs| schs< schs> schs` schs~ schs/'
  - 'schs"> schs.> schs_> schs,0 schs0 schs- schs1 schs4 schs; schs03 schs8 schs! schs`a schs_? schs`s schs.0 schs`5 schs`& schs"9 schs"< schs.- schs"7 schs"6 schs.< schs_< schs_* schs_| schs`< schs`> schs."9 schs`9 schs/'
  - xfail: non-contraction of "schs" conflicts with contraction of "suchs"

- - 'suchs-xl suchs-([{''"xl suchs-/xl suchs-$xl'
  - 's*s-xl s*s-"<.<{''0xl s*s-_/xl s*s-`sxl'

- - 'suchs(xl suchs[xl suchs{xl suchs''xl suchs"xl suchs=([{''"-xl suchs([{''"-xl suchs/-xl suchs$-xl'
  - 's*s"<xl s*s.<xl s*s{xl s*s''xl s*s0xl s*s"7"<.<{''0-xl s*s"<.<{''0-xl s*s/-xl s*s`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(that [that {that ''that "that -that'
  - '"<t .<t _<t ,8t 8t -t'

- - '!that @that #that $that %that ^that &that *that )that _that =that +that ]that }that \\that |that .that ,that ;that :that ?that <that >that `that ~that /that'
  - '!t `at _?t `st .0t `5t `&t "9t ">t .-t "7t "6t .>t _>t _*t _|t 4t 1t ;t0 3t ;8t `<t `>t .*t `9t _/t'
  - xfail: contraction following special characters is ignored

- - '(t [t {t ''t "t -t'
  - '"<;t .<;t _<;t ,8;t 8;t -;t'

- - '!t @t #t $t %t ^t &t *t )t _t =t +t ]t }t \\t |t .t ,t ;t :t ?t <t >t `t ~t /t'
  - '!;t `a;t _?;t `s;t .0;t `5;t `&;t "9;t ">;t .-;t "7;t "6;t .>;t _>;t _*;t _|;t 4;t 1;t ;2t0 3;t ;8;t `<;t `>;t .*;t `9;t _/;t'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-that xl-([{''"that xl/-that xl$-that'
  - 'xl-t xl-"<.<{''0t xl_/-t xl`s-t'

- - 'xl(that xl[that xl{that xl''that xl"that xl-=([{''"that'
  - 'xl"<t xl.<t xl{t xl''t xl0t xl-"7"<.<{''0t'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'that) that] that} that'' that" that- that, that. that; that: that? that!'
  - 't"> t.> t_> t,0 t0 t- t1 t4 t; t03 t? t!'

- - 'that@ that# that$ that% that^ that& that* that( that_ that= that+ that[ that{ that\\ that| that< that> that` that~ that/'
  - 't`a t_? t`s t.0 t`5 t`& t"9 t"< t.- t"7 t"6 t.< t_< t_* t_| t`< t`> t."9 t`9 t/'
  - xfail: contraction followed by special characters is ignored

- - 't) t] t} t'' t" t- t, t. t; t: t? t!'
  - ';t"> ;t.> ;t_> ;t,0 ;t0 ;t- ;t1 ;t4 ;t; ;t03 ;t8 ;t!'

- - 't@ t# t$ t% t^ t& t* t( t_ t= t+ t[ t{ t\\ t| t< t> t` t~ t/'
  - ';t`a ;t_? ;t`s ;t.0 ;t`5 ;t`& ;t"9 ;t"< ;t.- ;t"7 ;t"6 ;t.< ;t_< ;t_* ;t_| ;t`< ;t`> ;t."9 ;t`9 ;t/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'that-xl that-([{''"xl that-/xl that-$xl'
  - 't-xl t-"<.<{''0xl t-_/xl t-`sxl'

- - 'that(xl that[xl that{xl that''xl that"xl that=([{''"-xl that([{''"-xl that/-xl that$-xl'
  - 't"<xl t.<xl t{xl t''xl t0xl t"7"<.<{''0-xl t"<.<{''0-xl t/-xl t`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(themselves [themselves {themselves ''themselves "themselves -themselves'
  - '"<!mvs .<!mvs _<!mvs ,8!mvs 8!mvs -!mvs'

- - '!themselves @themselves #themselves $themselves %themselves ^themselves &themselves *themselves )themselves _themselves =themselves +themselves ]themselves }themselves \\themselves |themselves .themselves ,themselves ;themselves :themselves ?themselves <themselv'
  - '6mvs `a!mvs _?!mvs `s!mvs .0!mvs `5!mvs `&!mvs "9!mvs ">!mvs .-!mvs "7!mvs "6!mvs .>!mvs _>!mvs _*!mvs _|!mvs 4!mvs 1!mvs ;!mvs0 3!mvs ;8!mvs `<!mvs `>!mvs .*!mvs `9!mvs _/!mvs'
  - xfail: contraction following special characters is ignored

- - '(themvs [themvs {themvs ''themvs "themvs -themvs'
  - '"<themvs .<themvs _<themvs ,8themvs 8themvs -themvs'

- - '!themvs @themvs #themvs $themvs %themvs ^themvs &themvs *themvs )themvs _themvs =themvs +themvs ]themvs }themvs \\themvs |themvs .themvs ,themvs ;themvs :themvs ?themvs <themvs >themvs `themvs ~themvs /themvs'
  - '!themvs `athemvs _?themvs `sthemvs .0themvs `5themvs `&themvs "9themvs ">themvs .-themvs "7themvs "6themvs .>themvs _>themvs _*themvs _|themvs 4themvs 1themvs ;themvs0 3themvs ;8themvs `<themvs `>themvs .*themvs `9themvs _/themvs'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-themselves xl-([{''"themselves l/-themselves l$-themselves'
  - 'xl-!mvs xl-"<.<{''0!mvs l/-!mvs l$-!mvs'

- - 'xl(themselves xl[themselves xl{themselves xl''themselves xl"themselves xl-=([{''"themselves'
  - 'xl"<!mvs xl.<!mvs xl{!mvs xl''!mvs xl0!mvs xl-"7"<.<{''0!mvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'themselves) themselves] themselves} themselves'' themselves" themselves- themselves, themselves. themselves; themselves: themselves? themselves!'
  - '!mvs"> !mvs.> !mvs_> !mvs,0 !mvs0 !mvs- !mvs1 !mvs4 !mvs; !mvs03 !mvs8 !mvs!'

- - 'themselves@ themselves# themselves$ themselves% themselves^ themselves& themselves* themselves( themselves_ themselves= themselves+ themselves[ themselves{ themselves\\ themselves| themselves< themselves> themselves` themselves~ themselves/'
  - '!mvs`a !mvs_? !mvs`s !mvs.0 !mvs`5 !mvs`& !mvs"9 !mvs"< !mvs.- !mvs"7 !mvs"6 !mvs.< !mvs_< !mvs_* !mvs_| !mvs`< !mvs`> !mvs."9 !mvs`9 !mvs/'
  - xfail: contraction followed by special characters is ignored

- - 'themvs) themvs] themvs} themvs'' themvs" themvs- themvs, themvs. themvs; themvs: themvs? themvs!'
  - 'themvs"> themvs.> themvs_> themvs,0 themvs0 themvs- themvs1 themvs4 themvs; themvs03 themvs8 themvs!'

- - 'themvs@ themvs# themvs$ themvs% themvs^ themvs& themvs* themvs( themvs_ themvs= themvs+ themvs[ themvs{ themvs\\ themvs| themvs< themvs> themvs` themvs~ themvs/'
  - 'themvs`a themvs_? themvs`s themvs.0 themvs`5 themvs`& themvs"9 themvs"< themvs.- themvs"7 themvs"6 themvs.< themvs_< themvs_* themvs_| themvs`< themvs`> themvs."9 themvs`9 themvs/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'themselves-xl themselves-([{''"xl themselves-/xl themselves-$xl'
  - '!mvs-xl !mvs-"<.<{''0xl !mvs-_/xl !mvs-`sxl'

- - 'themselves(xl themselves[xl themselves{xl themselves''xl themselves"xl themselves=([{''"-xl themselves([{''"-xl themselves/-xl themselves$-xl'
  - '!mvs"<xl !mvs.<xl !mvs{xl !mvs''xl !mvs0xl !mvs"7"<.<{''0-xl !mvs"<.<{''0-xl !mvs/-xl !mvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(themselvess [themselvess {themselvess ''themselvess "themselvess -themselvess'
  - '"<!mvss .<!mvss _<!mvss ,8!mvss 8!mvss -!mvss'

- - '!themselvess @themselvess #themselvess $themselvess %themselvess ^themselvess &themselvess *themselvess )themselvess _themselvess =themselvess +themselvess ]themselvess }themselvess \\themselvess |themselvess .themselvess ,themselvess ;themselvess :themselvess ?'
  - '6mvss `a!mvss _?!mvss `s!mvss .0!mvss `5!mvss `&!mvss "9!mvss ">!mvss .-!mvss "7!mvss "6!mvss .>!mvss _>!mvss _*!mvss _|!mvss 4!mvss 1!mvss ;!mvss0 3!mvss ;8!mvss `<!mvss `>!mvss .*!mvss `9!mvss _/!mvss'
  - xfail: contraction following special characters is ignored

- - 'themvss (themvss [themvss {themvss ''themvss "themvss -themvss !themvss @themvss #themvss $themvss %themvss ^themvss &themvss *themvss )themvss _themvss =themvss +themvss ]themvss }themvss \\themvss |themvss .themvss ,themvss ;themvss :themvss ?themvss <themvss >'
  - 'themvss "<themvss .<themvss _<themvss ,8themvss 8themvss -themvss !themvss `athemvss _?themvss `sthemvss .0themvss `5themvss `&themvss "9themvss ">themvss .-themvss "7themvss "6themvss .>themvss _>themvss _*themvss _|themvss 4themvss 1themvss ;themvss0 3themvss ;8themvss `<themvss `>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-themselvess xl-([{''"themselvess l/-themselvess l$-themselvess'
  - 'xl-!mvss xl-"<.<{''0!mvss l/-!mvss l$-!mvss'

- - 'xl(themselvess xl[themselvess xl{themselvess xl''themselvess xl"themselvess xl-=([{''"themselvess'
  - 'xl"<!mvss xl.<!mvss xl{!mvss xl''!mvss xl0!mvss xl-"7"<.<{''0!mvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'themselvess) themselvess] themselvess} themselvess'' themselvess" themselvess- themselvess, themselvess. themselvess; themselvess: themselvess? themselvess!'
  - '!mvss"> !mvss.> !mvss_> !mvss,0 !mvss0 !mvss- !mvss1 !mvss4 !mvss; !mvss03 !mvss8 !mvss!'

- - 'themselvess@ themselvess# themselvess$ themselvess% themselvess^ themselvess& themselvess* themselvess( themselvess_ themselvess= themselvess+ themselvess[ themselvess{ themselvess\\ themselvess| themselvess< themselvess> themselvess` themselvess~ themselvess/'
  - '!mvss`a !mvss_? !mvss`s !mvss.0 !mvss`5 !mvss`& !mvss"9 !mvss"< !mvss.- !mvss"7 !mvss"6 !mvss.< !mvss_< !mvss_* !mvss_| !mvss`< !mvss`> !mvss."9 !mvss`9 !mvss/'
  - xfail: contraction followed by special characters is ignored

- - 'themvss) themvss] themvss} themvss'' themvss" themvss- themvss, themvss. themvss; themvss: themvss? themvss! themvss@ themvss# themvss$ themvss% themvss^ themvss& themvss* themvss( themvss_ themvss= themvss+ themvss[ themvss{ themvss\\ themvss| themvss< themvss>'
  - 'themvss"> themvss.> themvss_> themvss,0 themvss0 themvss- themvss1 themvss4 themvss; themvss03 themvss8 themvss! themvss`a themvss_? themvss`s themvss.0 themvss`5 themvss`& themvss"9 themvss"< themvss.- themvss"7 themvss"6 themvss.< themvss_< themvss_* themvss_| themvss`< themvss>'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'themselvess-xl themselvess-([{''"xl themselvess-/xl themselvess-$xl'
  - '!mvss-xl !mvss-"<.<{''0xl !mvss-_/xl !mvss-`sxl'

- - 'themselvess(xl themselvess[xl themselvess{xl themselvess''xl themselvess"xl themselvess=([{''"-xl themselvess([{''"-xl themselvess/-xl themselvess$-xl'
  - '!mvss"<xl !mvss.<xl !mvss{xl !mvss''xl !mvss0xl !mvss"7"<.<{''0-xl !mvss"<.<{''0-xl !mvss/-xl !mvss`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(this [this {this ''this "this -this'
  - '"<? .<? _<? ,8? 8? -?'

- - '!this @this #this $this %this ^this &this *this )this _this =this +this ]this }this \\this |this .this ,this ;this :this ?this <this >this `this ~this /this'
  - '!? `a? _?? `s? .0? `5? `&? "9? ">? .-? "7? "6? .>? _>? _*? _|? 4? 1? ;?0 3? ;8? `<? `>? .*? `9? _/?'
  - xfail: contraction following special characters is ignored

- - '(th [th {th ''th "th -th'
  - '"<th .<th _<th ,8th 8th -th'

- - '!th @th #th $th ?th ^th &th *th )th _th =th +th ]th }th \\th |th .th ,th ;th :th ?th <th >th `th ~th ?th'
  - '!th `ath _?th `sth ?th `5th `&th "9th ">th .-th "7th "6th .>th _>th _*th _|th 4th 1th ;th0 3th ?th `<th `>th .*th `9th ?th'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-this xl-([{''"this l?-this l$-this'
  - 'xl-? xl-"<.<{''0? l?-? l$-?'

- - 'xl(this xl[this xl{this xl''this xl"this xl-=([{''"this'
  - 'xl"<? xl.<? xl{? xl''? xl0? xl-"7"<.<{''0?'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'this) this] this} this'' this" this- this, this. this; this: this? this!'
  - '?"> ?.> ?_> ?,0 ?0 ?- ?1 ?4 ?; ?03 ?;8 ?!'

- - 'this@ this# this$ this% this^ this& this* this( this_ this= this+ this[ this{ this\\ this| this< this> this` this~ this/'
  - '?`a ?_? ?`s ?.0 ?`5 ?`& ?"9 ?"< ?.- ?"7 ?"6 ?.< ?_< ?_* ?_| ?`< ?`> ?."9 ?`9 ?/'
  - xfail: contraction followed by special characters is ignored

- - 'th) th] th} th'' th" th- th, th. th; th: th? th!'
  - 'th"> th.> th_> th,0 th0 th- th1 th4 th; th03 th? th!'

- - 'th@ th# th$ th% th^ th& th* th( th_ th= th+ th[ th{ th\\ th| th< th> th` th~ th/'
  - 'th`a th_? th`s th.0 th`5 th`& th"9 th"< th.- th"7 th"6 th.< th_< th_* th_| th`< th`> th."9 th`9 th/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'this-xl this-([{''"xl this-?l this-$xl'
  - '?-xl ?-"<.<{''0xl ?-?l ?-`sxl'

- - 'this(xl this[xl this{xl this''xl this"xl this=([{''"-xl this([{''"-xl this/-xl this$-xl'
  - '?"<xl ?.<xl ?{xl ?''xl ?0xl ?"7"<.<{''0-xl ?"<.<{''0-xl ?/-xl ?`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(thyself [thyself {thyself ''thyself "thyself -thyself'
  - '"<8yf .<8yf _<8yf ,88yf 88yf -8yf'

- - '!thyself @thyself #thyself $thyself %thyself ^thyself &thyself *thyself )thyself _thyself =thyself +thyself ]thyself }thyself \\thyself |thyself .thyself ,thyself ;thyself :thyself ?thyself <thyself >thyself `thyself ~thyself /thyself'
  - '!8yf `a8yf _?8yf `s8yf .08yf `58yf `&8yf "98yf ">8yf .-8yf "78yf "68yf .>8yf _>8yf _*8yf _|8yf 48yf 18yf ;8yf0 38yf ;88yf `<8yf `>8yf .*8yf `98yf _/8yf'
  - xfail: contraction following special characters is ignored

- - '(thyf [thyf {thyf ''thyf "thyf -thyf'
  - '"<thyf .<thyf _<thyf ,8thyf 8thyf -thyf'

- - '!thyf @thyf #thyf $thyf %thyf ^thyf &thyf *thyf )thyf _thyf =thyf +thyf ]thyf }thyf \\thyf |thyf .thyf ,thyf ;thyf :thyf ?thyf <thyf >thyf `thyf ~thyf /thyf'
  - '!thyf `athyf _?thyf `sthyf .0thyf `5thyf `&thyf "9thyf ">thyf .-thyf "7thyf "6thyf .>thyf _>thyf _*thyf _|thyf 4thyf 1thyf ;thyf0 3thyf ;8thyf `<thyf `>thyf .*thyf `9thyf _/thyf'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'xl-thyself xl-([{''"thyself l/-thyself l$-thyself'
  - 'xl-8yf xl-"<.<{''08yf l/-8yf l$-8yf'

- - 'xl(thyself xl[thyself xl{thyself xl''thyself xl"thyself xl-=([{''"thyself'
  - 'xl"<8yf xl.<8yf xl{8yf xl''8yf xl08yf xl-"7"<.<{''08yf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'thyself) thyself] thyself} thyself'' thyself" thyself- thyself, thyself. thyself; thyself: thyself? thyself!'
  - '?yf"> ?yf.> ?yf_> ?yf,0 ?yf0 ?yf- ?yf1 ?yf4 ?yf; ?yf03 ?yf? ?yf!'

- - 'thyself@ thyself# thyself$ thyself% thyself^ thyself& thyself* thyself( thyself_ thyself= thyself+ thyself[ thyself{ thyself\\ thyself| thyself< thyself> thyself` thyself~ thyself/'
  - '?yf`a ?yf_? ?yf`s ?yf.0 ?yf`5 ?yf`& ?yf"9 ?yf"< ?yf.- ?yf"7 ?yf"6 ?yf.< ?yf_< ?yf_* ?yf_| ?yf`< ?yf`> ?yf."9 ?yf`9 ?yf/'
  - xfail: contraction followed by special characters is ignored

- - 'thyf) thyf] thyf} thyf'' thyf" thyf- thyf, thyf. thyf; thyf: thyf? thyf!'
  - 'thyf"> thyf.> thyf_> thyf,0 thyf0 thyf- thyf1 thyf4 thyf; thyf03 thyf? thyf!'

- - 'thyf@ thyf# thyf$ thyf% thyf^ thyf& thyf* thyf( thyf_ thyf= thyf+ thyf[ thyf{ thyf\\ thyf| thyf< thyf> thyf` thyf~ thyf/'
  - 'thyf`a thyf_? thyf`s thyf.0 thyf`5 thyf`& thyf"9 thyf"< thyf.- thyf"7 thyf"6 thyf.< thyf_< thyf_* thyf_| thyf`< thyf`> thyf."9 thyf`9 thyf/'
  - xfail: non-contraction following special characters thyyself a missing grade 1 indicator

- - 'thyself-xl thyself-([{''"xl thyself-/xl thyself-$xl'
  - '?yf-xl ?yf-"<.<{''0xl ?yf-_/xl ?yf-`sxl'

- - 'thyself(xl thyself[xl thyself{xl thyself''xl thyself"xl thyself=([{''"-xl thyself([{''"-xl thyself/-xl thyself$-xl'
  - '?yf"<xl ?yf.<xl ?yf{xl ?yf''xl ?yf0xl ?yf"7"<.<{''0-xl ?yf"<.<{''0-xl ?yf/-xl ?yf`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(thyselfs [thyselfs {thyselfs ''thyselfs "thyselfs -thyselfs'
  - '"<8yfs .<8yfs _<8yfs ,88yfs 88yfs -8yfs'

- - '!thyselfs @thyselfs #thyselfs $thyselfs %thyselfs ^thyselfs &thyselfs *thyselfs )thyselfs _thyselfs =thyselfs +thyselfs ]thyselfs }thyselfs \\thyselfs |thyselfs .thyselfs ,thyselfs ;thyselfs :thyselfs ?thyselfs <thyselfs >thyselfs `thyselfs ~thyselfs /thyselfs'
  - '!8yfs `a8yfs _?8yfs `s8yfs .08yfs `58yfs `&8yfs "98yfs ">8yfs .-8yfs "78yfs "68yfs .>8yfs _>8yfs _*8yfs _|8yfs 48yfs 18yfs ;8yfs0 38yfs ;88yfs `<8yfs `>8yfs .*8yfs `98yfs _/8yfs'
  - xfail: contraction following special characters is ignored

- - 'thyfs (thyfs [thyfs {thyfs ''thyfs "thyfs -thyfs !thyfs @thyfs #thyfs $thyfs %thyfs ^thyfs &thyfs *thyfs )thyfs _thyfs =thyfs +thyfs ]thyfs }thyfs \\thyfs |thyfs .thyfs ,thyfs ;thyfs :thyfs ?thyfs <thyfs >thyfs `thyfs ~thyfs /thyfs'
  - 'thyfs "<thyfs .<thyfs _<thyfs ,8thyfs 8thyfs -thyfs !thyfs `athyfs _?thyfs `sthyfs .0thyfs `5thyfs `&thyfs "9thyfs ">thyfs .-thyfs "7thyfs "6thyfs .>thyfs _>thyfs _*thyfs _|thyfs 4thyfs 1thyfs ;thyfs0 3thyfs ?thyfs `<thyfs `>thyfs .*thyfs `9thyfs _/thyfs'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'xl-thyselfs xl-([{''"thyselfs l/-thyselfs l$-thyselfs'
  - 'xl-8yfs xl-"<.<{''08yfs l/-8yfs l$-8yfs'

- - 'xl(thyselfs xl[thyselfs xl{thyselfs xl''thyselfs xl"thyselfs xl-=([{''"thyselfs'
  - 'xl"<8yfs xl.<8yfs xl{8yfs xl''8yfs xl08yfs xl-"7"<.<{''08yfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'thyselfs) thyselfs] thyselfs} thyselfs'' thyselfs" thyselfs- thyselfs, thyselfs. thyselfs; thyselfs: thyselfs? thyselfs!'
  - '?yfs"> ?yfs.> ?yfs_> ?yfs,0 ?yfs0 ?yfs- ?yfs1 ?yfs4 ?yfs; ?yfs03 ?yfs? ?yfs!'

- - 'thyselfs@ thyselfs# thyselfs$ thyselfs% thyselfs^ thyselfs& thyselfs* thyselfs( thyselfs_ thyselfs= thyselfs+ thyselfs[ thyselfs{ thyselfs\\ thyselfs| thyselfs< thyselfs> thyselfs` thyselfs~ thyselfs/'
  - '?yfs`a ?yfs_? ?yfs`s ?yfs.0 ?yfs`5 ?yfs`& ?yfs"9 ?yfs"< ?yfs.- ?yfs"7 ?yfs"6 ?yfs.< ?yfs_< ?yfs_* ?yfs_| ?yfs`< ?yfs`> ?yfs."9 ?yfs`9 ?yfs/'
  - xfail: contraction followed by special characters is ignored

- - 'thyfs) thyfs] thyfs} thyfs'' thyfs" thyfs- thyfs, thyfs. thyfs; thyfs: thyfs? thyfs! thyfs@ thyfs# thyfs$ thyfs% thyfs^ thyfs& thyfs* thyfs( thyfs_ thyfs= thyfs+ thyfs[ thyfs{ thyfs\\ thyfs| thyfs< thyfs> thyfs` thyfs~ thyfs/'
  - 'thyfs"> thyfs.> thyfs_> thyfs,0 thyfs0 thyfs- thyfs1 thyfs4 thyfs; thyfs03 thyfs? thyfs! thyfs`a thyfs_? thyfs`s thyfs.0 thyfs`5 thyfs`& thyfs"9 thyfs"< thyfs.- thyfs"7 thyfs"6 thyfs.< thyfs_< thyfs_* thyfs_| thyfs`< thyfs`> thyfs."9 thyfs`9 thyfs/'
  - xfail: non-contraction following special characters thyyselfs a missing grade 1 indicator

- - 'thyselfs-xl thyselfs-([{''"xl thyselfs-/xl thyselfs-$xl'
  - '?yfs-xl ?yfs-"<.<{''0xl ?yfs-_/xl ?yfs-`sxl'

- - 'thyselfs(xl thyselfs[xl thyselfs{xl thyselfs''xl thyselfs"xl thyselfs=([{''"-xl thyselfs([{''"-xl thyselfs/-xl thyselfs$-xl'
  - '?yfs"<xl ?yfs.<xl ?yfs{xl ?yfs''xl ?yfs0xl ?yfs"7"<.<{''0-xl ?yfs"<.<{''0-xl ?yfs/-xl ?yfs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(today [today {today ''today "today -today'
  - '"<td .<td _<td ,8td 8td -td'

- - '!today @today #today $today %today ^today &today *today )today _today =today +today ]today }today \\today |today .today ,today ;today :today ?today <today >today `today ~today /today'
  - '!td `atd _?td `std .0td `5td `&td "9td ">td .-td "7td "6td .>td _>td _*td _|td 4td 1td ;td0 3td ;8td `<td `>td ;8td .*td `9td _/td'
  - xfail: contraction following special characters is ignored

- - '(td [td {td ''td "td -td'
  - '"<;td .<;td _<;td ,8;td 8;td -;td'

- - '!td @td #td $td %td ^td &td *td )td _td =td +td ]td }td \\td |td .td ,td ;td :td ?td <td >td ?td `td ~td /td'
  - '!;td `a;td _?;td `s;td .0;td `5;td `&;td "9;td ">;td .-;td "7;td "6;td .>;td _>;td _*;td _|;td 4;td 1;td ;2td0 3;td ;8;td `<;td `>;td .*;td `9;td _/;td'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-today xl-([{''"today l/-today l$-today'
  - 'xl-td xl-"<.<{''0td l/-td l$-td'

- - 'xl(today xl[today xl{today xl''today xl"today xl-=([{''"today'
  - 'xl"<td xl.<td xl{td xl''td xl0td xl-"7"<.<{''0td'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'today) today] today} today'' today" today- today, today. today; today: today? today!'
  - 'td"> td.> td_> td,0 td0 td- td1 td4 td; td03 td8 td!'

- - 'today@ today# today$ today% today^ today& today* today( today_ today= today+ today[ today{ today\\ today| today< today> today` today~ today/'
  - 'td`a td_? td`s td.0 td`5 td`& td"9 td"< td.- td"7 td"6 td.< td_< td_* td_| td`< td`> td."9 td`9 td/'
  - xfail: contraction followed by special characters is ignored

- - 'td) td] td} td'' td" td- td, td. td; td: td? td!'
  - ';td"> ;td.> ;td_> ;td,0 ;td0 ;td- ;td1 ;td4 ;td; ;td03 ;td8 ;td!'

- - 'td@ td# td$ td% td^ td& td* td( td_ td= td+ td[ td{ td\\ td| td< td> td` td~ td/'
  - ';td`a ;td_? ;td`s ;td.0 ;td`5 ;td`& ;td"9 ;td"< ;td.- ;td"7 ;td"6 ;td.< ;td_< ;td_* ;td_| ;td`< ;td`> ;td."9 ;td`9 ;td/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'today-xl today-([{''"xl today-/xl today-$xl'
  - 'td-xl td-"<.<{''0xl td-_/xl td-`sxl'

- - 'today(xl today[xl today{xl today''xl today"xl today=([{''"-xl today([{''"-xl today/-xl today$-xl'
  - 'td"<xl td.<xl td{xl td''xl td0xl td"7"<.<{''0-xl td"<.<{''0-xl td/-xl td`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(todays [todays {todays ''todays "todays -todays'
  - '"<tds .<tds _<tds ,8tds 8tds -tds'

- - '!todays @todays #todays $todays %todays ^todays &todays *todays )todays _todays =todays +todays ]todays }todays \\todays |todays .todays ,todays ;todays :todays ?todays <todays >todays `todays ~todays /todays'
  - '!tds `atds _?tds `stds .0tds `5tds `&tds "9tds ">tds .-tds "7tds "6tds .>tds _>tds _*tds _|tds 4tds 1tds ;tds0 3tds ;8tds `<tds `>tds ;8tds .*tds `9tds _/tds'
  - xfail: contraction following special characters is ignored

- - 'tds (tds [tds {tds ''tds "tds -tds !tds @tds #tds $tds %tds ^tds &tds *tds )tds _tds =tds +tds ]tds }tds \\tds |tds .tds ,tds ;tds :tds ?tds <tds >tds ?tds `tds ~tds /tds'
  - ';tds "<;tds .<;tds _<;tds ,8;tds 8;tds -;tds !;tds `a;tds _?;tds `s;tds .0;tds `5;tds `&;tds "9;tds ">;tds .-;tds "7;tds "6;tds .>;tds _>;tds _*;tds _|;tds 4;tds 1;tds ;2tds0 3;tds ;8;tds `<;tds `>;tds .*;tds `9;tds _/;tds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-todays xl-([{''"todays l/-todays l$-todays'
  - 'xl-tds xl-"<.<{''0tds l/-tds l$-tds'

- - 'xl(todays xl[todays xl{todays xl''todays xl"todays xl-=([{''"todays'
  - 'xl"<tds xl.<tds xl{tds xl''tds xl0tds xl-"7"<.<{''0tds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'todays) todays] todays} todays'' todays" todays- todays, todays. todays; todays: todays? todays!'
  - 'tds"> tds.> tds_> tds,0 tds0 tds- tds1 tds4 tds; tds03 tds8 tds!'

- - 'todays@ todays# todays$ todays% todays^ todays& todays* todays( todays_ todays= todays+ todays[ todays{ todays\\ todays| todays< todays> todays` todays~ todays/'
  - 'tds`a tds_? tds`s tds.0 tds`5 tds`& tds"9 tds"< tds.- tds"7 tds"6 tds.< tds_< tds_* tds_| tds`< tds`> tds."9 tds`9 tds/'
  - xfail: contraction followed by special characters is ignored

- - 'tds) tds] tds} tds'' tds" tds- tds, tds. tds; tds: tds? tds! tds@ tds# tds$ tds% tds^ tds& tds* tds( tds_ tds= tds+ tds[ tds{ tds\\ tds| tds< tds> tds` tds~ tds/'
  - ';tds"> ;tds.> ;tds_> ;tds,0 ;tds0 ;tds- ;tds1 ;tds4 ;tds; ;tds03 ;tds8 ;tds! ;tds`a ;tds_? ;tds`s ;tds.0 ;tds`5 ;tds`& ;tds"9 ;tds"< ;tds.- ;tds"7 ;tds"6 ;tds.< ;tds_< ;tds_* ;tds_| ;tds`< ;tds`> ;tds."9 ;tds`9 ;tds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'todays-xl todays-([{''"xl todays-/xl todays-$xl'
  - 'tds-xl tds-"<.<{''0xl tds-_/xl tds-`sxl'

- - 'todays(xl todays[xl todays{xl todays''xl todays"xl todays=([{''"-xl todays([{''"-xl todays/-xl todays$-xl'
  - 'tds"<xl tds.<xl tds{xl tds''xl tds0xl tds"7"<.<{''0-xl tds"<.<{''0-xl tds/-xl tds`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(together [together {together ''together "together -together'
  - '"<tgr .<tgr _<tgr ,8tgr 8tgr -tgr'

- - '!together @together #together $together %together ^together &together *together )together _together =together +together ]together }together \\together |together .together ,together ;together :together ?together <together >together `together ~together /together'
  - '!tgr `atgr _?tgr `stgr .0tgr `5tgr `&tgr "9tgr ">tgr .-tgr "7tgr "6tgr .>tgr }tgr _*tgr _|tgr 4tgr 1tgr ;tgr0 3tgr ;8tgr `<tgr `>tgr .*tgr `9tgr _/tgr'
  - xfail: contraction following special characters is ignored

- - '(tgr [tgr {tgr ''tgr "tgr -tgr'
  - '"<;tgr .<;tgr _<;tgr ,8;tgr 8;tgr -;tgr'

- - '!tgr @tgr #tgr $tgr %tgr ^tgr &tgr *tgr )tgr _tgr =tgr +tgr ]tgr }tgr \\tgr |tgr .tgr ,tgr ;tgr :tgr ?tgr <tgr >tgr ?tgr `tgr ~tgr /tgr'
  - '!;tgr `a;tgr _?;tgr `s;tgr .0;tgr `5;tgr `&;tgr "9;tgr ">;tgr .-;tgr "7;tgr "6;tgr .>;tgr _>;tgr _*;tgr _|;tgr 4;tgr 1;tgr ;2tgr0 3;tgr ;8;tgr `<;tgr `>;tgr .*;tgr `9;tgr _/;tgr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-together xl-([{''"together l/-together l$-together'
  - 'xl-tgr xl-"<.<{''0tgr l/-tgr l$-tgr'

- - 'xl(together xl[together xl{together xl''together xl"together xl-=([{''"together'
  - 'xl"<tgr xl.<tgr xl{tgr xl''tgr xl0tgr xl-"7"<.<{''0tgr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'together) together] together} together'' together" together- together, together. together; together: together? together!'
  - 'tgr"> tgr.> tgr_> tgr,0 tgr0 tgr- tgr1 tgr4 tgr; tgr03 tgr8 tgr!'

- - 'together@ together# together$ together% together^ together& together* together( together_ together= together+ together[ together{ together\\ together| together< together> together` togeth'
  - 'tgr`a tgr_? tgr`s tgr.0 tgr`5 tgr`& tgr"9 tgr"< tgr.- tgr"7 tgr"6 tgr.< tgr_< tgr_* tgr_| tgr`< tgr`> tgr."9 tgr`9 tgr/'
  - xfail: contraction followed by special characters is ignored

- - 'tgr) tgr] tgr} tgr'' tgr" tgr- tgr, tgr. tgr; tgr: tgr? tgr!'
  - ';tgr"> ;tgr.> ;tgr_> ;tgr,0 ;tgr0 ;tgr- ;tgr1 ;tgr4 ;tgr; ;tgr03 ;tgr8 ;tgr!'

- - 'tgr@ tgr# tgr$ tgr% tgr^ tgr& tgr* tgr( tgr_ tgr= tgr+ tgr[ tgr{ tgr\\ tgr| tgr< tgr> tgr` tgr~ tgr/'
  - ';tgr`a ;tgr_? ;tgr`s ;tgr.0 ;tgr`5 ;tgr`& ;tgr"9 ;tgr"< ;tgr.- ;tgr"7 ;tgr"6 ;tgr.< ;tgr_< ;tgr_* ;tgr_| ;tgr`< ;tgr`> ;tgr."9 ;tgr`9 ;tgr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'together-xl together-([{''"xl together-/xl together-$xl'
  - 'tgr-xl tgr-"<.<{''0xl tgr-_/xl tgr-`sxl'

- - 'together(xl together[xl together{xl together''xl together"xl together=([{''"-xl together([{''"-xl together/-xl together$-xl'
  - 'tgr"<xl tgr.<xl tgr{xl tgr''xl tgr0xl tgr"7"<.<{''0-xl tgr"<.<{''0-xl tgr/-xl tgr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(togethers [togethers {togethers ''togethers "togethers -togethers'
  - '"<tgrs .<tgrs _<tgrs ,8tgrs 8tgrs -tgrs'

- - '!togethers @togethers #togethers $togethers %togethers ^togethers &togethers *togethers )togethers _togethers =togethers +togethers ]togethers }togethers \\togethers |togethers .togethers ,togethers ;togethers :togethers ?togethers <togethers >togethers'
  - '!tgrs `atgrs _?tgrs `stgrs .0tgrs `5tgrs `&tgrs "9tgrs ">tgrs .-tgrs "7tgrs "6tgrs .>tgrs _>tgrs _*tgrs _|tgrs 4tgrs 1tgrs ;tgrs0 3tgrs ;8tgrs `<tgrs `>tgrs'
  - xfail: contraction following special characters is ignored

- - '`togethers ~togethers /togethers'
  - '.*tgrs `9tgrs _/tgrs'
  - xfail: contraction following special characters is ignored

- - 'tgrs (tgrs [tgrs {tgrs ''tgrs "tgrs -tgrs !tgrs @tgrs #tgrs $tgrs %tgrs ^tgrs &tgrs *tgrs )tgrs _tgrs =tgrs +tgrs ]tgrs }tgrs \\tgrs |tgrs .tgrs ,tgrs ;tgrs :tgrs ?tgrs <tgrs >tgrs ?tgrs `tgrs ~tgrs /tgrs'
  - ';tgrs "<;tgrs .<;tgrs _<;tgrs ,8;tgrs 8;tgrs -;tgrs !;tgrs `a;tgrs _?;tgrs `s;tgrs .0;tgrs `5;tgrs `&;tgrs "9;tgrs ">;tgrs .-;tgrs "7;tgrs "6;tgrs .>;tgrs _>;tgrs _*;tgrs _|;tgrs 4;tgrs 1;tgrs ;2tgrs0 3;tgrs ;8;tgrs `<;tgrs `>;tgrs .*;tgrs `9;tgrs _/;tgrs'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-togethers xl-([{''"togethers l/-togethers l$-togethers'
  - 'xl-tgrs xl-"<.<{''0tgrs l/-tgrs l$-tgrs'

- - 'xl(togethers xl[togethers xl{togethers xl''togethers xl"togethers xl-=([{''"togethers'
  - 'xl"<tgrs xl.<tgrs xl{tgrs xl''tgrs xl0tgrs xl-"7"<.<{''0tgrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'togethers) togethers] togethers} togethers'' togethers" togethers- togethers, togethers. togethers; togethers: togethers? togethers!'
  - 'tgrs"> tgrs.> tgrs_> tgrs,0 tgrs0 tgrs- tgrs1 tgrs4 tgrs; tgrs03 tgrs8 tgrs!'

- - 'togethers@ togethers# togethers$ togethers% togethers^ togethers& togethers* togethers( togethers_ togethers= togethers+ togethers[ togethers{ togethers\\ togethers| togethers< togethers> togethers` togeth'
  - 'tgrs`a tgrs_? tgrs`s tgrs.0 tgrs`5 tgrs`& tgrs"9 tgrs"< tgrs.- tgrs"7 tgrs"6 tgrs.< tgrs_< tgrs_* tgrs_| tgrs`< tgrs`> tgrs."9 tgrs`9 tgrs/'
  - xfail: contraction followed by special characters is ignored

- - 'tgrs) tgrs] tgrs} tgrs'' tgrs" tgrs- tgrs, tgrs. tgrs; tgrs: tgrs? tgrs! tgrs@ tgrs# tgrs$ tgrs% tgrs^ tgrs& tgrs* tgrs( tgrs_ tgrs= tgrs+ tgrs[ tgrs{ tgrs\\ tgrs| tgrs< tgrs> tgrs` tgrs~ tgrs/'
  - ';tgrs"> ;tgrs.> ;tgrs_> ;tgrs,0 ;tgrs0 ;tgrs- ;tgrs1 ;tgrs4 ;tgrs; ;tgrs03 ;tgrs8 ;tgrs! ;tgrs`a ;tgrs_? ;tgrs`s ;tgrs.0 ;tgrs`5 ;tgrs`& ;tgrs"9 ;tgrs"< ;tgrs.- ;tgrs"7 ;tgrs"6 ;tgrs.< ;tgrs_< ;tgrs_* ;tgrs_| ;tgrs`< ;tgrs`> ;tgrs."9 ;tgrs`9 ;tgrs/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'togethers-xl togethers-([{''"xl togethers-/xl togethers-$xl'
  - 'tgrs-xl tgrs-"<.<{''0xl tgrs-_/xl tgrs-`sxl'

- - 'togethers(xl togethers[xl togethers{xl togethers''xl togethers"xl togethers=([{''"-xl togethers([{''"-xl togethers/-xl togethers$-xl'
  - 'tgrs"<xl tgrs.<xl tgrs{xl tgrs''xl tgrs0xl tgrs"7"<.<{''0-xl tgrs"<.<{''0-xl tgrs/-xl tgrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(untogether [untogether {untogether ''untogether "untogether -untogether !untogether @untogether #untogether $untogether %untogether ^untogether &untogether *untogether )untogether _untogether =untogether +untogether ]untogether }untogether \\untogether'
  - '"<untgr .<untgr _<untgr ,8untgr 8untgr -untgr !untgr `auntgr _?untgr `suntgr .0untgr `5untgr `&untgr "9untgr ">untgr .-untgr "7untgr "6untgr .>untgr }untgr _*untgr'
  - xfail: contraction following special characters is ignored

- - '|untogether .untogether ,untogether ;untogether :untogether ?untogether <untogether >untogether `untogether ~untogether /untogether'
  - '_|untgr 4untgr 1untgr ;untgr0 3untgr ;8untgr `<untgr `>untgr .*untgr `9untgr _/untgr'
  - xfail: contraction following special characters is ignored

- - 'untgr (untgr [untgr {untgr ''untgr "untgr -untgr !untgr @untgr #untgr $untgr %untgr ^untgr &untgr *untgr )untgr _untgr =untgr +untgr ]untgr }untgr \\untgr |untgr .untgr ,untgr ;untgr :untgr ?untgr <untgr >untgr ?untgr `untgr ~untgr /untgr'
  - ';untgr "<;untgr .<;untgr _<;untgr ,8;untgr 8;untgr -;untgr !;untgr `a;untgr _?;untgr `s;untgr .0;untgr `5;untgr `&;untgr "9;untgr ">;untgr .-;untgr "7;untgr "6;untgr .>;untgr _>;untgr _*;untgr _|;untgr 4;untgr 1;untgr ;2untgr0 3;untgr ;8;untgr `<;untgr `>;untgr .*;untgr `9;untgr _/;untgr'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-untogether xl-([{''"untogether l/-untogether l$-untogether xl(untogether xl[untogether xl{untogether xl''untogether xl"untogether xl-=([{''"untogether'
  - 'xl-untgr xl-"<.<{''0untgr l/-untgr l$-untgr - xl"<untgr xl.<untgr xl{untgr xl''untgr xl0untgr xl-"7"<.<{''0untgr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'untogether) untogether] untogether} untogether'' untogether" untogether- untogether, untogether. untogether; untogether: untogether? untogether! untogether@ untogether# untogether$ untogether% untogether^ untogether& untogether* untogether( untogether_'
  - 'untgr"> untgr.> untgr_> untgr,0 untgr0 untgr- untgr1 untgr4 untgr; untgr03 untgr8 untgr! untgr`a untgr_? untgr`s untgr.0 untgr`5 untgr`& untgr"9 untgr"< untgr.-'
  - xfail: contraction followed by special characters is ignored

- - 'untogether= untogether+ untogether[ untogether{ untogether\\ untogether| untogether< untogether> untogether` untogeth'
  - 'untgr"7 untgr"6 untgr.< untgr_< untgr_* untgr_| untgr`< untgr`> untgr."9 untgr`9 untgr/'
  - xfail: contraction followed by special characters is ignored

- - 'untgr) untgr] untgr} untgr'' untgr" untgr- untgr, untgr. untgr; untgr: untgr? untgr! untgr@ untgr# untgr$ untgr% untgr^ untgr& untgr* untgr( untgr_ untgr= untgr+ untgr[ untgr{ untgr\\ untgr| untgr< untgr> untgr` untgr~ untgr/'
  - ';untgr"> ;untgr.> ;untgr_> ;untgr,0 ;untgr0 ;untgr- ;untgr1 ;untgr4 ;untgr; ;untgr03 ;untgr8 ;untgr! ;untgr`a ;untgr_? ;untgr`s ;untgr.0 ;untgr`5 ;untgr`& ;untgr"9 ;untgr"< ;untgr.- ;untgr"7 ;untgr"6 ;untgr.< ;untgr_< ;untgr_* ;untgr_| ;untgr`< ;untgr`> ;untgr."9 ;untgr`9 ;untgr/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'untogether-xl untogether-([{''"xl untogether-/xl untogether-$xl untogether(xl untogether[xl untogether{xl untogether''xl untogether"xl untogether=([{''"-xl untogether([{''"-xl untogether/-xl untogether$-xl'
  - 'untgr-xl untgr-"<.<{''0xl untgr-_/xl untgr-`sxl - untgr"<xl untgr.<xl untgr{xl untgr''xl untgr0xl untgr"7"<.<{''0-xl untgr"<.<{''0-xl untgr/-xl untgr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tomorrow [tomorrow {tomorrow ''tomorrow "tomorrow -tomorrow'
  - '"<tm .<tm {tm ,8tm 8tm -tm'

- - '!tomorrow @tomorrow #tomorrow $tomorrow %tomorrow ^tomorrow &tomorrow *tomorrow )tomorrow _tomorrow =tomorrow +tomorrow ]tomorrow }tomorrow \\tomorrow |tomorrow .tomorrow ,tomorrow ;tomorrow :tomorrow ?tomorrow <tomorrow >tomorrow `tomorrow ~tomorrow /tomorrow'
  - '!tm `atm _?tm `stm .0tm `5tm `&tm "9tm ">tm .-tm "7tm "6tm .>tm _>tm _*tm _|tm 4tm 1tm ;tm0 3tm ;8tm `<tm `>tm .*tm `9tm _/tm'
  - xfail: contraction following special characters is ignored

- - '(tm [tm {tm ''tm "tm -tm'
  - '"<;tm .<;tm _<;tm ,8;tm 8;tm -;tm'

- - '!tm @tm #tm $tm %tm ^tm &tm *tm )tm _tm =tm +tm ]tm }tm \\tm |tm .tm ,tm ;tm :tm ?tm <tm >tm `tm ~tm /tm'
  - '!;tm `a;tm _?;tm `s;tm .0;tm `5;tm `&;tm "9;tm ">;tm .-;tm "7;tm "6;tm .>;tm _>;tm _*;tm _|;tm 4;tm 1;tm ;2tm0 3;tm ;8;tm `<;tm `>;tm .*;tm `9;tm _/;tm'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tomorrow xl-([{''"tomorrow l/-tomorrow l$-tomorrow'
  - 'xl-tm xl-"<.<{''0tm l/-tm l$-tm'

- - 'xl(tomorrow xl[tomorrow xl{tomorrow xl''tomorrow xl"tomorrow xl-=([{''"tomorrow'
  - 'xl"<tm xl.<tm xl{tm xl''tm xl0tm xl-"7"<.<{''0tm'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tomorrow) tomorrow] tomorrow} tomorrow'' tomorrow" tomorrow- tomorrow, tomorrow. tomorrow; tomorrow: tomorrow? tomorrow!'
  - 'tm"> tm.> tm_> tm,0 tm0 tm- tm1 tm4 tm; tm03 tm8 tm!'

- - 'tomorrow@ tomorrow# tomorrow$ tomorrow% tomorrow^ tomorrow& tomorrow* tomorrow( tomorrow_ tomorrow= tomorrow+ tomorrow[ tomorrow{ tomorrow\\ tomorrow| tomorrow< tomorrow> tomorrow` tomorrow~ tomorrow/'
  - 'tm`a tm_? tm`s tm.0 tm`5 tm`& tm"9 tm"< tm.- tm"7 tm"6 tm.< tm_< tm_* tm_| tm`< tm`> tm."9 tm`9 tm/'
  - xfail: contraction followed by special characters is ignored

- - 'tm) tm] tm} tm'' tm" tm- tm, tm. tm; tm: tm? tm!'
  - ';tm"> ;tm.> ;tm_> ;tm,0 ;tm0 ;tm- ;tm1 ;tm4 ;tm; ;tm03 ;tm8 ;tm!'

- - 'tm@ tm# tm$ tm% tm^ tm& tm* tm( tm_ tm= tm+ tm[ tm{ tm\\ tm| tm< tm> tm` tm~ tm/'
  - ';tm`a ;tm_? ;tm`s ;tm.0 ;tm`5 ;tm`& ;tm"9 ;tm"< ;tm.- ;tm"7 ;tm"6 ;tm.< ;tm_< ;tm_* ;tm_| ;tm`< ;tm`> ;tm."9 ;tm`9 ;tm/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tomorrow-xl tomorrow-([{''"xl tomorrow-/xl tomorrow-$xl'
  - 'tm-xl tm-"<.<{''0xl tm-_/xl tm-`sxl'

- - 'tomorrow(xl tomorrow[xl tomorrow{xl tomorrow''xl tomorrow"xl tomorrow=([{''"-xl tomorrow([{''"-xl tomorrow/-xl tomorrow$-xl'
  - 'tm"<xl tm.<xl tm{xl tm''xl tm0xl tm"7"<.<{''0-xl tm"<.<{''0-xl tm/-xl tm`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tomorrows [tomorrows {tomorrows ''tomorrows "tomorrows -tomorrows'
  - '"<tms .<tms _<tms ,8tms 8tms -tms'

- - '!tomorrows @tomorrows #tomorrows $tomorrows %tomorrows ^tomorrows &tomorrows *tomorrows )tomorrows _tomorrows =tomorrows +tomorrows ]tomorrows }tomorrows \\tomorrows |tomorrows .tomorrows ,tomorrows ;tomorrows :tomorrows ?tomorrows <tomorrows >tomorrows `tomorro'
  - '!tms `atms _?tms `stms .0tms `5tms `&tms "9tms ">tms .-tms "7tms "6tms .>tms _>tms _*tms _|tms 4tms 1tms ;tms0 3tms ;8tms `<tms `>tms ;8tms .*tms `9tms _/tms'
  - xfail: contraction following special characters is ignored

- - 'tms (tms [tms {tms ''tms "tms -tms !tms @tms #tms $tms %tms ^tms &tms *tms )tms _tms =tms +tms ]tms }tms \\tms |tms .tms ,tms ;tms :tms ?tms <tms >tms ?tms `tms ~tms /tms'
  - ';tms "<;tms .<;tms _<;tms ,8;tms 8;tms -;tms !;tms `a;tms _?;tms `s;tms .0;tms `5;tms `&;tms "9;tms ">;tms .-;tms "7;tms "6;tms .>;tms _>;tms _*;tms _|;tms 4;tms 1;tms ;2tms0 3;tms ;8;tms `<;tms `>;tms .*;tms `9;tms _/;tms'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tomorrows xl-([{''"tomorrows l/-tomorrows l$-tomorrows'
  - 'xl-tms xl-"<.<{''0tms l/-tms l$-tms'

- - 'xl(tomorrows xl[tomorrows xl{tomorrows xl''tomorrows xl"tomorrows xl-=([{''"tomorrows'
  - 'xl"<tms xl.<tms xl{tms xl''tms xl0tms xl-"7"<.<{''0tms'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tomorrows) tomorrows] tomorrows} tomorrows'' tomorrows" tomorrows- tomorrows, tomorrows. tomorrows; tomorrows: tomorrows? tomorrows!'
  - 'tms"> tms.> tms_> tms,0 tms0 tms- tms1 tms4 tms; tms03 tms8 tms!'

- - 'tomorrows@ tomorrows# tomorrows$ tomorrows% tomorrows^ tomorrows& tomorrows* tomorrows( tomorrows_ tomorrows= tomorrows+ tomorrows[ tomorrows{ tomorrows\\ tomorrows| tomorrows< tomorrows> tomorrows` tomorrows~ tomorrows/'
  - 'tms`a tms_? tms`s tms.0 tms`5 tms`& tms"9 tms"< tms.- tms"7 tms"6 tms.< tms_< tms_* tms_| tms`< tms`> tms."9 tms`9 tms/'
  - xfail: contraction followed by special characters is ignored

- - 'tms) tms] tms} tms'' tms" tms- tms, tms. tms; tms: tms? tms! tms@ tms# tms$ tms% tms^ tms& tms* tms( tms_ tms= tms+ tms[ tms{ tms\\ tms| tms< tms> tms` tms~ tms/'
  - ';tms"> ;tms.> ;tms_> ;tms,0 ;tms0 ;tms- ;tms1 ;tms4 ;tms; ;tms03 ;tms8 ;tms! ;tms`a ;tms_? ;tms`s ;tms.0 ;tms`5 ;tms`& ;tms"9 ;tms"< ;tms.- ;tms"7 ;tms"6 ;tms.< ;tms_< ;tms_* ;tms_| ;tms`< ;tms`> ;tms."9 ;tms`9 ;tms/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tomorrows-xl tomorrows-([{''"xl tomorrows-/xl tomorrows-$xl'
  - 'tms-xl tms-"<.<{''0xl tms-_/xl tms-`sxl'

- - 'tomorrows(xl tomorrows[xl tomorrows{xl tomorrows''xl tomorrows"xl tomorrows=([{''"-xl tomorrows([{''"-xl tomorrows/-xl tomorrows$-xl'
  - 'tms"<xl tms.<xl tms{xl tms''xl tms0xl tms"7"<.<{''0-xl tms"<.<{''0-xl tms/-xl tms`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tonight [tonight {tonight ''tonight "tonight -tonight'
  - '"<tn .<tn _<tn ,8tn 8tn -tn'

- - '!tonight @tonight #tonight $tonight %tonight ^tonight &tonight *tonight )tonight _tonight =tonight +tonight ]tonight }tonight \\tonight |tonight .tonight ,tonight ;tonight :tonight ?tonight <tonight >tonight `tonight ~tonight /tonight'
  - '!tn `atn _?tn `stn .0tn `5tn `&tn "9tn ">tn .-tn "7tn "6tn .>tn _>tn _*tn _|tn 4tn 1tn ;tn0 3tn ;8tn `<tn `>tn .*tn `9tn _/tn'
  - xfail: contraction following special characters is ignored

- - '(tn [tn {tn ''tn "tn -tn'
  - '"<;tn .<;tn _<;tn ,8;tn 8;tn -;tn'

- - '!tn @tn #tn $tn %tn ^tn &tn *tn )tn _tn =tn +tn ]tn }tn \\tn |tn .tn ,tn ;tn :tn ?tn <tn >tn `tn ~tn /tn'
  - '!;tn `a;tn _?;tn `s;tn .0;tn `5;tn `&;tn "9;tn ">;tn .-;tn "7;tn "6;tn .>;tn _>;tn _*;tn _|;tn 4;tn 1;tn ;2tn0 3;tn ;8;tn `<;tn `>;tn .*;tn `9;tn _/;tn'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tonight xl-([{''"tonight l/-tonight l$-tonight'
  - 'xl-tn xl-"<.<{''0tn l/-tn l$-tn'

- - 'xl(tonight xl[tonight xl{tonight xl''tonight xl"tonight xl-=([{''"tonight'
  - 'xl"<tn xl.<tn xl{tn xl''tn xl0tn xl-"7"<.<{''0tn'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tonight) tonight] tonight} tonight'' tonight" tonight- tonight, tonight. tonight; tonight: tonight? tonight!'
  - 'tn"> tn.> tn_> tn,0 tn0 tn- tn1 tn4 tn; tn03 tn8 tn!'

- - 'tonight@ tonight# tonight$ tonight% tonight^ tonight& tonight* tonight( tonight_ tonight= tonight+ tonight[ tonight{ tonight\\ tonight| tonight< tonight> tonight` tonight~ tonight/'
  - 'tn`a tn_? tn`s tn.0 tn`5 tn`& tn"9 tn"< tn.- tn"7 tn"6 tn.< tn_< tn_* tn_| tn`< tn`> tn."9 tn`9 tn/'
  - xfail: contraction followed by special characters is ignored

- - 'tn) tn] tn} tn'' tn" tn- tn, tn. tn; tn: tn? tn!'
  - ';tn"> ;tn.> ;tn_> ;tn,0 ;tn0 ;tn- ;tn1 ;tn4 ;tn; ;tn03 ;tn8 ;tn!'

- - 'tn@ tn# tn$ tn% tn^ tn& tn* tn( tn_ tn= tn+ tn[ tn{ tn\\ tn| tn< tn> tn` tn~ tn/'
  - ';tn`a ;tn_? ;tn`s ;tn.0 ;tn`5 ;tn`& ;tn"9 ;tn"< ;tn.- ;tn"7 ;tn"6 ;tn.< ;tn_< ;tn_* ;tn_| ;tn`< ;tn`> ;tn."9 ;tn`9 ;tn/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tonight-xl tonight-([{''"xl tonight-/xl tonight-$xl'
  - 'tn-xl tn-"<.<{''0xl tn-_/xl tn-`sxl'

- - 'tonight(xl tonight[xl tonight{xl tonight''xl tonight"xl tonight=([{''"-xl tonight([{''"-xl tonight/-xl tonight$-xl'
  - 'tn"<xl tn.<xl tn{xl tn''xl tn0xl tn"7"<.<{''0-xl tn"<.<{''0-xl tn/-xl tn`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(tonights [tonights {tonights ''tonights "tonights -tonights'
  - '"<tns .<tns _<tns ,8tns 8tns -tns'

- - '!tonights @tonights #tonights $tonights %tonights ^tonights &tonights *tonights )tonights _tonights =tonights +tonights ]tonights }tonights \\tonights |tonights .tonights ,tonights ;tonights :tonights ?tonights <tonights >tonights `tomorro'
  - '!tns `atns _?tns `stns .0tns `5tns `&tns "9tns ">tns .-tns "7tns "6tns .>tns _>tns _*tns _|tns 4tns 1tns ;tns0 3tns ;8tns `<tns `>tns ;8tns .*tns `9tns _/tns'
  - xfail: contraction following special characters is ignored

- - 'tns (tns [tns {tns ''tns "tns -tns !tns @tns #tns $tns %tns ^tns &tns *tns )tns _tns =tns +tns ]tns }tns \\tns |tns .tns ,tns ;tns :tns ?tns <tns >tns ?tns `tns ~tns /tns'
  - ';tns "<;tns .<;tns _<;tns ,8;tns 8;tns -;tns !;tns `a;tns _?;tns `s;tns .0;tns `5;tns `&;tns "9;tns ">;tns .-;tns "7;tns "6;tns .>;tns _>;tns _*;tns _|;tns 4;tns 1;tns ;2tns0 3;tns ;8;tns `<;tns `>;tns .*;tns `9;tns _/;tns'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-tonights xl-([{''"tonights l/-tonights l$-tonights'
  - 'xl-tns xl-"<.<{''0tns l/-tns l$-tns'

- - 'xl(tonights xl[tonights xl{tonights xl''tonights xl"tonights xl-=([{''"tonights'
  - 'xl"<tns xl.<tns xl{tns xl''tns xl0tns xl-"7"<.<{''0tns'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'tonights) tonights] tonights} tonights'' tonights" tonights- tonights, tonights. tonights; tonights: tonights? tonights!'
  - 'tns"> tns.> tns_> tns,0 tns0 tns- tns1 tns4 tns; tns03 tns8 tns!'

- - 'tonights@ tonights# tonights$ tonights% tonights^ tonights& tonights* tonights( tonights_ tonights= tonights+ tonights[ tonights{ tonights\\ tonights| tonights< tonights> tonights` tonights~ tonights/'
  - 'tns`a tns_? tns`s tns.0 tns`5 tns`& tns"9 tns"< tns.- tns"7 tns"6 tns.< tns_< tns_* tns_| tns`< tns`> tns."9 tns`9 tns/'
  - xfail: contraction followed by special characters is ignored

- - 'tns) tns] tns} tns'' tns" tns- tns, tns. tns; tns: tns? tns! tns@ tns# tns$ tns% tns^ tns& tns* tns( tns_ tns= tns+ tns[ tns{ tns\\ tns| tns< tns> tns` tns~ tns/'
  - ';tns"> ;tns.> ;tns_> ;tns,0 ;tns0 ;tns- ;tns1 ;tns4 ;tns; ;tns03 ;tns8 ;tns! ;tns`a ;tns_? ;tns`s ;tns.0 ;tns`5 ;tns`& ;tns"9 ;tns"< ;tns.- ;tns"7 ;tns"6 ;tns.< ;tns_< ;tns_* ;tns_| ;tns`< ;tns`> ;tns."9 ;tns`9 ;tns/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'tonights-xl tonights-([{''"xl tonights-/xl tonights-$xl'
  - 'tns-xl tns-"<.<{''0xl tns-_/xl tns-`sxl'

- - 'tonights(xl tonights[xl tonights{xl tonights''xl tonights"xl tonights=([{''"-xl tonights([{''"-xl tonights/-xl tonights$-xl'
  - 'tns"<xl tns.<xl tns{xl tns''xl tns0xl tns"7"<.<{''0-xl tns"<.<{''0-xl tns/-xl tns`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(us [us {us ''us "us -us'
  - '"<u .<u _<u ,8u 8u -u'

- - '!us @us #us $us %us ^us &us *us )us _us =us +us ]us }us \\us |us .us ,us ;us :us ?us <us >us `us ~us /us'
  - '!u `au _?u `su .0u `5u `&u "9u ">u .-u "7u "6u .>u _>u _*u _|u 4u 1u ;u0 3u ;8u `<u `>u .*u `9u _/u'
  - xfail: contraction following special characters is ignored

- - '(u [u {u ''u "u -u'
  - '"<;u .<;u _<;u ,8;u 8;u -;u'

- - '!u @u #u $u %u ^u &u *u )u _u =u +u ]u }u \\u |u .u ,u ;u :u ?u <u >u `u ~u /u'
  - '!;u `a;u _?;u `s;u .0;u `5;u `&;u "9;u ">;u .-;u "7;u "6;u .>;u _>;u _*;u _|;u 4;u 1;u ;2u0 3;u ;8;u `<;u `>;u .*;u `9;u _/;u'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-us xl-([{''"us xl/-us xl$-us'
  - 'xl-u xl-"<.<{''0u xl_/-u xl`s-u'

- - 'xl(us xl[us xl{us xl''us xl"us xl-=([{''"us'
  - 'xl"<u xl.<u xl{u xl''u xl0u xl-"7"<.<{''0u'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'us) us] us} us'' us" us- us, us. us; us: us? us!'
  - 'u"> u.> u_> u,0 u0 u- u1 u4 u; u03 u8 u!'

- - 'us@ us# us$ us% us^ us& us* us( us_ us= us+ us[ us{ us\\ us| us< us> us` us~ us/'
  - 'u`a u_? u`s u.0 u`5 u`& u"9 u"< u.- u"7 u"6 u.< u_< u_* u_| u`< u`> u."9 u`9 u/'
  - xfail: contraction followed by special characters is ignored

- - 'u) u] u} u'' u" u- u, u. u; u: u? u!'
  - ';u"> ;u.> ;u_> ;u,0 ;u0 ;u- ;u1 ;u4 ;u; ;u03 ;u8 ;u!'

- - 'u@ u# u$ u% u^ u& u* u( u_ u= u+ u[ u{ u\\ u| u< u> u` u~ u/'
  - ';u`a ;u_? ;u`s ;u.0 ;u`5 ;u`& ;u"9 ;u"< ;u.- ;u"7 ;u"6 ;u.< ;u_< ;u_* ;u_| ;u`< ;u`> ;u."9 ;u`9 ;u/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'us-xl us-([{''"xl us-/xl us-$xl'
  - 'u-xl u-"<.<{''0xl u-_/xl u-`sxl'

- - 'us(xl us[xl us{xl us''xl us"xl us=([{''"-xl us([{''"-xl us/-xl us$-xl'
  - 'u"<xl u.<xl u{xl u''xl u0xl u"7"<.<{''0-xl u"<.<{''0-xl u/-xl u`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(very [very {very ''very "very -very'
  - '"<v .<v _<v ,8v 8v -v'

- - '!very @very #very $very %very ^very &very *very )very _very =very +very ]very }very \\very |very .very ,very ;very :very ?very <very >very `very ~very /very'
  - '!v `av _?v `sv .0v `5v `&v "9v ">v .-v "7v "6v .>v _>v _*v _|v 4v 1v ;v0 3v ;8v `<v `>v .*v `9v _/v'
  - xfail: contraction following special characters is ignored

- - '(v [v {v ''v "v -v'
  - '"<;v .<;v _<;v ,8;v 8;v -;v'

- - '!v @v #v $v %v ^v &v *v )v _v =v +v ]v }v \\v |v .v ,v ;v :v ?v <v >v `v ~v /v'
  - '!;v `a;v _?;v `s;v .0;v `5;v `&;v "9;v ">;v .-;v "7;v "6;v .>;v _>;v _*;v _|;v 4;v 1;v ;2v0 3;v ;8;v `<;v `>;v .*;v `9;v _/;v'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-very xl-([{''"very xl/-very xl$-very'
  - 'xl-v xl-"<.<{''0v xl_/-v xl`s-v'

- - 'xl(very xl[very xl{very xl''very xl"very xl-=([{''"very'
  - 'xl"<v xl.<v xl{v xl''v xl0v xl-"7"<.<{''0v'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'very) very] very} very'' very" very- very, very. very; very: very? very!'
  - 'v"> v.> v_> v,0 v0 v- v1 v4 v; v03 v8 v!'

- - 'very@ very# very$ very% very^ very& very* very( very_ very= very+ very[ very{ very\\ very| very< very> very` very~ very/'
  - 'v`a v_? v`s v.0 v`5 v`& v"9 v"< v.- v"7 v"6 v.< v_< v_* v_| v`< v`> v."9 v`9 v/'
  - xfail: contraction followed by special characters is ignored

- - 'v) v] v} v'' v" v- v, v. v; v: v? v!'
  - ';v"> ;v.> ;v_> ;v,0 ;v0 ;v- ;v1 ;v4 ;v; ;v03 ;v8 ;v!'

- - 'v@ v# v$ v% v^ v& v* v( v_ v= v+ v[ v{ v\\ v| v< v> v` v~ v/'
  - ';v`a ;v_? ;v`s ;v.0 ;v`5 ;v`& ;v"9 ;v"< ;v.- ;v"7 ;v"6 ;v.< ;v_< ;v_* ;v_| ;v`< ;v`> ;v."9 ;v`9 ;v/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'very-xl very-([{''"xl very-/xl very-$xl'
  - 'v-xl v-"<.<{''0xl v-_/xl v-`sxl'

- - 'very(xl very[xl very{xl very''xl very"xl very=([{''"-xl very([{''"-xl very/-xl very$-xl'
  - 'v"<xl v.<xl v{xl v''xl v0xl v"7"<.<{''0-xl v"<.<{''0-xl v/-xl v`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(was [was {was ''was "was -was !was .was ,was ;was :was ?was'
  - '"<0 .<0 _<0 ,8was 8was -was !was 4was 1was ;was0 3was ;8was'

- - '*was =was +was @was #was $was %was ^was &was )was _was ]was }was \\was |was <was >was `was ~was /was'
  - '"90 "70 "60 `a0 _?0 `s0 .00 `50 `&0 ">0 .-0 .>0 _>0 _*0 _|0 `<0 `>0 ;80 .*0 `90 _/0'
  - xfail: contraction following special characters is ignored

- - 'xl(was xl[was xl{was'
  - 'xl"<0 xl.<0 xl{0'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'was) was] was} was'' was" was- was, was. was? was!'
  - '0"> 0.> 0_> was,0 was0 was- was1 was4 was8 was!'

- - 'was; was: was@ was# was$ was% was^ was& was* was( was_ was= was+ was[ was{ was\\ was| was< was> was` was~ was/'
  - 'was; was03 0`a 0_? 0`s 0.0 0`5 0`& 0"9 0"< 0.- 0"7 0"6 0.< 0_< 0_* 0_| 0`< 0`> 0."9 0`9 0/'
  - xfail: contraction followed by special characters is ignored

- - 'was(xl was[was was{xl'
  - '0"<xl 0.<xl'
  - xfail: contraction followed by special characters following any letter is ignored

- - '(were [were {were ''were "were -were !were .were ,were ;were :were ?were'
  - '"<7 .<7 _<7 ,8w}e 8w}e -w}e !w}e 4w}e 1w}e ;w}e0 3w}e ;8w}e'

- - '*were =were +were @were #were $were %were ^were &were )were _were ]were }were \\were |were <were >were `were ~were /were'
  - '"97 "77 "67 `a7 _?7 `s7 .07 `57 `&7 ">7 .-7 .>7 _>7 _*7 _|7 `<7 `>7 ;87 .*7 `97 _/7'
  - xfail: contraction following special characters is ignored

- - 'xl(were xl[were xl{were'
  - 'xl"<7 xl.<7 xl{7'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'were) were] were} were'' were" were- were, were. were? were!'
  - '7"> 7.> 7_> w}e,0 w}e0 w}e- w}e1 w}e4 w}e8 w}e!'

- - 'were; were: were@ were# were$ were% were^ were& were* were( were_ were= were+ were[ were{ were\\ were| were< were> were` were~ were/'
  - 'w}e; w}e03 7`a 7_? 7`s 7.0 7`5 7`& 7"9 7"< 7.- 7"7 7"6 7.< 7_< 7_* 7_| 7`< 7`> 7."9 7`9 7/'
  - xfail: contraction followed by special characters is ignored

- - 'were(xl were[were were{xl'
  - '7"<xl 7.<xl'
  - xfail: contraction followed by special characters following any letter is ignored

- - '(which [which {which ''which "which -which'
  - '"<: .<: _<: ,8: 8: -:'

- - '!which @which #which $which %which ^which &which *which )which _which =which +which ]which }which \\which |which .which ,which ;which ?which :which <which >which `which ~which /which'
  - '!: `a: _?: `s: .0: `5: `&: *: ">: .-: "7: "6: .>: _>: _*: _|: 4: 1: ;: ;8: 83: `<: `>: .*: `9: _/:'
  - xfail: contraction following special characters is ignored

- - '(wh [wh {wh ''wh "wh -wh !wh @wh #wh $wh :wh ^wh &wh *wh )wh _wh =wh +wh ]wh }wh \\wh |wh .wh ,wh ;wh :wh :wh <wh >wh `wh ~wh :wh'
  - '"<wh .<wh _<wh ,8wh 8wh -wh !wh `awh _?wh `swh :wh `5wh `&wh "9wh ">wh .-wh "7wh "6wh .>wh _>wh _*wh _|wh 4wh 1wh ;wh :wh :wh `<wh `>wh .*wh `9wh :wh'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-which xl-([{''"which l:-which l$-which'
  - 'xl-: xl-"<.<{''0: l:-: l$-:'

- - 'xl(which xl[which xl{which xl''which xl"which xl-=([{''"which'
  - 'xl"<: xl.<: xl{: xl'': xl0: xl-"7"<.<{''0:'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'which) which] which} which'' which" which- which, which. which; which? which: which!'
  - ':"> :.> :_> :,0 :0 :- :1 :4 :; :8 83: :!'

- - 'which@ which# which$ which% which^ which& which* which( which_ which= which+ which[ which{ which\\ which| which< which> which` which~ which/'
  - ':`a :_? :`s :.0 :`5 :`& :"9 :"< :.- :"7 :"6 :.< :_< :_* :_| :`< :`> :."9 :`9 :/'
  - xfail: contraction followed by special characters is ignored

- - 'wh) wh] wh} wh'' wh" wh- wh, wh. wh; wh: wh: wh! wh@ wh# wh$ wh% wh^ wh& wh* wh( wh_ wh= wh+ wh[ wh{ wh\\ wh| wh< wh> wh` wh~ wh/'
  - 'wh"> wh.> wh_> wh,0 wh0 wh- wh1 wh4 wh; wh: wh: wh! wh`a wh_? wh`s wh.0 wh`5 wh`& wh"9 wh"< wh.- wh"7 wh"6 wh.< wh_< wh_* wh_| wh`< wh`> wh."9 wh`9 wh/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'which-xl which-([{''"xl which-:l which-$xl'
  - ':-xl :-"<.<{''0xl :-:l :-`sxl'

- - 'which(xl which[xl which{xl which''xl which"xl which=([{''"-xl which([{''"-xl which/-xl which$-xl'
  - ':"<xl :.<xl :{xl :''xl :0xl :"7"<.<{''0-xl :"<.<{''0-xl :/-xl :`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(will [will {will ''will "will -will'
  - '"<w .<w _<w ,8w 8w -w'

- - '!will @will #will $will %will ^will &will *will )will _will =will +will ]will }will \\will |will .will ,will ;will :will ?will <will >will `will ~will /will'
  - '!w `aw _?w `sw .0w `5w `&w "9w ">w .-w "7w "6w .>w _>w _*w _|w 4w 1w ;w0 3w ;8w `<w `>w .*w `9w _/w'
  - xfail: contraction following special characters is ignored

- - '(w [w {w ''w "w -w'
  - '"<;w .<;w _<;w ,8;w 8;w -;w'

- - '!w @w #w $w %w ^w &w *w )w _w =w +w ]w }w \\w |w .w ,w ;w :w ?w <w >w `w ~w /w'
  - '!;w `a;w _?;w `s;w .0;w `5;w `&;w "9;w ">;w .-;w "7;w "6;w .>;w _>;w _*;w _|;w 4;w 1;w ;2w0 3;w ;8;w `<;w `>;w .*;w `9;w _/;w'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-will xl-([{''"will xl/-will xl$-will'
  - 'xl-w xl-"<.<{''0w xl_/-w xl`s-w'

- - 'xl(will xl[will xl{will xl''will xl"will xl-=([{''"will'
  - 'xl"<w xl.<w xl{w xl''w xl0w xl-"7"<.<{''0w'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'will) will] will} will'' will" will- will, will. will; will: will? will!'
  - 'w"> w.> w_> w,0 w0 w- w1 w4 w; w03 w8 w!'

- - 'will@ will# will$ will% will^ will& will* will( will_ will= will+ will[ will{ will\\ will| will< will> will` will~ will/'
  - 'w`a w_? w`s w.0 w`5 w`& w"9 w"< w.- w"7 w"6 w.< w_< w_* w_| w`< w`> w."9 w`9 w/'
  - xfail: contraction followed by special characters is ignored

- - 'w) w] w} w'' w" w- w, w. w; w: w? w!'
  - ';w"> ;w.> ;w_> ;w,0 ;w0 ;w- ;w1 ;w4 ;w; ;w03 ;w8 ;w!'

- - 'w@ w# w$ w% w^ w& w* w( w_ w= w+ w[ w{ w\\ w| w< w> w` w~ w/'
  - ';w`a ;w_? ;w`s ;w.0 ;w`5 ;w`& ;w"9 ;w"< ;w.- ;w"7 ;w"6 ;w.< ;w_< ;w_* ;w_| ;w`< ;w`> ;w."9 ;w`9 ;w/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'will-xl will-([{''"xl will-/xl will-$xl'
  - 'w-xl w-"<.<{''0xl w-_/xl w-`sxl'

- - 'will(xl will[xl will{xl will''xl will"xl will=([{''"-xl will([{''"-xl will/-xl will$-xl'
  - 'w"<xl w.<xl w{xl w''xl w0xl w"7"<.<{''0-xl w"<.<{''0-xl w/-xl w`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(would [would {would ''would "would -would'
  - '"<wd .<wd _<wd ,8wd 8wd -wd'

- - '!would @would #would $would %would ^would &would *would )would _would =would +would ]would }would \\would |would .would ,would ;would :would ?would <would >would `would ~would /would'
  - '!wd `awd _?wd `swd .0wd `5wd `&wd "9wd ">wd .-wd "7wd "6wd .>wd _>wd _*wd _|wd 4wd 1wd ;wd0 3wd ;8wd `<wd `>wd ;8wd .*wd `9wd _/wd'
  - xfail: contraction following special characters is ignored

- - '(wd [wd {wd ''wd "wd -wd'
  - '"<;wd .<;wd _<;wd ,8;wd 8;wd -;wd'

- - '!wd @wd #wd $wd %wd ^wd &wd *wd )wd _wd =wd +wd ]wd }wd \\wd |wd .wd ,wd ;wd :wd ?wd <wd >wd ?wd `wd ~wd /wd'
  - '!;wd `a;wd _?;wd `s;wd .0;wd `5;wd `&;wd "9;wd ">;wd .-;wd "7;wd "6;wd .>;wd _>;wd _*;wd _|;wd 4;wd 1;wd ;2wd0 3;wd ;8;wd `<;wd `>;wd .*;wd `9;wd _/;wd'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-would xl-([{''"would l/-would l$-would'
  - 'xl-wd xl-"<.<{''0wd l/-wd l$-wd'

- - 'xl(would xl[would xl{would xl''would xl"would xl-=([{''"would'
  - 'xl"<wd xl.<wd xl{wd xl''wd xl0wd xl-"7"<.<{''0wd'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'would) would] would} would'' would" would- would, would. would; would: would? would!'
  - 'wd"> wd.> wd_> wd,0 wd0 wd- wd1 wd4 wd; wd03 wd8 wd!'

- - 'would@ would# would$ would% would^ would& would* would( would_ would= would+ would[ would{ would\\ would| would< would> would` would~ would/'
  - 'wd`a wd_? wd`s wd.0 wd`5 wd`& wd"9 wd"< wd.- wd"7 wd"6 wd.< wd_< wd_* wd_| wd`< wd`> wd."9 wd`9 wd/'
  - xfail: contraction followed by special characters is ignored

- - 'wd) wd] wd} wd'' wd" wd- wd, wd. wd; wd: wd? wd!'
  - ';wd"> ;wd.> ;wd_> ;wd,0 ;wd0 ;wd- ;wd1 ;wd4 ;wd; ;wd03 ;wd8 ;wd!'

- - 'wd@ wd# wd$ wd% wd^ wd& wd* wd( wd_ wd= wd+ wd[ wd{ wd\\ wd| wd< wd> wd` wd~ wd/'
  - ';wd`a ;wd_? ;wd`s ;wd.0 ;wd`5 ;wd`& ;wd"9 ;wd"< ;wd.- ;wd"7 ;wd"6 ;wd.< ;wd_< ;wd_* ;wd_| ;wd`< ;wd`> ;wd."9 ;wd`9 ;wd/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'would-xl would-([{''"xl would-/xl would-$xl'
  - 'wd-xl wd-"<.<{''0xl wd-_/xl wd-`sxl'

- - 'would(xl would[xl would{xl would''xl would"xl would=([{''"-xl would([{''"-xl would/-xl would$-xl'
  - 'wd"<xl wd.<xl wd{xl wd''xl wd0xl wd"7"<.<{''0-xl wd"<.<{''0-xl wd/-xl wd`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(woulds [woulds {woulds ''woulds "woulds -woulds'
  - '"<wds .<wds _<wds ,8wds 8wds -wds'

- - '!woulds @woulds #woulds $woulds %woulds ^woulds &woulds *woulds )woulds _woulds =woulds +woulds ]woulds }woulds \\woulds |woulds .woulds ,woulds ;woulds :woulds ?woulds <woulds >woulds `woulds ~woulds /woulds'
  - '!wds `awds _?wds `swds .0wds `5wds `&wds "9wds ">wds .-wds "7wds "6wds .>wds _>wds _*wds _|wds 4wds 1wds ;wds0 3wds ;8wds `<wds `>wds ;8wds .*wds `9wds _/wds'
  - xfail: contraction following special characters is ignored

- - 'wds  (wds [wds {wds ''wds "wds -wds !wds @wds #wds $wds %wds ^wds &wds *wds )wds _wds =wds +wds ]wds }wds \\wds |wds .wds ,wds ;wds :wds ?wds <wds >wds ?wds `wds ~wds /wds'
  - ';wds  "<;wds .<;wds _<;wds ,8;wds 8;wds -;wds !;wds `a;wds _?;wds `s;wds .0;wds `5;wds `&;wds "9;wds ">;wds .-;wds "7;wds "6;wds .>;wds _>;wds _*;wds _|;wds 4;wds 1;wds ;2wds0 3;wds ;8;wds `<;wds `>;wds .*;wds `9;wds _/;wds'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-woulds xl-([{''"woulds l/-woulds l$-woulds'
  - 'xl-wds xl-"<.<{''0wds l/-wds l$-wds'

- - 'xl(woulds xl[woulds xl{woulds xl''woulds xl"woulds xl-=([{''"woulds'
  - 'xl"<wds xl.<wds xl{wds xl''wds xl0wds xl-"7"<.<{''0wds'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'woulds) woulds] woulds} woulds'' woulds" woulds- woulds, woulds. woulds; woulds: woulds? woulds!'
  - 'wds"> wds.> wds_> wds,0 wds0 wds- wds1 wds4 wds; wds03 wds8 wds!'

- - 'woulds@ woulds# woulds$ woulds% woulds^ woulds& woulds* woulds( woulds_ woulds= woulds+ woulds[ woulds{ woulds\\ woulds| woulds< woulds> woulds` woulds~ woulds/'
  - 'wds`a wds_? wds`s wds.0 wds`5 wds`& wds"9 wds"< wds.- wds"7 wds"6 wds.< wds_< wds_* wds_| wds`< wds`> wds."9 wds`9 wds/'
  - xfail: contraction followed by special characters is ignored

- - 'wds) wds] wds} wds'' wds" wds- wds, wds. wds; wds: wds? wds! wds@ wds# wds$ wds% wds^ wds& wds* wds( wds_ wds= wds+ wds[ wds{ wds\\ wds| wds< wds> wds` wds~ wds/'
  - ';wds"> ;wds.> ;wds_> ;wds,0 ;wds0 ;wds- ;wds1 ;wds4 ;wds; ;wds03 ;wds8 ;wds! ;wds`a ;wds_? ;wds`s ;wds.0 ;wds`5 ;wds`& ;wds"9 ;wds"< ;wds.- ;wds"7 ;wds"6 ;wds.< ;wds_< ;wds_* ;wds_| ;wds`< ;wds`> ;wds."9 ;wds`9 ;wds/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'woulds-xl woulds-([{''"xl woulds-/xl woulds-$xl'
  - 'wds-xl wds-"<.<{''0xl wds-_/xl wds-`sxl'

- - 'woulds(xl woulds[xl woulds{xl woulds''xl woulds"xl woulds=([{''"-xl woulds([{''"-xl woulds/-xl woulds$-xl'
  - 'wds"<xl wds.<xl wds{xl wds''xl wds0xl wds"7"<.<{''0-xl wds"<.<{''0-xl wds/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(woulda [woulda {woulda ''woulda "woulda -woulda'
  - '"<wda .<wda _<wda ,8wda 8wda -wda'

- - '!woulda @woulda #woulda $woulda %woulda ^woulda &woulda *woulda )woulda _woulda =woulda +woulda ]woulda }woulda \\woulda |woulda .woulda ,woulda ;woulda :woulda ?woulda <woulda >woulda `woulda ~woulda /woulda'
  - '!wda `awda _?wda `swda .0wda `5wda `&wda "9wda ">wda .-wda "7wda "6wda .>wda _>wda _*wda _|wda 4wda 1wda ;wda0 3wda ;8wda `<wda `>wda ;8wda .*wda `9wda _/wda'
  - xfail: contraction following special characters is ignored

- - '(wda [wda {wda ''wda "wda -wda'
  - '"<;wda .<;wda _<;wda ,8;wda 8;wda -;wda'

- - '!wda @wda #wda $wda %wda ^wda &wda *wda )wda _wda =wda +wda ]wda }wda \\wda |wda .wda ,wda ;wda :wda ?wda <wda >wda ?wda `wda ~wda /wda'
  - '!;wda `a;wda _?;wda `s;wda .0;wda `5;wda `&;wda "9;wda ">;wda .-;wda "7;wda "6;wda .>;wda _>;wda _*;wda _|;wda 4;wda 1;wda ;2wda0 3;wda ;8;wda `<;wda `>;wda .*;wda `9;wda _/;wda'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-woulda xl-([{''"woulda l/-woulda l$-woulda'
  - 'xl-wda xl-"<.<{''0wda l/-wda l$-wda'

- - 'xl(woulda xl[woulda xl{woulda xl''woulda xl"woulda xl-=([{''"woulda'
  - 'xl"<wda xl.<wda xl{wda xl''wda xl0wda xl-"7"<.<{''0wda'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'woulda) woulda] woulda} woulda'' woulda" woulda- woulda, woulda. woulda; woulda: woulda? woulda!'
  - 'wda"> wda.> wda_> wda,0 wda0 wda- wda1 wda4 wda; wda03 wda8 wda!'

- - 'woulda@ woulda# woulda$ woulda% woulda^ woulda& woulda* woulda( woulda_ woulda= woulda+ woulda[ woulda{ woulda\\ woulda| woulda< woulda> woulda` woulda~ woulda/'
  - 'wda`a wda_? wda`s wda.0 wda`5 wda`& wda"9 wda"< wda.- wda"7 wda"6 wda.< wda_< wda_* wda_| wda`< wda`> wda."9 wda`9 wda/'
  - xfail: contraction followed by special characters is ignored

- - 'wda) wda] wda} wda'' wda" wda- wda, wda. wda; wda: wda? wda!'
  - ';wda"> ;wda.> ;wda_> ;wda,0 ;wda0 ;wda- ;wda1 ;wda4 ;wda; ;wda03 ;wda8 ;wda!'

- - 'wda@ wda# wda$ wda% wda^ wda& wda* wda( wda_ wda= wda+ wda[ wda{ wda\\ wda| wda< wda> wda` wda~ wda/'
  - ';wda`a ;wda_? ;wda`s ;wda.0 ;wda`5 ;wda`& ;wda"9 ;wda"< ;wda.- ;wda"7 ;wda"6 ;wda.< ;wda_< ;wda_* ;wda_| ;wda`< ;wda`> ;wda."9 ;wda`9 ;wda/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'woulda-xl woulda-([{''"xl woulda-/xl woulda-$xl'
  - 'wda-xl wda-"<.<{''0xl wda-_/xl wda-`sxl'

- - 'woulda(xl woulda[xl woulda{xl woulda''xl woulda"xl woulda=([{''"-xl woulda([{''"-xl woulda/-xl woulda$-xl'
  - 'wda"<xl wda.<xl wda{xl wda''xl wda0xl wda"7"<.<{''0-xl wda"<.<{''0-xl wda/-xl abs-`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(you [you {you ''you "you -you'
  - '"<y .<y _<y ,8y 8y -y'

- - '!you @you #you $you %you ^you &you *you )you _you =you +you ]you }you \\you |you .you ,you ;you :you ?you <you >you `you ~you /you'
  - '!y `ay _?y `sy .0y `5y `&y "9y ">y .-y "7y "6y .>y _>y _*y |y 4y 1y ;y0 3y ;8y `<y `>y .*y `9y _/y'
  - xfail: contraction following special characters is ignored

- - '(y [y {y ''y "y -y'
  - '"<;y .<;y _<;y ,8;y 8;y -;y'

- - '!y @y #y $y %y ^y &y *y )y _y =y +y ]y }y \\y |y .y ,y ;y :y ?y <y >y `y ~y /y'
  - '!;y `a;y _?;y `s;y .0;y `5;y `&;y "9;y ">;y .-;y "7;y "6;y .>;y _>;y _*;y _|;y 4;y 1;y ;2y0 3;y ;8;y `<;y `>;y .*;y `9;y _/;y'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'xl-you xl-([{''"you xl/-you xl$-you'
  - 'xl-y xl-"<.<{''0y xl_/-y xl`s-y'

- - 'xl(you xl[you xl{you xl''you xl"you xl-=([{''"you'
  - 'xl"<y xl.<y xl{y xl''y xl0y xl-"7"<.<{''0y'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'you) you] you} you'' you" you- you, you. you; you: you? you!'
  - 'y"> y.> y_> y,0 y0 y- y1 y4 y; y03 y8 y!'

- - 'you@ you# you$ you% you^ you& you* you( you_ you= you+ you[ you{ you\\ you| you< you> you` you~ you/'
  - 'y`a y_? y`s y.0 y`5 y`& y"9 y"< y.- y"7 y"6 y.< y_< y_* y_| y`< y`> y."9 y`9 y/'
  - xfail: contraction followed by special characters is ignored

- - 'y) y] y} y'' y" y- y, y. y; y: y? y!'
  - ';y"> ;y.> ;y_> ;y,0 ;y0 ;y- ;y1 ;y4 ;y; ;y03 ;y8 ;y!'

- - 'y@ y# y$ y% y^ y& y* y( y_ y= y+ y[ y{ y\\ y| y< y> y` y~ y/'
  - ';y`a ;y_? ;y`s ;y.0 ;y`5 ;y`& ;y"9 ;y"< ;y.- ;y"7 ;y"6 ;y.< ;y_< ;y_* ;y_| ;y`< ;y`> ;y."9 ;y`9 ;y/'
  - xfail: non-contraction following special characters has a missing grade 1 indicator

- - 'you-xl you-([{''"xl you-/xl you-$xl'
  - 'y-xl y-"<.<{''0xl y-_/xl y-`sxl'

- - 'you(xl you[xl you{xl you''xl you"xl you=([{''"-xl you([{''"-xl you/-xl you$-xl'
  - 'y"<xl y.<xl y{xl y''xl y0xl y"7"<.<{''0-xl y"<.<{''0-xl y/-xl y`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(your [your {your ''your "your -your'
  - '"<yr .<yr _<yr ,8yr 8yr -yr'

- - '!your @your #your $your %your ^your &your *your )your _your =your +your ]your }your \\your |your .your ,your ;your :your ?your <your >your `your ~your /your'
  - '!yr `ayr _?yr `syr .0yr `5yr `&yr "9yr ">yr .-yr "7yr "6yr .>yr _>yr _*yr _|yr 4yr 1yr ;yr0 3yr ;8yr `<yr `>yr .*yr `9yr _/yr'
  - xfail: contraction following special characters is ignored

- - '(yr [yr {yr ''yr "yr -yr'
  - '"<;yr .<;yr _<;yr ,8;yr 8;yr -;yr'

- - '!yr @yr #yr $yr %yr ^yr &yr *yr )yr _yr =yr +yr ]yr }yr \\yr |yr .yr ,yr ;yr :yr ?yr <yr >yr `yr ~yr /yr'
  - '!;yr `a;yr _?;yr `s;yr .0;yr `5;yr `&;yr "9;yr ">;yr .-;yr "7;yr "6;yr .>;yr _>;yr _*;yr _|;yr 4;yr 1;yr ;2yr0 3;yr ;8;yr `<;yr `>;yr .*;yr `9;yr _/;yr'
  - xfail: non-contraction following special characters hyour a missing grade 1 indicator

- - 'xl-your xl-([{''"your l/-your l$-your'
  - 'xl-yr xl-"<.<{''0yr l/-yr l$-yr'

- - 'xl(your xl[your xl{your xl''your xl"your xl-=([{''"your'
  - 'xl"<yr xl.<yr xl{yr xl''yr xl0yr xl-"7"<.<{''0yr'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'your) your] your} your'' your" your- your, your. your; your: your? your!'
  - 'yr"> yr.> yr_> yr,0 yr0 yr- yr1 yr4 yr; yr03 yr8 yr!'

- - 'your@ your# your$ your% your^ your& your* your( your_ your= your+ your[ your{ your\\ your| your< your> your` your~ your/'
  - 'yr`a yr_? yr`s yr.0 yr`5 yr`& yr"9 yr"< yr.- yr"7 yr"6 yr.< yr_< yr_* yr_| yr`< yr`> yr."9 yr`9 yr/'
  - xfail: contraction followed by special characters is ignored

- - 'yr) yr] yr} yr'' yr" yr- yr, yr. yr; yr: yr? yr!'
  - ';yr"> ;yr.> ;yr_> ;yr,0 ;yr0 ;yr- ;yr1 ;yr4 ;yr; ;yr03 ;yr8 ;yr!'

- - 'yr@ yr# yr$ yr% yr^ yr& yr* yr( yr_ yr= yr+ yr[ yr{ yr\\ yr| yr< yr> yr` yr~ yr/'
  - ';yr`a ;yr_? ;yr`s ;yr.0 ;yr`5 ;yr`& ;yr"9 ;yr"< ;yr.- ;yr"7 ;yr"6 ;yr.< ;yr_< ;yr_* ;yr_| ;yr`< ;yr`> ;yr."9 ;yr`9 ;yr/'
  - xfail: non-contraction following special characters hyour a missing grade 1 indicator

- - 'your-xl your-([{''"xl your-/xl your-$xl'
  - 'yr-xl yr-"<.<{''0xl yr-_/xl yr-`sxl'

- - 'your(xl your[xl your{xl your''xl your"xl your=([{''"-xl your([{''"-xl your/-xl your$-xl'
  - 'yr"<xl yr.<xl yr{xl yr''xl yr0xl yr"7"<.<{''0-xl yr"<.<{''0-xl yr/-xl yr`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yours [yours {yours ''yours "yours -yours'
  - '"<yrs .<yrs _<yrs ,8yrs 8yrs -yrs'

- - '!yours @yours #yours $yours %yours ^yours &yours *yours )yours _yours =yours +yours ]yours }yours \\yours |yours .yours ,yours ;yours :yours ?yours <yours >yours `yours ~yours /yours'
  - '!yrs `ayrs _?yrs `syrs .0yrs `5yrs `&yrs "9yrs ">yrs .-yrs "7yrs "6yrs .>yrs _>yrs _*yrs _|yrs 4yrs 1yrs ;yrs0 3yrs ;8yrs `<yrs `>yrs .*yrs `9yrs _/yrs'
  - xfail: contraction following special characters is ignored

- - 'yrs (yrs [yrs {yrs ''yrs "yrs -yrs !yrs @yrs #yrs $yrs %yrs ^yrs &yrs *yrs )yrs _yrs =yrs +yrs ]yrs }yrs \\yrs |yrs .yrs ,yrs ;yrs :yrs ?yrs <yrs >yrs `yrs ~yrs /yrs'
  - ';yrs "<;yrs .<;yrs _<;yrs ,8;yrs 8;yrs -;yrs !;yrs `a;yrs _?;yrs `s;yrs .0;yrs `5;yrs `&;yrs "9;yrs ">;yrs .-;yrs "7;yrs "6;yrs .>;yrs _>;yrs _*;yrs _|;yrs 4;yrs 1;yrs ;2yrs0 3;yrs ;8;yrs `<;yrs `>;yrs .*;yrs `9;yrs _/;yrs'
  - xfail: non-contraction following special characters hyours a missing grade 1 indicator

- - 'xl-yours xl-([{''"yours l/-yours l$-yours'
  - 'xl-yrs xl-"<.<{''0yrs l/-yrs l$-yrs'

- - 'xl(yours xl[yours xl{yours xl''yours xl"yours xl-=([{''"yours'
  - 'xl"<yrs xl.<yrs xl{yrs xl''yrs xl0yrs xl-"7"<.<{''0yrs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yours) yours] yours} yours'' yours" yours- yours, yours. yours; yours: yours? yours!'
  - 'yrs"> yrs.> yrs_> yrs,0 yrs0 yrs- yrs1 yrs4 yrs; yrs03 yrs8 yrs!'

- - 'yours@ yours# yours$ yours% yours^ yours& yours* yours( yours_ yours= yours+ yours[ yours{ yours\\ yours| yours< yours> yours` yours~ yours/'
  - 'yrs`a yrs_? yrs`s yrs.0 yrs`5 yrs`& yrs"9 yrs"< yrs.- yrs"7 yrs"6 yrs.< yrs_< yrs_* yrs_| yrs`< yrs`> yrs."9 yrs`9 yrs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrs) yrs] yrs} yrs'' yrs" yrs- yrs, yrs. yrs; yrs: yrs? yrs! yrs@ yrs# yrs$ yrs% yrs^ yrs& yrs* yrs( yrs_ yrs= yrs+ yrs[ yrs{ yrs\\ yrs| yrs< yrs> yrs` yrs~ yrs/'
  - ';yrs"> ;yrs.> ;yrs_> ;yrs,0 ;yrs0 ;yrs- ;yrs1 ;yrs4 ;yrs; ;yrs03 ;yrs8 ;yrs! ;yrs`a ;yrs_? ;yrs`s ;yrs.0 ;yrs`5 ;yrs`& ;yrs"9 ;yrs"< ;yrs.- ;yrs"7 ;yrs"6 ;yrs.< ;yrs_< ;yrs_* ;yrs_| ;yrs`< ;yrs`> ;yrs."9 ;yrs`9 ;yrs/'
  - xfail: non-contraction following special characters hyours a missing grade 1 indicator

- - 'yours-xl yours-([{''"xl yours-/xl yours-$xl'
  - 'yrs-xl yrs-"<.<{''0xl yrs-_/xl yrs-`sxl'

- - 'yours(xl yours[xl yours{xl yours''xl yours"xl yours=([{''"-xl yours([{''"-xl yours/-xl yours$-xl'
  - 'yrs"<xl yrs.<xl yrs{xl yrs''xl yrs0xl yrs"7"<.<{''0-xl yrs"<.<{''0-xl yrs/-xl yrs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourself [yourself {yourself ''yourself "yourself -yourself'
  - '"<yrf .<yrf _<yrf ,8yrf 8yrf -yrf'

- - '!yourself @yourself #yourself $yourself %yourself ^yourself &yourself *yourself )yourself _yourself =yourself +yourself ]yourself }yourself \\yourself |yourself .yourself ,yourself ;yourself :yourself ?yourself <yourself >yourself `yourself ~yourself /yourself'
  - '!yrf `ayrf _?yrf `syrf .0yrf `5yrf `&yrf "9yrf ">yrf .-yrf "7yrf "6yrf .>yrf _>yrf _*yrf _|yrf 4yrf 1yrf ;yrf0 3yrf ;8yrf `<yrf `>yrf .*yrf `9yrf _/yrf'
  - xfail: contraction following special characters is ignored

- - '(yrf [yrf {yrf ''yrf "yrf -yrf'
  - '"<;yrf .<;yrf _<;yrf ,8;yrf 8;yrf -;yrf'

- - '!yrf @yrf #yrf $yrf %yrf ^yrf &yrf *yrf )yrf _yrf =yrf +yrf ]yrf }yrf \\yrf |yrf .yrf ,yrf ;yrf :yrf ?yrf <yrf >yrf `yrf ~yrf /yrf'
  - '!;yrf `a;yrf _?;yrf `s;yrf .0;yrf `5;yrf `&;yrf "9;yrf ">;yrf .-;yrf "7;yrf "6;yrf .>;yrf _>;yrf _*;yrf _|;yrf 4;yrf 1;yrf ;2yrf0 3;yrf ;8;yrf `<;yrf `>;yrf .*;yrf `9;yrf _/;yrf'
  - xfail: non-contraction following special characters hyourself a missing grade 1 indicator

- - 'xl-yourself xl-([{''"yourself l/-yourself l$-yourself'
  - 'xl-yrf xl-"<.<{''0yrf l/-yrf l$-yrf'

- - 'xl(yourself xl[yourself xl{yourself xl''yourself xl"yourself xl-=([{''"yourself'
  - 'xl"<yrf xl.<yrf xl{yrf xl''yrf xl0yrf xl-"7"<.<{''0yrf'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourself) yourself] yourself} yourself'' yourself" yourself- yourself, yourself. yourself; yourself: yourself? yourself!'
  - 'yrf"> yrf.> yrf_> yrf,0 yrf0 yrf- yrf1 yrf4 yrf; yrf03 yrf8 yrf!'

- - 'yourself@ yourself# yourself$ yourself% yourself^ yourself& yourself* yourself( yourself_ yourself= yourself+ yourself[ yourself{ yourself\\ yourself| yourself< yourself> yourself` yourself~ yourself/'
  - 'yrf`a yrf_? yrf`s yrf.0 yrf`5 yrf`& yrf"9 yrf"< yrf.- yrf"7 yrf"6 yrf.< yrf_< yrf_* yrf_| yrf`< yrf`> yrf."9 yrf`9 yrf/'
  - xfail: contraction followed by special characters is ignored

- - 'yrf) yrf] yrf} yrf'' yrf" yrf- yrf, yrf. yrf; yrf: yrf? yrf!'
  - ';yrf"> ;yrf.> ;yrf_> ;yrf,0 ;yrf0 ;yrf- ;yrf1 ;yrf4 ;yrf; ;yrf03 ;yrf8 ;yrf!'

- - 'yrf@ yrf# yrf$ yrf% yrf^ yrf& yrf* yrf( yrf_ yrf= yrf+ yrf[ yrf{ yrf\\ yrf| yrf< yrf> yrf` yrf~ yrf/'
  - ';yrf`a ;yrf_? ;yrf`s ;yrf.0 ;yrf`5 ;yrf`& ;yrf"9 ;yrf"< ;yrf.- ;yrf"7 ;yrf"6 ;yrf.< ;yrf_< ;yrf_* ;yrf_| ;yrf`< ;yrf`> ;yrf."9 ;yrf`9 ;yrf/'
  - xfail: non-contraction following special characters hyourself a missing grade 1 indicator

- - 'yourself-xl yourself-([{''"xl yourself-/xl yourself-$xl'
  - 'yrf-xl yrf-"<.<{''0xl yrf-_/xl yrf-`sxl'

- - 'yourself(xl yourself[xl yourself{xl yourself''xl yourself"xl yourself=([{''"-xl yourself([{''"-xl yourself/-xl yourself$-xl'
  - 'yrf"<xl yrf.<xl yrf{xl yrf''xl yrf0xl yrf"7"<.<{''0-xl yrf"<.<{''0-xl yrf/-xl yrf`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselfs [yourselfs {yourselfs ''yourselfs "yourselfs -yourselfs'
  - '"<yrfs .<yrfs _<yrfs ,8yrfs 8yrfs -yrfs'

- - '!yourselfs @yourselfs #yourselfs $yourselfs %yourselfs ^yourselfs &yourselfs *yourselfs )yourselfs _yourselfs =yourselfs +yourselfs ]yourselfs }yourselfs \\yourselfs |yourselfs .yourselfs ,yourselfs ;yourselfs :yourselfs ?yourselfs <yourselfs >yourselfs `yoursel'
  - '!yrfs `ayrfs _?yrfs `syrfs .0yrfs `5yrfs `&yrfs "9yrfs ">yrfs .-yrfs "7yrfs "6yrfs .>yrfs _>yrfs _*yrfs _|yrfs 4yrfs 1yrfs ;yrfs0 3yrfs ;8yrfs `<yrfs `>yrfs .*yrfs `9yrfs _/yrfs'
  - xfail: contraction following special characters is ignored

- - 'yrfs (yrfs [yrfs {yrfs ''yrfs "yrfs -yrfs !yrfs @yrfs #yrfs $yrfs %yrfs ^yrfs &yrfs *yrfs )yrfs _yrfs =yrfs +yrfs ]yrfs }yrfs \\yrfs |yrfs .yrfs ,yrfs ;yrfs :yrfs ?yrfs <yrfs >yrfs `yrfs ~yrfs /yrfs'
  - ';yrfs "<;yrfs .<;yrfs _<;yrfs ,8;yrfs 8;yrfs -;yrfs !;yrfs `a;yrfs _?;yrfs `s;yrfs .0;yrfs `5;yrfs `&;yrfs "9;yrfs ">;yrfs .-;yrfs "7;yrfs "6;yrfs .>;yrfs _>;yrfs _*;yrfs _|;yrfs 4;yrfs 1;yrfs ;2yrfs0 3;yrfs ;8;yrfs `<;yrfs `>;yrfs .*;yrfs `9;yrfs _/;yrfs'
  - xfail: non-contraction following special characters hyourselfs a missing grade 1 indicator

- - 'xl-yourselfs xl-([{''"yourselfs l/-yourselfs l$-yourselfs'
  - 'xl-yrfs xl-"<.<{''0yrfs l/-yrfs l$-yrfs'

- - 'xl(yourselfs xl[yourselfs xl{yourselfs xl''yourselfs xl"yourselfs xl-=([{''"yourselfs'
  - 'xl"<yrfs xl.<yrfs xl{yrfs xl''yrfs xl0yrfs xl-"7"<.<{''0yrfs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselfs) yourselfs] yourselfs} yourselfs'' yourselfs" yourselfs- yourselfs, yourselfs. yourselfs; yourselfs: yourselfs? yourselfs!'
  - 'yrfs"> yrfs.> yrfs_> yrfs,0 yrfs0 yrfs- yrfs1 yrfs4 yrfs; yrfs03 yrfs8 yrfs!'

- - 'yourselfs@ yourselfs# yourselfs$ yourselfs% yourselfs^ yourselfs& yourselfs* yourselfs( yourselfs_ yourselfs= yourselfs+ yourselfs[ yourselfs{ yourselfs\\ yourselfs| yourselfs< yourselfs> yourselfs` yourselfs~ yourselfs/'
  - 'yrfs`a yrfs_? yrfs`s yrfs.0 yrfs`5 yrfs`& yrfs"9 yrfs"< yrfs.- yrfs"7 yrfs"6 yrfs.< yrfs_< yrfs_* yrfs_| yrfs`< yrfs`> yrfs."9 yrfs`9 yrfs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrfs) yrfs] yrfs} yrfs'' yrfs" yrfs- yrfs, yrfs. yrfs; yrfs: yrfs? yrfs! yrfs@ yrfs# yrfs$ yrfs% yrfs^ yrfs& yrfs* yrfs( yrfs_ yrfs= yrfs+ yrfs[ yrfs{ yrfs\\ yrfs| yrfs< yrfs> yrfs` yrfs~ yrfs/'
  - ';yrfs"> ;yrfs.> ;yrfs_> ;yrfs,0 ;yrfs0 ;yrfs- ;yrfs1 ;yrfs4 ;yrfs; ;yrfs03 ;yrfs8 ;yrfs! ;yrfs`a ;yrfs_? ;yrfs`s ;yrfs.0 ;yrfs`5 ;yrfs`& ;yrfs"9 ;yrfs"< ;yrfs.- ;yrfs"7 ;yrfs"6 ;yrfs.< ;yrfs_< ;yrfs_* ;yrfs_| ;yrfs`< ;yrfs`> ;yrfs."9 ;yrfs`9 ;yrfs/'
  - xfail: non-contraction following special characters hyourselfs a missing grade 1 indicator

- - 'yourselfs-xl yourselfs-([{''"xl yourselfs-/xl yourselfs-$xl'
  - 'yrfs-xl yrfs-"<.<{''0xl yrfs-_/xl yrfs-`sxl'

- - 'yourselfs(xl yourselfs[xl yourselfs{xl yourselfs''xl yourselfs"xl yourselfs=([{''"-xl yourselfs([{''"-xl yourselfs/-xl yourselfs$-xl'
  - 'yrfs"<xl yrfs.<xl yrfs{xl yrfs''xl yrfs0xl yrfs"7"<.<{''0-xl yrfs"<.<{''0-xl yrfs/-xl yrfs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselves [yourselves {yourselves ''yourselves "yourselves -yourselves'
  - '"<yrvs .<yrvs _<yrvs ,8yrvs 8yrvs -yrvs'

- - '!yourselves @yourselves #yourselves $yourselves %yourselves ^yourselves &yourselves *yourselves )yourselves _yourselves =yourselves +yourselves ]yourselves }yourselves \\yourselves |yourselves .yourselves ,yourselves ;yourselves :yourselves ?yourselves <yourselv'
  - '!yrvs `ayrvs _?yrvs `syrvs .0yrvs `5yrvs `&yrvs "9yrvs ">yrvs .-yrvs "7yrvs "6yrvs .>yrvs _>yrvs _*yrvs _|yrvs 4yrvs 1yrvs ;yrvs0 3yrvs ;8yrvs `<yrvs `>yrvs .*yrvs `9yrvs _/yrvs'
  - xfail: contraction following special characters is ignored

- - '(yrvs [yrvs {yrvs ''yrvs "yrvs -yrvs'
  - '"<;yrvs .<;yrvs _<;yrvs ,8;yrvs 8;yrvs -;yrvs'

- - '!yrvs @yrvs #yrvs $yrvs %yrvs ^yrvs &yrvs *yrvs )yrvs _yrvs =yrvs +yrvs ]yrvs }yrvs \\yrvs |yrvs .yrvs ,yrvs ;yrvs :yrvs ?yrvs <yrvs >yrvs `yrvs ~yrvs /yrvs'
  - '!;yrvs `a;yrvs _?;yrvs `s;yrvs .0;yrvs `5;yrvs `&;yrvs "9;yrvs ">;yrvs .-;yrvs "7;yrvs "6;yrvs .>;yrvs _>;yrvs _*;yrvs _|;yrvs 4;yrvs 1;yrvs ;2yrvs0 3;yrvs ;8;yrvs `<;yrvs `>;yrvs .*;yrvs `9;yrvs _/;yrvs'
  - xfail: non-contraction following special characters hyourselves a missing grade 1 indicator

- - 'xl-yourselves xl-([{''"yourselves l/-yourselves l$-yourselves'
  - 'xl-yrvs xl-"<.<{''0yrvs l/-yrvs l$-yrvs'

- - 'xl(yourselves xl[yourselves xl{yourselves xl''yourselves xl"yourselves xl-=([{''"yourselves'
  - 'xl"<yrvs xl.<yrvs xl{yrvs xl''yrvs xl0yrvs xl-"7"<.<{''0yrvs'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselves) yourselves] yourselves} yourselves'' yourselves" yourselves- yourselves, yourselves. yourselves; yourselves: yourselves? yourselves!'
  - 'yrvs"> yrvs.> yrvs_> yrvs,0 yrvs0 yrvs- yrvs1 yrvs4 yrvs; yrvs03 yrvs8 yrvs!'

- - 'yourselves@ yourselves# yourselves$ yourselves% yourselves^ yourselves& yourselves* yourselves( yourselves_ yourselves= yourselves+ yourselves[ yourselves{ yourselves\\ yourselves| yourselves< yourselves> yourselves` yourselves~ yourselves/'
  - 'yrvs`a yrvs_? yrvs`s yrvs.0 yrvs`5 yrvs`& yrvs"9 yrvs"< yrvs.- yrvs"7 yrvs"6 yrvs.< yrvs_< yrvs_* yrvs_| yrvs`< yrvs`> yrvs."9 yrvs`9 yrvs/'
  - xfail: contraction followed by special characters is ignored

- - 'yrvs) yrvs] yrvs} yrvs'' yrvs" yrvs- yrvs, yrvs. yrvs; yrvs: yrvs? yrvs!'
  - ';yrvs"> ;yrvs.> ;yrvs_> ;yrvs,0 ;yrvs0 ;yrvs- ;yrvs1 ;yrvs4 ;yrvs; ;yrvs03 ;yrvs8 ;yrvs!'

- - 'yrvs@ yrvs# yrvs$ yrvs% yrvs^ yrvs& yrvs* yrvs( yrvs_ yrvs= yrvs+ yrvs[ yrvs{ yrvs\\ yrvs| yrvs< yrvs> yrvs` yrvs~ yrvs/'
  - ';yrvs`a ;yrvs_? ;yrvs`s ;yrvs.0 ;yrvs`5 ;yrvs`& ;yrvs"9 ;yrvs"< ;yrvs.- ;yrvs"7 ;yrvs"6 ;yrvs.< ;yrvs_< ;yrvs_* ;yrvs_| ;yrvs`< ;yrvs`> ;yrvs."9 ;yrvs`9 ;yrvs/'
  - xfail: non-contraction following special characters hyourselves a missing grade 1 indicator

- - 'yourselves-xl yourselves-([{''"xl yourselves-/xl yourselves-$xl'
  - 'yrvs-xl yrvs-"<.<{''0xl yrvs-_/xl yrvs-`sxl'

- - 'yourselves(xl yourselves[xl yourselves{xl yourselves''xl yourselves"xl yourselves=([{''"-xl yourselves([{''"-xl yourselves/-xl yourselves$-xl'
  - 'yrvs"<xl yrvs.<xl yrvs{xl yrvs''xl yrvs0xl yrvs"7"<.<{''0-xl yrvs"<.<{''0-xl yrvs/-xl yrvs`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored

- - '(yourselvess [yourselvess {yourselvess ''yourselvess "yourselvess -yourselvess'
  - '"<yrvss .<yrvss _<yrvss ,8yrvss 8yrvss -yrvss'

- - '!yourselvess @yourselvess #yourselvess $yourselvess %yourselvess ^yourselvess &yourselvess *yourselvess )yourselvess _yourselvess =yourselvess +yourselvess ]yourselvess }yourselvess \\yourselvess |yourselvess .yourselvess ,yourselvess ;yourselvess :yourselvess ?'
  - '!yrvss `ayrvss _?yrvss `syrvss .0yrvss `5yrvss `&yrvss "9yrvss ">yrvss .-yrvss "7yrvss "6yrvss .>yrvss _>yrvss _*yrvss _|yrvss 4yrvss 1yrvss ;yrvss0 3yrvss ;8yrvss `<yrvss `>yrvss .*yrvss `9yrvss _/yrvss'
  - xfail: contraction following special characters is ignored

- - 'yrvss (yrvss [yrvss {yrvss ''yrvss "yrvss -yrvss !yrvss @yrvss #yrvss $yrvss %yrvss ^yrvss &yrvss *yrvss )yrvss _yrvss =yrvss +yrvss ]yrvss }yrvss \\yrvss |yrvss .yrvss ,yrvss ;yrvss :yrvss ?yrvss <yrvss >yrvss `yrvss ~yrvss /yrvss'
  - ';yrvss "<;yrvss .<;yrvss _<;yrvss ,8;yrvss 8;yrvss -;yrvss !;yrvss `a;yrvss _?;yrvss `s;yrvss .0;yrvss `5;yrvss `&;yrvss "9;yrvss ">;yrvss .-;yrvss "7;yrvss "6;yrvss .>;yrvss _>;yrvss _*;yrvss _|;yrvss 4;yrvss 1;yrvss ;2yrvss0 3;yrvss ;8;yrvss `<;yrvss `>;yrvss .*;yrvss `9;yrvss _/;yrvs'
  - xfail: non-contraction following special characters hyourselvess a missing grade 1 indicator

- - 'xl-yourselvess xl-([{''"yourselvess l/-yourselvess l$-yourselvess'
  - 'xl-yrvss xl-"<.<{''0yrvss l/-yrvss l$-yrvss'

- - 'xl(yourselvess xl[yourselvess xl{yourselvess xl''yourselvess xl"yourselvess xl-=([{''"yourselvess'
  - 'xl"<yrvss xl.<yrvss xl{yrvss xl''yrvss xl0yrvss xl-"7"<.<{''0yrvss'
  - xfail: contraction following special characters and followed by any letter is ignored

- - 'yourselvess) yourselvess] yourselvess} yourselvess'' yourselvess" yourselvess- yourselvess, yourselvess. yourselvess; yourselvess: yourselvess? yourselvess!'
  - 'yrvss"> yrvss.> yrvss_> yrvss,0 yrvss0 yrvss- yrvss1 yrvss4 yrvss; yrvss03 yrvss8 yrvss!'

- - 'yourselvess@ yourselvess# yourselvess$ yourselvess% yourselvess^ yourselvess& yourselvess* yourselvess( yourselvess_ yourselvess= yourselvess+ yourselvess[ yourselvess{ yourselvess\\ yourselvess| yourselvess< yourselvess> yourselvess` yourselvess~ yourselvess/'
  - 'yrvss`a yrvss_? yrvss`s yrvss.0 yrvss`5 yrvss`& yrvss"9 yrvss"< yrvss.- yrvss"7 yrvss"6 yrvss.< yrvss_< yrvss_* yrvss_| yrvss`< yrvss`> yrvss."9 yrvss`9 yrvss/'
  - xfail: contraction followed by special characters is ignored

- - 'yrvss) yrvss] yrvss} yrvss'' yrvss" yrvss- yrvss, yrvss. yrvss; yrvss: yrvss? yrvss! yrvss@ yrvss# yrvss$ yrvss% yrvss^ yrvss& yrvss* yrvss( yrvss_ yrvss= yrvss+ yrvss[ yrvss{ yrvss\\ yrvss| yrvss< yrvss> yrvss` yrvss~ yrvss/'
  - ';yrvss"> ;yrvss.> ;yrvss_> ;yrvss,0 ;yrvss0 ;yrvss- ;yrvss1 ;yrvss4 ;yrvss; ;yrvss03 ;yrvss8 ;yrvss! ;yrvss`a ;yrvss_? ;yrvss`s ;yrvss.0 ;yrvss`5 ;yrvss`& ;yrvss"9 ;yrvss"< ;yrvss.- ;yrvss"7 ;yrvss"6 ;yrvss.< ;yrvss_< ;yrvss_* ;yrvss_| ;yrvss`< ;yrvss`> ;yrvss."9 ;yrvss`9 ;yrvss/'
  - xfail: non-contraction following special characters hyourselvess a missing grade 1 indicator

- - 'yourselvess-xl yourselvess-([{''"xl yourselvess-/xl yourselvess-$xl'
  - 'yrvss-xl yrvss-"<.<{''0xl yrvss-_/xl yrvss-`sxl'

- - 'yourselvess(xl yourselvess[xl yourselvess{xl yourselvess''xl yourselvess"xl yourselvess=([{''"-xl yourselvess([{''"-xl yourselvess/-xl yourselvess$-xl'
  - 'yrvss"<xl yrvss.<xl yrvss{xl yrvss''xl yrvss0xl yrvss"7"<.<{''0-xl yrvss"<.<{''0-xl yrvss/-xl yrvss`s-xl'
  - xfail: contraction followed by special characters followed by any letter is ignored
